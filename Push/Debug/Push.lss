
Push.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003a30  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000030  00800060  00003a30  00003aa4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000022f8  00000000  00000000  00003ad4  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c9c  00000000  00000000  00005dcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00006a68  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00006ba8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00006d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00008961  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000984c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000a5fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000a75c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000a9e9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000b1b7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e3       	ldi	r30, 0x30	; 48
      68:	fa e3       	ldi	r31, 0x3A	; 58
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 39       	cpi	r26, 0x90	; 144
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 c5 09 	call	0x138a	; 0x138a <main>
      7a:	0c 94 16 1d 	jmp	0x3a2c	; 0x3a2c <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 df 1c 	jmp	0x39be	; 0x39be <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 fb 1c 	jmp	0x39f6	; 0x39f6 <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 eb 1c 	jmp	0x39d6	; 0x39d6 <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 07 1d 	jmp	0x3a0e	; 0x3a0e <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 eb 1c 	jmp	0x39d6	; 0x39d6 <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 07 1d 	jmp	0x3a0e	; 0x3a0e <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 df 1c 	jmp	0x39be	; 0x39be <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__stack+0x2f>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__stack+0x45>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__stack+0x1d>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__stack+0x2f>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__stack+0x25>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__stack+0x2b>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__stack+0x45>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__stack+0x1b7>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__stack+0x41>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__stack+0x1b7>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__stack+0x57>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__stack+0x1b7>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__stack+0xc3>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__stack+0xb7>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__stack+0xdf>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__stack+0xf9>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__stack+0x7f>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__stack+0x13d>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__stack+0x131>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__stack+0x10f>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__stack+0x15b>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__stack+0x143>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__stack+0x19d>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__stack+0x19d>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__stack+0x19d>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__stack+0x1a7>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 fb 1c 	jmp	0x39f6	; 0x39f6 <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 eb 1c 	jmp	0x39d6	; 0x39d6 <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 07 1d 	jmp	0x3a0e	; 0x3a0e <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 eb 1c 	jmp	0x39d6	; 0x39d6 <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 07 1d 	jmp	0x3a0e	; 0x3a0e <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 eb 1c 	jmp	0x39d6	; 0x39d6 <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 07 1d 	jmp	0x3a0e	; 0x3a0e <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 ef 1c 	jmp	0x39de	; 0x39de <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 0b 1d 	jmp	0x3a16	; 0x3a16 <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__pack_f+0x178>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__pack_f+0x172>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__pack_f+0x17c>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__pack_f+0x114>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__pack_f+0x76>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__pack_f+0xca>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__pack_f+0x86>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__pack_f+0x7e>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__pack_f+0x9c>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__pack_f+0x94>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__pack_f+0xbe>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__pack_f+0xee>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__pack_f+0xf6>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__pack_f+0xf6>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__pack_f+0x10e>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__pack_f+0x162>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__pack_f+0x172>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__pack_f+0x144>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__pack_f+0x154>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__pack_f+0x14c>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__pack_f+0x162>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__pack_f+0x164>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__pack_f+0x17c>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_enumSetPortDirection>:
#include "STD_TYPES.h"
#include "BIT_MATH.h"


DIO_ErrorStatus DIO_enumSetPortDirection(u8 Copy_u8Port , u8 Copy_u8Direction)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	00 d0       	rcall	.+0      	; 0xb3c <DIO_enumSetPortDirection+0x6>
     b3c:	00 d0       	rcall	.+0      	; 0xb3e <DIO_enumSetPortDirection+0x8>
     b3e:	0f 92       	push	r0
     b40:	cd b7       	in	r28, 0x3d	; 61
     b42:	de b7       	in	r29, 0x3e	; 62
     b44:	8a 83       	std	Y+2, r24	; 0x02
     b46:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumState = DIO_OK;
     b48:	81 e0       	ldi	r24, 0x01	; 1
     b4a:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8Port)
     b4c:	8a 81       	ldd	r24, Y+2	; 0x02
     b4e:	28 2f       	mov	r18, r24
     b50:	30 e0       	ldi	r19, 0x00	; 0
     b52:	3d 83       	std	Y+5, r19	; 0x05
     b54:	2c 83       	std	Y+4, r18	; 0x04
     b56:	8c 81       	ldd	r24, Y+4	; 0x04
     b58:	9d 81       	ldd	r25, Y+5	; 0x05
     b5a:	81 30       	cpi	r24, 0x01	; 1
     b5c:	91 05       	cpc	r25, r1
     b5e:	d1 f0       	breq	.+52     	; 0xb94 <DIO_enumSetPortDirection+0x5e>
     b60:	2c 81       	ldd	r18, Y+4	; 0x04
     b62:	3d 81       	ldd	r19, Y+5	; 0x05
     b64:	22 30       	cpi	r18, 0x02	; 2
     b66:	31 05       	cpc	r19, r1
     b68:	2c f4       	brge	.+10     	; 0xb74 <DIO_enumSetPortDirection+0x3e>
     b6a:	8c 81       	ldd	r24, Y+4	; 0x04
     b6c:	9d 81       	ldd	r25, Y+5	; 0x05
     b6e:	00 97       	sbiw	r24, 0x00	; 0
     b70:	61 f0       	breq	.+24     	; 0xb8a <DIO_enumSetPortDirection+0x54>
     b72:	1f c0       	rjmp	.+62     	; 0xbb2 <DIO_enumSetPortDirection+0x7c>
     b74:	2c 81       	ldd	r18, Y+4	; 0x04
     b76:	3d 81       	ldd	r19, Y+5	; 0x05
     b78:	22 30       	cpi	r18, 0x02	; 2
     b7a:	31 05       	cpc	r19, r1
     b7c:	81 f0       	breq	.+32     	; 0xb9e <DIO_enumSetPortDirection+0x68>
     b7e:	8c 81       	ldd	r24, Y+4	; 0x04
     b80:	9d 81       	ldd	r25, Y+5	; 0x05
     b82:	83 30       	cpi	r24, 0x03	; 3
     b84:	91 05       	cpc	r25, r1
     b86:	81 f0       	breq	.+32     	; 0xba8 <DIO_enumSetPortDirection+0x72>
     b88:	14 c0       	rjmp	.+40     	; 0xbb2 <DIO_enumSetPortDirection+0x7c>
	{
	case DIO_PORTA : DDRA_REG = Copy_u8Direction; break;
     b8a:	ea e3       	ldi	r30, 0x3A	; 58
     b8c:	f0 e0       	ldi	r31, 0x00	; 0
     b8e:	8b 81       	ldd	r24, Y+3	; 0x03
     b90:	80 83       	st	Z, r24
     b92:	10 c0       	rjmp	.+32     	; 0xbb4 <DIO_enumSetPortDirection+0x7e>
	case DIO_PORTB : DDRB_REG = Copy_u8Direction; break;
     b94:	e7 e3       	ldi	r30, 0x37	; 55
     b96:	f0 e0       	ldi	r31, 0x00	; 0
     b98:	8b 81       	ldd	r24, Y+3	; 0x03
     b9a:	80 83       	st	Z, r24
     b9c:	0b c0       	rjmp	.+22     	; 0xbb4 <DIO_enumSetPortDirection+0x7e>
	case DIO_PORTC : DDRC_REG = Copy_u8Direction; break;
     b9e:	e4 e3       	ldi	r30, 0x34	; 52
     ba0:	f0 e0       	ldi	r31, 0x00	; 0
     ba2:	8b 81       	ldd	r24, Y+3	; 0x03
     ba4:	80 83       	st	Z, r24
     ba6:	06 c0       	rjmp	.+12     	; 0xbb4 <DIO_enumSetPortDirection+0x7e>
	case DIO_PORTD : DDRD_REG = Copy_u8Direction; break;
     ba8:	e1 e3       	ldi	r30, 0x31	; 49
     baa:	f0 e0       	ldi	r31, 0x00	; 0
     bac:	8b 81       	ldd	r24, Y+3	; 0x03
     bae:	80 83       	st	Z, r24
     bb0:	01 c0       	rjmp	.+2      	; 0xbb4 <DIO_enumSetPortDirection+0x7e>
	default : LOC_enumState = DIO_NOK ; break;
     bb2:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumState;
     bb4:	89 81       	ldd	r24, Y+1	; 0x01
}
     bb6:	0f 90       	pop	r0
     bb8:	0f 90       	pop	r0
     bba:	0f 90       	pop	r0
     bbc:	0f 90       	pop	r0
     bbe:	0f 90       	pop	r0
     bc0:	cf 91       	pop	r28
     bc2:	df 91       	pop	r29
     bc4:	08 95       	ret

00000bc6 <DIO_enumSetPinDirection>:
DIO_ErrorStatus DIO_enumSetPinDirection(u8 Copy_u8Port , u8 Copy_u8PinNumber , u8 Copy_u8Direction)
{
     bc6:	df 93       	push	r29
     bc8:	cf 93       	push	r28
     bca:	00 d0       	rcall	.+0      	; 0xbcc <DIO_enumSetPinDirection+0x6>
     bcc:	00 d0       	rcall	.+0      	; 0xbce <DIO_enumSetPinDirection+0x8>
     bce:	00 d0       	rcall	.+0      	; 0xbd0 <DIO_enumSetPinDirection+0xa>
     bd0:	cd b7       	in	r28, 0x3d	; 61
     bd2:	de b7       	in	r29, 0x3e	; 62
     bd4:	8a 83       	std	Y+2, r24	; 0x02
     bd6:	6b 83       	std	Y+3, r22	; 0x03
     bd8:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumState = DIO_OK;
     bda:	81 e0       	ldi	r24, 0x01	; 1
     bdc:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8PinNumber >= DIO_PIN0 && Copy_u8PinNumber <= DIO_PIN7)
     bde:	8b 81       	ldd	r24, Y+3	; 0x03
     be0:	88 30       	cpi	r24, 0x08	; 8
     be2:	08 f0       	brcs	.+2      	; 0xbe6 <DIO_enumSetPinDirection+0x20>
     be4:	e8 c0       	rjmp	.+464    	; 0xdb6 <DIO_enumSetPinDirection+0x1f0>
	{
		switch(Copy_u8Port)
     be6:	8a 81       	ldd	r24, Y+2	; 0x02
     be8:	28 2f       	mov	r18, r24
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	3e 83       	std	Y+6, r19	; 0x06
     bee:	2d 83       	std	Y+5, r18	; 0x05
     bf0:	8d 81       	ldd	r24, Y+5	; 0x05
     bf2:	9e 81       	ldd	r25, Y+6	; 0x06
     bf4:	81 30       	cpi	r24, 0x01	; 1
     bf6:	91 05       	cpc	r25, r1
     bf8:	09 f4       	brne	.+2      	; 0xbfc <DIO_enumSetPinDirection+0x36>
     bfa:	48 c0       	rjmp	.+144    	; 0xc8c <DIO_enumSetPinDirection+0xc6>
     bfc:	2d 81       	ldd	r18, Y+5	; 0x05
     bfe:	3e 81       	ldd	r19, Y+6	; 0x06
     c00:	22 30       	cpi	r18, 0x02	; 2
     c02:	31 05       	cpc	r19, r1
     c04:	2c f4       	brge	.+10     	; 0xc10 <DIO_enumSetPinDirection+0x4a>
     c06:	8d 81       	ldd	r24, Y+5	; 0x05
     c08:	9e 81       	ldd	r25, Y+6	; 0x06
     c0a:	00 97       	sbiw	r24, 0x00	; 0
     c0c:	71 f0       	breq	.+28     	; 0xc2a <DIO_enumSetPinDirection+0x64>
     c0e:	d1 c0       	rjmp	.+418    	; 0xdb2 <DIO_enumSetPinDirection+0x1ec>
     c10:	2d 81       	ldd	r18, Y+5	; 0x05
     c12:	3e 81       	ldd	r19, Y+6	; 0x06
     c14:	22 30       	cpi	r18, 0x02	; 2
     c16:	31 05       	cpc	r19, r1
     c18:	09 f4       	brne	.+2      	; 0xc1c <DIO_enumSetPinDirection+0x56>
     c1a:	69 c0       	rjmp	.+210    	; 0xcee <DIO_enumSetPinDirection+0x128>
     c1c:	8d 81       	ldd	r24, Y+5	; 0x05
     c1e:	9e 81       	ldd	r25, Y+6	; 0x06
     c20:	83 30       	cpi	r24, 0x03	; 3
     c22:	91 05       	cpc	r25, r1
     c24:	09 f4       	brne	.+2      	; 0xc28 <DIO_enumSetPinDirection+0x62>
     c26:	94 c0       	rjmp	.+296    	; 0xd50 <DIO_enumSetPinDirection+0x18a>
     c28:	c4 c0       	rjmp	.+392    	; 0xdb2 <DIO_enumSetPinDirection+0x1ec>
		{
		case DIO_PORTA :
			if(Copy_u8Direction == DIO_OUTPUT){SET_BIT(DDRA_REG,Copy_u8PinNumber);}
     c2a:	8c 81       	ldd	r24, Y+4	; 0x04
     c2c:	81 30       	cpi	r24, 0x01	; 1
     c2e:	a1 f4       	brne	.+40     	; 0xc58 <DIO_enumSetPinDirection+0x92>
     c30:	aa e3       	ldi	r26, 0x3A	; 58
     c32:	b0 e0       	ldi	r27, 0x00	; 0
     c34:	ea e3       	ldi	r30, 0x3A	; 58
     c36:	f0 e0       	ldi	r31, 0x00	; 0
     c38:	80 81       	ld	r24, Z
     c3a:	48 2f       	mov	r20, r24
     c3c:	8b 81       	ldd	r24, Y+3	; 0x03
     c3e:	28 2f       	mov	r18, r24
     c40:	30 e0       	ldi	r19, 0x00	; 0
     c42:	81 e0       	ldi	r24, 0x01	; 1
     c44:	90 e0       	ldi	r25, 0x00	; 0
     c46:	02 2e       	mov	r0, r18
     c48:	02 c0       	rjmp	.+4      	; 0xc4e <DIO_enumSetPinDirection+0x88>
     c4a:	88 0f       	add	r24, r24
     c4c:	99 1f       	adc	r25, r25
     c4e:	0a 94       	dec	r0
     c50:	e2 f7       	brpl	.-8      	; 0xc4a <DIO_enumSetPinDirection+0x84>
     c52:	84 2b       	or	r24, r20
     c54:	8c 93       	st	X, r24
     c56:	b0 c0       	rjmp	.+352    	; 0xdb8 <DIO_enumSetPinDirection+0x1f2>
			else if(Copy_u8Direction == DIO_INPUT)
     c58:	8c 81       	ldd	r24, Y+4	; 0x04
     c5a:	88 23       	and	r24, r24
     c5c:	a9 f4       	brne	.+42     	; 0xc88 <DIO_enumSetPinDirection+0xc2>
			{
				CLEAR_BIT(DDRA_REG,Copy_u8PinNumber);
     c5e:	aa e3       	ldi	r26, 0x3A	; 58
     c60:	b0 e0       	ldi	r27, 0x00	; 0
     c62:	ea e3       	ldi	r30, 0x3A	; 58
     c64:	f0 e0       	ldi	r31, 0x00	; 0
     c66:	80 81       	ld	r24, Z
     c68:	48 2f       	mov	r20, r24
     c6a:	8b 81       	ldd	r24, Y+3	; 0x03
     c6c:	28 2f       	mov	r18, r24
     c6e:	30 e0       	ldi	r19, 0x00	; 0
     c70:	81 e0       	ldi	r24, 0x01	; 1
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	02 2e       	mov	r0, r18
     c76:	02 c0       	rjmp	.+4      	; 0xc7c <DIO_enumSetPinDirection+0xb6>
     c78:	88 0f       	add	r24, r24
     c7a:	99 1f       	adc	r25, r25
     c7c:	0a 94       	dec	r0
     c7e:	e2 f7       	brpl	.-8      	; 0xc78 <DIO_enumSetPinDirection+0xb2>
     c80:	80 95       	com	r24
     c82:	84 23       	and	r24, r20
     c84:	8c 93       	st	X, r24
     c86:	98 c0       	rjmp	.+304    	; 0xdb8 <DIO_enumSetPinDirection+0x1f2>
			}
			else {LOC_enumState = DIO_NOK ;}
     c88:	19 82       	std	Y+1, r1	; 0x01
     c8a:	96 c0       	rjmp	.+300    	; 0xdb8 <DIO_enumSetPinDirection+0x1f2>
			break;
		case DIO_PORTB :
			if(Copy_u8Direction == DIO_OUTPUT){SET_BIT(DDRB_REG,Copy_u8PinNumber);}
     c8c:	8c 81       	ldd	r24, Y+4	; 0x04
     c8e:	81 30       	cpi	r24, 0x01	; 1
     c90:	a1 f4       	brne	.+40     	; 0xcba <DIO_enumSetPinDirection+0xf4>
     c92:	a7 e3       	ldi	r26, 0x37	; 55
     c94:	b0 e0       	ldi	r27, 0x00	; 0
     c96:	e7 e3       	ldi	r30, 0x37	; 55
     c98:	f0 e0       	ldi	r31, 0x00	; 0
     c9a:	80 81       	ld	r24, Z
     c9c:	48 2f       	mov	r20, r24
     c9e:	8b 81       	ldd	r24, Y+3	; 0x03
     ca0:	28 2f       	mov	r18, r24
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	02 2e       	mov	r0, r18
     caa:	02 c0       	rjmp	.+4      	; 0xcb0 <DIO_enumSetPinDirection+0xea>
     cac:	88 0f       	add	r24, r24
     cae:	99 1f       	adc	r25, r25
     cb0:	0a 94       	dec	r0
     cb2:	e2 f7       	brpl	.-8      	; 0xcac <DIO_enumSetPinDirection+0xe6>
     cb4:	84 2b       	or	r24, r20
     cb6:	8c 93       	st	X, r24
     cb8:	7f c0       	rjmp	.+254    	; 0xdb8 <DIO_enumSetPinDirection+0x1f2>
			else if(Copy_u8Direction == DIO_INPUT)
     cba:	8c 81       	ldd	r24, Y+4	; 0x04
     cbc:	88 23       	and	r24, r24
     cbe:	a9 f4       	brne	.+42     	; 0xcea <DIO_enumSetPinDirection+0x124>
			{CLEAR_BIT(DDRB_REG,Copy_u8PinNumber);}
     cc0:	a7 e3       	ldi	r26, 0x37	; 55
     cc2:	b0 e0       	ldi	r27, 0x00	; 0
     cc4:	e7 e3       	ldi	r30, 0x37	; 55
     cc6:	f0 e0       	ldi	r31, 0x00	; 0
     cc8:	80 81       	ld	r24, Z
     cca:	48 2f       	mov	r20, r24
     ccc:	8b 81       	ldd	r24, Y+3	; 0x03
     cce:	28 2f       	mov	r18, r24
     cd0:	30 e0       	ldi	r19, 0x00	; 0
     cd2:	81 e0       	ldi	r24, 0x01	; 1
     cd4:	90 e0       	ldi	r25, 0x00	; 0
     cd6:	02 2e       	mov	r0, r18
     cd8:	02 c0       	rjmp	.+4      	; 0xcde <DIO_enumSetPinDirection+0x118>
     cda:	88 0f       	add	r24, r24
     cdc:	99 1f       	adc	r25, r25
     cde:	0a 94       	dec	r0
     ce0:	e2 f7       	brpl	.-8      	; 0xcda <DIO_enumSetPinDirection+0x114>
     ce2:	80 95       	com	r24
     ce4:	84 23       	and	r24, r20
     ce6:	8c 93       	st	X, r24
     ce8:	67 c0       	rjmp	.+206    	; 0xdb8 <DIO_enumSetPinDirection+0x1f2>
			else {LOC_enumState = DIO_NOK ;}
     cea:	19 82       	std	Y+1, r1	; 0x01
     cec:	65 c0       	rjmp	.+202    	; 0xdb8 <DIO_enumSetPinDirection+0x1f2>
			break;
		case DIO_PORTC :
			if(Copy_u8Direction == DIO_OUTPUT){SET_BIT(DDRC_REG,Copy_u8PinNumber);}
     cee:	8c 81       	ldd	r24, Y+4	; 0x04
     cf0:	81 30       	cpi	r24, 0x01	; 1
     cf2:	a1 f4       	brne	.+40     	; 0xd1c <DIO_enumSetPinDirection+0x156>
     cf4:	a4 e3       	ldi	r26, 0x34	; 52
     cf6:	b0 e0       	ldi	r27, 0x00	; 0
     cf8:	e4 e3       	ldi	r30, 0x34	; 52
     cfa:	f0 e0       	ldi	r31, 0x00	; 0
     cfc:	80 81       	ld	r24, Z
     cfe:	48 2f       	mov	r20, r24
     d00:	8b 81       	ldd	r24, Y+3	; 0x03
     d02:	28 2f       	mov	r18, r24
     d04:	30 e0       	ldi	r19, 0x00	; 0
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	02 2e       	mov	r0, r18
     d0c:	02 c0       	rjmp	.+4      	; 0xd12 <DIO_enumSetPinDirection+0x14c>
     d0e:	88 0f       	add	r24, r24
     d10:	99 1f       	adc	r25, r25
     d12:	0a 94       	dec	r0
     d14:	e2 f7       	brpl	.-8      	; 0xd0e <DIO_enumSetPinDirection+0x148>
     d16:	84 2b       	or	r24, r20
     d18:	8c 93       	st	X, r24
     d1a:	4e c0       	rjmp	.+156    	; 0xdb8 <DIO_enumSetPinDirection+0x1f2>
			else if(Copy_u8Direction == DIO_INPUT)
     d1c:	8c 81       	ldd	r24, Y+4	; 0x04
     d1e:	88 23       	and	r24, r24
     d20:	a9 f4       	brne	.+42     	; 0xd4c <DIO_enumSetPinDirection+0x186>
			{CLEAR_BIT(DDRC_REG,Copy_u8PinNumber);}
     d22:	a4 e3       	ldi	r26, 0x34	; 52
     d24:	b0 e0       	ldi	r27, 0x00	; 0
     d26:	e4 e3       	ldi	r30, 0x34	; 52
     d28:	f0 e0       	ldi	r31, 0x00	; 0
     d2a:	80 81       	ld	r24, Z
     d2c:	48 2f       	mov	r20, r24
     d2e:	8b 81       	ldd	r24, Y+3	; 0x03
     d30:	28 2f       	mov	r18, r24
     d32:	30 e0       	ldi	r19, 0x00	; 0
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	02 2e       	mov	r0, r18
     d3a:	02 c0       	rjmp	.+4      	; 0xd40 <DIO_enumSetPinDirection+0x17a>
     d3c:	88 0f       	add	r24, r24
     d3e:	99 1f       	adc	r25, r25
     d40:	0a 94       	dec	r0
     d42:	e2 f7       	brpl	.-8      	; 0xd3c <DIO_enumSetPinDirection+0x176>
     d44:	80 95       	com	r24
     d46:	84 23       	and	r24, r20
     d48:	8c 93       	st	X, r24
     d4a:	36 c0       	rjmp	.+108    	; 0xdb8 <DIO_enumSetPinDirection+0x1f2>
			else {LOC_enumState = DIO_NOK ;}
     d4c:	19 82       	std	Y+1, r1	; 0x01
     d4e:	34 c0       	rjmp	.+104    	; 0xdb8 <DIO_enumSetPinDirection+0x1f2>
			break;
		case DIO_PORTD :
			if(Copy_u8Direction == DIO_OUTPUT){SET_BIT(DDRD_REG,Copy_u8PinNumber);}
     d50:	8c 81       	ldd	r24, Y+4	; 0x04
     d52:	81 30       	cpi	r24, 0x01	; 1
     d54:	a1 f4       	brne	.+40     	; 0xd7e <DIO_enumSetPinDirection+0x1b8>
     d56:	a1 e3       	ldi	r26, 0x31	; 49
     d58:	b0 e0       	ldi	r27, 0x00	; 0
     d5a:	e1 e3       	ldi	r30, 0x31	; 49
     d5c:	f0 e0       	ldi	r31, 0x00	; 0
     d5e:	80 81       	ld	r24, Z
     d60:	48 2f       	mov	r20, r24
     d62:	8b 81       	ldd	r24, Y+3	; 0x03
     d64:	28 2f       	mov	r18, r24
     d66:	30 e0       	ldi	r19, 0x00	; 0
     d68:	81 e0       	ldi	r24, 0x01	; 1
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	02 2e       	mov	r0, r18
     d6e:	02 c0       	rjmp	.+4      	; 0xd74 <DIO_enumSetPinDirection+0x1ae>
     d70:	88 0f       	add	r24, r24
     d72:	99 1f       	adc	r25, r25
     d74:	0a 94       	dec	r0
     d76:	e2 f7       	brpl	.-8      	; 0xd70 <DIO_enumSetPinDirection+0x1aa>
     d78:	84 2b       	or	r24, r20
     d7a:	8c 93       	st	X, r24
     d7c:	1d c0       	rjmp	.+58     	; 0xdb8 <DIO_enumSetPinDirection+0x1f2>
			else if(Copy_u8Direction == DIO_INPUT)
     d7e:	8c 81       	ldd	r24, Y+4	; 0x04
     d80:	88 23       	and	r24, r24
     d82:	a9 f4       	brne	.+42     	; 0xdae <DIO_enumSetPinDirection+0x1e8>
			{CLEAR_BIT(DDRD_REG,Copy_u8PinNumber);}
     d84:	a1 e3       	ldi	r26, 0x31	; 49
     d86:	b0 e0       	ldi	r27, 0x00	; 0
     d88:	e1 e3       	ldi	r30, 0x31	; 49
     d8a:	f0 e0       	ldi	r31, 0x00	; 0
     d8c:	80 81       	ld	r24, Z
     d8e:	48 2f       	mov	r20, r24
     d90:	8b 81       	ldd	r24, Y+3	; 0x03
     d92:	28 2f       	mov	r18, r24
     d94:	30 e0       	ldi	r19, 0x00	; 0
     d96:	81 e0       	ldi	r24, 0x01	; 1
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	02 2e       	mov	r0, r18
     d9c:	02 c0       	rjmp	.+4      	; 0xda2 <DIO_enumSetPinDirection+0x1dc>
     d9e:	88 0f       	add	r24, r24
     da0:	99 1f       	adc	r25, r25
     da2:	0a 94       	dec	r0
     da4:	e2 f7       	brpl	.-8      	; 0xd9e <DIO_enumSetPinDirection+0x1d8>
     da6:	80 95       	com	r24
     da8:	84 23       	and	r24, r20
     daa:	8c 93       	st	X, r24
     dac:	05 c0       	rjmp	.+10     	; 0xdb8 <DIO_enumSetPinDirection+0x1f2>
			else {LOC_enumState = DIO_NOK ;}
     dae:	19 82       	std	Y+1, r1	; 0x01
     db0:	03 c0       	rjmp	.+6      	; 0xdb8 <DIO_enumSetPinDirection+0x1f2>
			break;
		default : LOC_enumState = DIO_NOK ; break;
     db2:	19 82       	std	Y+1, r1	; 0x01
     db4:	01 c0       	rjmp	.+2      	; 0xdb8 <DIO_enumSetPinDirection+0x1f2>
		}
	}
	else{LOC_enumState = DIO_NOK ;}
     db6:	19 82       	std	Y+1, r1	; 0x01
	return LOC_enumState;
     db8:	89 81       	ldd	r24, Y+1	; 0x01
}
     dba:	26 96       	adiw	r28, 0x06	; 6
     dbc:	0f b6       	in	r0, 0x3f	; 63
     dbe:	f8 94       	cli
     dc0:	de bf       	out	0x3e, r29	; 62
     dc2:	0f be       	out	0x3f, r0	; 63
     dc4:	cd bf       	out	0x3d, r28	; 61
     dc6:	cf 91       	pop	r28
     dc8:	df 91       	pop	r29
     dca:	08 95       	ret

00000dcc <DIO_enumSetPortValue>:
DIO_ErrorStatus DIO_enumSetPortValue (u8 Copy_u8Port , u8 Copy_u8Value)
{
     dcc:	df 93       	push	r29
     dce:	cf 93       	push	r28
     dd0:	00 d0       	rcall	.+0      	; 0xdd2 <DIO_enumSetPortValue+0x6>
     dd2:	00 d0       	rcall	.+0      	; 0xdd4 <DIO_enumSetPortValue+0x8>
     dd4:	0f 92       	push	r0
     dd6:	cd b7       	in	r28, 0x3d	; 61
     dd8:	de b7       	in	r29, 0x3e	; 62
     dda:	8a 83       	std	Y+2, r24	; 0x02
     ddc:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumState = DIO_OK;
     dde:	81 e0       	ldi	r24, 0x01	; 1
     de0:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8Port)
     de2:	8a 81       	ldd	r24, Y+2	; 0x02
     de4:	28 2f       	mov	r18, r24
     de6:	30 e0       	ldi	r19, 0x00	; 0
     de8:	3d 83       	std	Y+5, r19	; 0x05
     dea:	2c 83       	std	Y+4, r18	; 0x04
     dec:	8c 81       	ldd	r24, Y+4	; 0x04
     dee:	9d 81       	ldd	r25, Y+5	; 0x05
     df0:	81 30       	cpi	r24, 0x01	; 1
     df2:	91 05       	cpc	r25, r1
     df4:	d1 f0       	breq	.+52     	; 0xe2a <DIO_enumSetPortValue+0x5e>
     df6:	2c 81       	ldd	r18, Y+4	; 0x04
     df8:	3d 81       	ldd	r19, Y+5	; 0x05
     dfa:	22 30       	cpi	r18, 0x02	; 2
     dfc:	31 05       	cpc	r19, r1
     dfe:	2c f4       	brge	.+10     	; 0xe0a <DIO_enumSetPortValue+0x3e>
     e00:	8c 81       	ldd	r24, Y+4	; 0x04
     e02:	9d 81       	ldd	r25, Y+5	; 0x05
     e04:	00 97       	sbiw	r24, 0x00	; 0
     e06:	61 f0       	breq	.+24     	; 0xe20 <DIO_enumSetPortValue+0x54>
     e08:	1f c0       	rjmp	.+62     	; 0xe48 <DIO_enumSetPortValue+0x7c>
     e0a:	2c 81       	ldd	r18, Y+4	; 0x04
     e0c:	3d 81       	ldd	r19, Y+5	; 0x05
     e0e:	22 30       	cpi	r18, 0x02	; 2
     e10:	31 05       	cpc	r19, r1
     e12:	81 f0       	breq	.+32     	; 0xe34 <DIO_enumSetPortValue+0x68>
     e14:	8c 81       	ldd	r24, Y+4	; 0x04
     e16:	9d 81       	ldd	r25, Y+5	; 0x05
     e18:	83 30       	cpi	r24, 0x03	; 3
     e1a:	91 05       	cpc	r25, r1
     e1c:	81 f0       	breq	.+32     	; 0xe3e <DIO_enumSetPortValue+0x72>
     e1e:	14 c0       	rjmp	.+40     	; 0xe48 <DIO_enumSetPortValue+0x7c>
	{
	case DIO_PORTA : PORTA_REG = Copy_u8Value; break;
     e20:	eb e3       	ldi	r30, 0x3B	; 59
     e22:	f0 e0       	ldi	r31, 0x00	; 0
     e24:	8b 81       	ldd	r24, Y+3	; 0x03
     e26:	80 83       	st	Z, r24
     e28:	10 c0       	rjmp	.+32     	; 0xe4a <DIO_enumSetPortValue+0x7e>
	case DIO_PORTB : PORTB_REG = Copy_u8Value; break;
     e2a:	e8 e3       	ldi	r30, 0x38	; 56
     e2c:	f0 e0       	ldi	r31, 0x00	; 0
     e2e:	8b 81       	ldd	r24, Y+3	; 0x03
     e30:	80 83       	st	Z, r24
     e32:	0b c0       	rjmp	.+22     	; 0xe4a <DIO_enumSetPortValue+0x7e>
	case DIO_PORTC : PORTC_REG = Copy_u8Value; break;
     e34:	e5 e3       	ldi	r30, 0x35	; 53
     e36:	f0 e0       	ldi	r31, 0x00	; 0
     e38:	8b 81       	ldd	r24, Y+3	; 0x03
     e3a:	80 83       	st	Z, r24
     e3c:	06 c0       	rjmp	.+12     	; 0xe4a <DIO_enumSetPortValue+0x7e>
	case DIO_PORTD : PORTD_REG = Copy_u8Value; break;
     e3e:	e2 e3       	ldi	r30, 0x32	; 50
     e40:	f0 e0       	ldi	r31, 0x00	; 0
     e42:	8b 81       	ldd	r24, Y+3	; 0x03
     e44:	80 83       	st	Z, r24
     e46:	01 c0       	rjmp	.+2      	; 0xe4a <DIO_enumSetPortValue+0x7e>
	default : LOC_enumState = DIO_NOK ; break;
     e48:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumState;
     e4a:	89 81       	ldd	r24, Y+1	; 0x01
}
     e4c:	0f 90       	pop	r0
     e4e:	0f 90       	pop	r0
     e50:	0f 90       	pop	r0
     e52:	0f 90       	pop	r0
     e54:	0f 90       	pop	r0
     e56:	cf 91       	pop	r28
     e58:	df 91       	pop	r29
     e5a:	08 95       	ret

00000e5c <DIO_enumGetPortValue>:
DIO_ErrorStatus DIO_enumGetPortValue (u8 Copy_u8Port , u8 *Copy_Data)
{
     e5c:	df 93       	push	r29
     e5e:	cf 93       	push	r28
     e60:	00 d0       	rcall	.+0      	; 0xe62 <DIO_enumGetPortValue+0x6>
     e62:	00 d0       	rcall	.+0      	; 0xe64 <DIO_enumGetPortValue+0x8>
     e64:	00 d0       	rcall	.+0      	; 0xe66 <DIO_enumGetPortValue+0xa>
     e66:	cd b7       	in	r28, 0x3d	; 61
     e68:	de b7       	in	r29, 0x3e	; 62
     e6a:	8a 83       	std	Y+2, r24	; 0x02
     e6c:	7c 83       	std	Y+4, r23	; 0x04
     e6e:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumState = DIO_OK;
     e70:	81 e0       	ldi	r24, 0x01	; 1
     e72:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_u8Port)
     e74:	8a 81       	ldd	r24, Y+2	; 0x02
     e76:	28 2f       	mov	r18, r24
     e78:	30 e0       	ldi	r19, 0x00	; 0
     e7a:	3e 83       	std	Y+6, r19	; 0x06
     e7c:	2d 83       	std	Y+5, r18	; 0x05
     e7e:	8d 81       	ldd	r24, Y+5	; 0x05
     e80:	9e 81       	ldd	r25, Y+6	; 0x06
     e82:	81 30       	cpi	r24, 0x01	; 1
     e84:	91 05       	cpc	r25, r1
     e86:	e1 f0       	breq	.+56     	; 0xec0 <DIO_enumGetPortValue+0x64>
     e88:	2d 81       	ldd	r18, Y+5	; 0x05
     e8a:	3e 81       	ldd	r19, Y+6	; 0x06
     e8c:	22 30       	cpi	r18, 0x02	; 2
     e8e:	31 05       	cpc	r19, r1
     e90:	2c f4       	brge	.+10     	; 0xe9c <DIO_enumGetPortValue+0x40>
     e92:	8d 81       	ldd	r24, Y+5	; 0x05
     e94:	9e 81       	ldd	r25, Y+6	; 0x06
     e96:	00 97       	sbiw	r24, 0x00	; 0
     e98:	61 f0       	breq	.+24     	; 0xeb2 <DIO_enumGetPortValue+0x56>
     e9a:	27 c0       	rjmp	.+78     	; 0xeea <DIO_enumGetPortValue+0x8e>
     e9c:	2d 81       	ldd	r18, Y+5	; 0x05
     e9e:	3e 81       	ldd	r19, Y+6	; 0x06
     ea0:	22 30       	cpi	r18, 0x02	; 2
     ea2:	31 05       	cpc	r19, r1
     ea4:	a1 f0       	breq	.+40     	; 0xece <DIO_enumGetPortValue+0x72>
     ea6:	8d 81       	ldd	r24, Y+5	; 0x05
     ea8:	9e 81       	ldd	r25, Y+6	; 0x06
     eaa:	83 30       	cpi	r24, 0x03	; 3
     eac:	91 05       	cpc	r25, r1
     eae:	b1 f0       	breq	.+44     	; 0xedc <DIO_enumGetPortValue+0x80>
     eb0:	1c c0       	rjmp	.+56     	; 0xeea <DIO_enumGetPortValue+0x8e>
	{
	case DIO_PORTA : *Copy_Data = PINA_REG; break;
     eb2:	e9 e3       	ldi	r30, 0x39	; 57
     eb4:	f0 e0       	ldi	r31, 0x00	; 0
     eb6:	80 81       	ld	r24, Z
     eb8:	eb 81       	ldd	r30, Y+3	; 0x03
     eba:	fc 81       	ldd	r31, Y+4	; 0x04
     ebc:	80 83       	st	Z, r24
     ebe:	16 c0       	rjmp	.+44     	; 0xeec <DIO_enumGetPortValue+0x90>
	case DIO_PORTB : *Copy_Data = PINB_REG; break;
     ec0:	e6 e3       	ldi	r30, 0x36	; 54
     ec2:	f0 e0       	ldi	r31, 0x00	; 0
     ec4:	80 81       	ld	r24, Z
     ec6:	eb 81       	ldd	r30, Y+3	; 0x03
     ec8:	fc 81       	ldd	r31, Y+4	; 0x04
     eca:	80 83       	st	Z, r24
     ecc:	0f c0       	rjmp	.+30     	; 0xeec <DIO_enumGetPortValue+0x90>
	case DIO_PORTC : *Copy_Data = PINC_REG; break;
     ece:	e3 e3       	ldi	r30, 0x33	; 51
     ed0:	f0 e0       	ldi	r31, 0x00	; 0
     ed2:	80 81       	ld	r24, Z
     ed4:	eb 81       	ldd	r30, Y+3	; 0x03
     ed6:	fc 81       	ldd	r31, Y+4	; 0x04
     ed8:	80 83       	st	Z, r24
     eda:	08 c0       	rjmp	.+16     	; 0xeec <DIO_enumGetPortValue+0x90>
	case DIO_PORTD : *Copy_Data = PIND_REG; break;
     edc:	e0 e3       	ldi	r30, 0x30	; 48
     ede:	f0 e0       	ldi	r31, 0x00	; 0
     ee0:	80 81       	ld	r24, Z
     ee2:	eb 81       	ldd	r30, Y+3	; 0x03
     ee4:	fc 81       	ldd	r31, Y+4	; 0x04
     ee6:	80 83       	st	Z, r24
     ee8:	01 c0       	rjmp	.+2      	; 0xeec <DIO_enumGetPortValue+0x90>
	default : LOC_enumState = DIO_NOK ; break;
     eea:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumState;
     eec:	89 81       	ldd	r24, Y+1	; 0x01
}
     eee:	26 96       	adiw	r28, 0x06	; 6
     ef0:	0f b6       	in	r0, 0x3f	; 63
     ef2:	f8 94       	cli
     ef4:	de bf       	out	0x3e, r29	; 62
     ef6:	0f be       	out	0x3f, r0	; 63
     ef8:	cd bf       	out	0x3d, r28	; 61
     efa:	cf 91       	pop	r28
     efc:	df 91       	pop	r29
     efe:	08 95       	ret

00000f00 <DIO_enumSetPinValue>:


DIO_ErrorStatus DIO_enumSetPinValue (u8 Copy_u8Port , u8 Copy_u8PinNumber , u8 Copy_u8Value)
{
     f00:	df 93       	push	r29
     f02:	cf 93       	push	r28
     f04:	00 d0       	rcall	.+0      	; 0xf06 <DIO_enumSetPinValue+0x6>
     f06:	00 d0       	rcall	.+0      	; 0xf08 <DIO_enumSetPinValue+0x8>
     f08:	00 d0       	rcall	.+0      	; 0xf0a <DIO_enumSetPinValue+0xa>
     f0a:	cd b7       	in	r28, 0x3d	; 61
     f0c:	de b7       	in	r29, 0x3e	; 62
     f0e:	8a 83       	std	Y+2, r24	; 0x02
     f10:	6b 83       	std	Y+3, r22	; 0x03
     f12:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumState = DIO_OK;
     f14:	81 e0       	ldi	r24, 0x01	; 1
     f16:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8PinNumber >= DIO_PIN0 && Copy_u8PinNumber <= DIO_PIN7)
     f18:	8b 81       	ldd	r24, Y+3	; 0x03
     f1a:	88 30       	cpi	r24, 0x08	; 8
     f1c:	08 f0       	brcs	.+2      	; 0xf20 <DIO_enumSetPinValue+0x20>
     f1e:	e8 c0       	rjmp	.+464    	; 0x10f0 <DIO_enumSetPinValue+0x1f0>
	{
		switch(Copy_u8Port)
     f20:	8a 81       	ldd	r24, Y+2	; 0x02
     f22:	28 2f       	mov	r18, r24
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	3e 83       	std	Y+6, r19	; 0x06
     f28:	2d 83       	std	Y+5, r18	; 0x05
     f2a:	8d 81       	ldd	r24, Y+5	; 0x05
     f2c:	9e 81       	ldd	r25, Y+6	; 0x06
     f2e:	81 30       	cpi	r24, 0x01	; 1
     f30:	91 05       	cpc	r25, r1
     f32:	09 f4       	brne	.+2      	; 0xf36 <DIO_enumSetPinValue+0x36>
     f34:	48 c0       	rjmp	.+144    	; 0xfc6 <DIO_enumSetPinValue+0xc6>
     f36:	2d 81       	ldd	r18, Y+5	; 0x05
     f38:	3e 81       	ldd	r19, Y+6	; 0x06
     f3a:	22 30       	cpi	r18, 0x02	; 2
     f3c:	31 05       	cpc	r19, r1
     f3e:	2c f4       	brge	.+10     	; 0xf4a <DIO_enumSetPinValue+0x4a>
     f40:	8d 81       	ldd	r24, Y+5	; 0x05
     f42:	9e 81       	ldd	r25, Y+6	; 0x06
     f44:	00 97       	sbiw	r24, 0x00	; 0
     f46:	71 f0       	breq	.+28     	; 0xf64 <DIO_enumSetPinValue+0x64>
     f48:	d1 c0       	rjmp	.+418    	; 0x10ec <DIO_enumSetPinValue+0x1ec>
     f4a:	2d 81       	ldd	r18, Y+5	; 0x05
     f4c:	3e 81       	ldd	r19, Y+6	; 0x06
     f4e:	22 30       	cpi	r18, 0x02	; 2
     f50:	31 05       	cpc	r19, r1
     f52:	09 f4       	brne	.+2      	; 0xf56 <DIO_enumSetPinValue+0x56>
     f54:	69 c0       	rjmp	.+210    	; 0x1028 <DIO_enumSetPinValue+0x128>
     f56:	8d 81       	ldd	r24, Y+5	; 0x05
     f58:	9e 81       	ldd	r25, Y+6	; 0x06
     f5a:	83 30       	cpi	r24, 0x03	; 3
     f5c:	91 05       	cpc	r25, r1
     f5e:	09 f4       	brne	.+2      	; 0xf62 <DIO_enumSetPinValue+0x62>
     f60:	94 c0       	rjmp	.+296    	; 0x108a <DIO_enumSetPinValue+0x18a>
     f62:	c4 c0       	rjmp	.+392    	; 0x10ec <DIO_enumSetPinValue+0x1ec>
		{
		case DIO_PORTA :
			if(Copy_u8Value == DIO_HIGH){SET_BIT(PORTA_REG,Copy_u8PinNumber);}
     f64:	8c 81       	ldd	r24, Y+4	; 0x04
     f66:	81 30       	cpi	r24, 0x01	; 1
     f68:	a1 f4       	brne	.+40     	; 0xf92 <DIO_enumSetPinValue+0x92>
     f6a:	ab e3       	ldi	r26, 0x3B	; 59
     f6c:	b0 e0       	ldi	r27, 0x00	; 0
     f6e:	eb e3       	ldi	r30, 0x3B	; 59
     f70:	f0 e0       	ldi	r31, 0x00	; 0
     f72:	80 81       	ld	r24, Z
     f74:	48 2f       	mov	r20, r24
     f76:	8b 81       	ldd	r24, Y+3	; 0x03
     f78:	28 2f       	mov	r18, r24
     f7a:	30 e0       	ldi	r19, 0x00	; 0
     f7c:	81 e0       	ldi	r24, 0x01	; 1
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	02 2e       	mov	r0, r18
     f82:	02 c0       	rjmp	.+4      	; 0xf88 <DIO_enumSetPinValue+0x88>
     f84:	88 0f       	add	r24, r24
     f86:	99 1f       	adc	r25, r25
     f88:	0a 94       	dec	r0
     f8a:	e2 f7       	brpl	.-8      	; 0xf84 <DIO_enumSetPinValue+0x84>
     f8c:	84 2b       	or	r24, r20
     f8e:	8c 93       	st	X, r24
     f90:	b0 c0       	rjmp	.+352    	; 0x10f2 <DIO_enumSetPinValue+0x1f2>
			else if(Copy_u8Value == DIO_LOW){CLEAR_BIT(PORTA_REG,Copy_u8PinNumber);}
     f92:	8c 81       	ldd	r24, Y+4	; 0x04
     f94:	88 23       	and	r24, r24
     f96:	a9 f4       	brne	.+42     	; 0xfc2 <DIO_enumSetPinValue+0xc2>
     f98:	ab e3       	ldi	r26, 0x3B	; 59
     f9a:	b0 e0       	ldi	r27, 0x00	; 0
     f9c:	eb e3       	ldi	r30, 0x3B	; 59
     f9e:	f0 e0       	ldi	r31, 0x00	; 0
     fa0:	80 81       	ld	r24, Z
     fa2:	48 2f       	mov	r20, r24
     fa4:	8b 81       	ldd	r24, Y+3	; 0x03
     fa6:	28 2f       	mov	r18, r24
     fa8:	30 e0       	ldi	r19, 0x00	; 0
     faa:	81 e0       	ldi	r24, 0x01	; 1
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	02 2e       	mov	r0, r18
     fb0:	02 c0       	rjmp	.+4      	; 0xfb6 <DIO_enumSetPinValue+0xb6>
     fb2:	88 0f       	add	r24, r24
     fb4:	99 1f       	adc	r25, r25
     fb6:	0a 94       	dec	r0
     fb8:	e2 f7       	brpl	.-8      	; 0xfb2 <DIO_enumSetPinValue+0xb2>
     fba:	80 95       	com	r24
     fbc:	84 23       	and	r24, r20
     fbe:	8c 93       	st	X, r24
     fc0:	98 c0       	rjmp	.+304    	; 0x10f2 <DIO_enumSetPinValue+0x1f2>
			else {LOC_enumState = DIO_NOK ;}
     fc2:	19 82       	std	Y+1, r1	; 0x01
     fc4:	96 c0       	rjmp	.+300    	; 0x10f2 <DIO_enumSetPinValue+0x1f2>
			break;
		case DIO_PORTB :
			if(Copy_u8Value == DIO_HIGH){SET_BIT(PORTB_REG,Copy_u8PinNumber);}
     fc6:	8c 81       	ldd	r24, Y+4	; 0x04
     fc8:	81 30       	cpi	r24, 0x01	; 1
     fca:	a1 f4       	brne	.+40     	; 0xff4 <DIO_enumSetPinValue+0xf4>
     fcc:	a8 e3       	ldi	r26, 0x38	; 56
     fce:	b0 e0       	ldi	r27, 0x00	; 0
     fd0:	e8 e3       	ldi	r30, 0x38	; 56
     fd2:	f0 e0       	ldi	r31, 0x00	; 0
     fd4:	80 81       	ld	r24, Z
     fd6:	48 2f       	mov	r20, r24
     fd8:	8b 81       	ldd	r24, Y+3	; 0x03
     fda:	28 2f       	mov	r18, r24
     fdc:	30 e0       	ldi	r19, 0x00	; 0
     fde:	81 e0       	ldi	r24, 0x01	; 1
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	02 2e       	mov	r0, r18
     fe4:	02 c0       	rjmp	.+4      	; 0xfea <DIO_enumSetPinValue+0xea>
     fe6:	88 0f       	add	r24, r24
     fe8:	99 1f       	adc	r25, r25
     fea:	0a 94       	dec	r0
     fec:	e2 f7       	brpl	.-8      	; 0xfe6 <DIO_enumSetPinValue+0xe6>
     fee:	84 2b       	or	r24, r20
     ff0:	8c 93       	st	X, r24
     ff2:	7f c0       	rjmp	.+254    	; 0x10f2 <DIO_enumSetPinValue+0x1f2>
			else if(Copy_u8Value == DIO_LOW){CLEAR_BIT(PORTB_REG,Copy_u8PinNumber);}
     ff4:	8c 81       	ldd	r24, Y+4	; 0x04
     ff6:	88 23       	and	r24, r24
     ff8:	a9 f4       	brne	.+42     	; 0x1024 <DIO_enumSetPinValue+0x124>
     ffa:	a8 e3       	ldi	r26, 0x38	; 56
     ffc:	b0 e0       	ldi	r27, 0x00	; 0
     ffe:	e8 e3       	ldi	r30, 0x38	; 56
    1000:	f0 e0       	ldi	r31, 0x00	; 0
    1002:	80 81       	ld	r24, Z
    1004:	48 2f       	mov	r20, r24
    1006:	8b 81       	ldd	r24, Y+3	; 0x03
    1008:	28 2f       	mov	r18, r24
    100a:	30 e0       	ldi	r19, 0x00	; 0
    100c:	81 e0       	ldi	r24, 0x01	; 1
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	02 2e       	mov	r0, r18
    1012:	02 c0       	rjmp	.+4      	; 0x1018 <DIO_enumSetPinValue+0x118>
    1014:	88 0f       	add	r24, r24
    1016:	99 1f       	adc	r25, r25
    1018:	0a 94       	dec	r0
    101a:	e2 f7       	brpl	.-8      	; 0x1014 <DIO_enumSetPinValue+0x114>
    101c:	80 95       	com	r24
    101e:	84 23       	and	r24, r20
    1020:	8c 93       	st	X, r24
    1022:	67 c0       	rjmp	.+206    	; 0x10f2 <DIO_enumSetPinValue+0x1f2>
			else {LOC_enumState = DIO_NOK ;}
    1024:	19 82       	std	Y+1, r1	; 0x01
    1026:	65 c0       	rjmp	.+202    	; 0x10f2 <DIO_enumSetPinValue+0x1f2>
			break;
		case DIO_PORTC :
			if(Copy_u8Value == DIO_HIGH){SET_BIT(PORTC_REG,Copy_u8PinNumber);}
    1028:	8c 81       	ldd	r24, Y+4	; 0x04
    102a:	81 30       	cpi	r24, 0x01	; 1
    102c:	a1 f4       	brne	.+40     	; 0x1056 <DIO_enumSetPinValue+0x156>
    102e:	a5 e3       	ldi	r26, 0x35	; 53
    1030:	b0 e0       	ldi	r27, 0x00	; 0
    1032:	e5 e3       	ldi	r30, 0x35	; 53
    1034:	f0 e0       	ldi	r31, 0x00	; 0
    1036:	80 81       	ld	r24, Z
    1038:	48 2f       	mov	r20, r24
    103a:	8b 81       	ldd	r24, Y+3	; 0x03
    103c:	28 2f       	mov	r18, r24
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	81 e0       	ldi	r24, 0x01	; 1
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	02 2e       	mov	r0, r18
    1046:	02 c0       	rjmp	.+4      	; 0x104c <DIO_enumSetPinValue+0x14c>
    1048:	88 0f       	add	r24, r24
    104a:	99 1f       	adc	r25, r25
    104c:	0a 94       	dec	r0
    104e:	e2 f7       	brpl	.-8      	; 0x1048 <DIO_enumSetPinValue+0x148>
    1050:	84 2b       	or	r24, r20
    1052:	8c 93       	st	X, r24
    1054:	4e c0       	rjmp	.+156    	; 0x10f2 <DIO_enumSetPinValue+0x1f2>
			else if(Copy_u8Value == DIO_LOW){CLEAR_BIT(PORTC_REG,Copy_u8PinNumber);}
    1056:	8c 81       	ldd	r24, Y+4	; 0x04
    1058:	88 23       	and	r24, r24
    105a:	a9 f4       	brne	.+42     	; 0x1086 <DIO_enumSetPinValue+0x186>
    105c:	a5 e3       	ldi	r26, 0x35	; 53
    105e:	b0 e0       	ldi	r27, 0x00	; 0
    1060:	e5 e3       	ldi	r30, 0x35	; 53
    1062:	f0 e0       	ldi	r31, 0x00	; 0
    1064:	80 81       	ld	r24, Z
    1066:	48 2f       	mov	r20, r24
    1068:	8b 81       	ldd	r24, Y+3	; 0x03
    106a:	28 2f       	mov	r18, r24
    106c:	30 e0       	ldi	r19, 0x00	; 0
    106e:	81 e0       	ldi	r24, 0x01	; 1
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	02 2e       	mov	r0, r18
    1074:	02 c0       	rjmp	.+4      	; 0x107a <DIO_enumSetPinValue+0x17a>
    1076:	88 0f       	add	r24, r24
    1078:	99 1f       	adc	r25, r25
    107a:	0a 94       	dec	r0
    107c:	e2 f7       	brpl	.-8      	; 0x1076 <DIO_enumSetPinValue+0x176>
    107e:	80 95       	com	r24
    1080:	84 23       	and	r24, r20
    1082:	8c 93       	st	X, r24
    1084:	36 c0       	rjmp	.+108    	; 0x10f2 <DIO_enumSetPinValue+0x1f2>
			else {LOC_enumState = DIO_NOK ;}
    1086:	19 82       	std	Y+1, r1	; 0x01
    1088:	34 c0       	rjmp	.+104    	; 0x10f2 <DIO_enumSetPinValue+0x1f2>
			break;
		case DIO_PORTD :
			if(Copy_u8Value == DIO_HIGH){SET_BIT(PORTD_REG,Copy_u8PinNumber);}
    108a:	8c 81       	ldd	r24, Y+4	; 0x04
    108c:	81 30       	cpi	r24, 0x01	; 1
    108e:	a1 f4       	brne	.+40     	; 0x10b8 <DIO_enumSetPinValue+0x1b8>
    1090:	a2 e3       	ldi	r26, 0x32	; 50
    1092:	b0 e0       	ldi	r27, 0x00	; 0
    1094:	e2 e3       	ldi	r30, 0x32	; 50
    1096:	f0 e0       	ldi	r31, 0x00	; 0
    1098:	80 81       	ld	r24, Z
    109a:	48 2f       	mov	r20, r24
    109c:	8b 81       	ldd	r24, Y+3	; 0x03
    109e:	28 2f       	mov	r18, r24
    10a0:	30 e0       	ldi	r19, 0x00	; 0
    10a2:	81 e0       	ldi	r24, 0x01	; 1
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	02 2e       	mov	r0, r18
    10a8:	02 c0       	rjmp	.+4      	; 0x10ae <DIO_enumSetPinValue+0x1ae>
    10aa:	88 0f       	add	r24, r24
    10ac:	99 1f       	adc	r25, r25
    10ae:	0a 94       	dec	r0
    10b0:	e2 f7       	brpl	.-8      	; 0x10aa <DIO_enumSetPinValue+0x1aa>
    10b2:	84 2b       	or	r24, r20
    10b4:	8c 93       	st	X, r24
    10b6:	1d c0       	rjmp	.+58     	; 0x10f2 <DIO_enumSetPinValue+0x1f2>
			else if(Copy_u8Value == DIO_LOW){CLEAR_BIT(PORTD_REG,Copy_u8PinNumber);}
    10b8:	8c 81       	ldd	r24, Y+4	; 0x04
    10ba:	88 23       	and	r24, r24
    10bc:	a9 f4       	brne	.+42     	; 0x10e8 <DIO_enumSetPinValue+0x1e8>
    10be:	a2 e3       	ldi	r26, 0x32	; 50
    10c0:	b0 e0       	ldi	r27, 0x00	; 0
    10c2:	e2 e3       	ldi	r30, 0x32	; 50
    10c4:	f0 e0       	ldi	r31, 0x00	; 0
    10c6:	80 81       	ld	r24, Z
    10c8:	48 2f       	mov	r20, r24
    10ca:	8b 81       	ldd	r24, Y+3	; 0x03
    10cc:	28 2f       	mov	r18, r24
    10ce:	30 e0       	ldi	r19, 0x00	; 0
    10d0:	81 e0       	ldi	r24, 0x01	; 1
    10d2:	90 e0       	ldi	r25, 0x00	; 0
    10d4:	02 2e       	mov	r0, r18
    10d6:	02 c0       	rjmp	.+4      	; 0x10dc <DIO_enumSetPinValue+0x1dc>
    10d8:	88 0f       	add	r24, r24
    10da:	99 1f       	adc	r25, r25
    10dc:	0a 94       	dec	r0
    10de:	e2 f7       	brpl	.-8      	; 0x10d8 <DIO_enumSetPinValue+0x1d8>
    10e0:	80 95       	com	r24
    10e2:	84 23       	and	r24, r20
    10e4:	8c 93       	st	X, r24
    10e6:	05 c0       	rjmp	.+10     	; 0x10f2 <DIO_enumSetPinValue+0x1f2>
			else {LOC_enumState = DIO_NOK ;}
    10e8:	19 82       	std	Y+1, r1	; 0x01
    10ea:	03 c0       	rjmp	.+6      	; 0x10f2 <DIO_enumSetPinValue+0x1f2>
			break;
		default : LOC_enumState = DIO_NOK ; break;
    10ec:	19 82       	std	Y+1, r1	; 0x01
    10ee:	01 c0       	rjmp	.+2      	; 0x10f2 <DIO_enumSetPinValue+0x1f2>
		}
	}
	else{LOC_enumState = DIO_NOK ;}
    10f0:	19 82       	std	Y+1, r1	; 0x01
	return LOC_enumState;
    10f2:	89 81       	ldd	r24, Y+1	; 0x01
}
    10f4:	26 96       	adiw	r28, 0x06	; 6
    10f6:	0f b6       	in	r0, 0x3f	; 63
    10f8:	f8 94       	cli
    10fa:	de bf       	out	0x3e, r29	; 62
    10fc:	0f be       	out	0x3f, r0	; 63
    10fe:	cd bf       	out	0x3d, r28	; 61
    1100:	cf 91       	pop	r28
    1102:	df 91       	pop	r29
    1104:	08 95       	ret

00001106 <DIO_enumGetPinValue>:
DIO_ErrorStatus DIO_enumGetPinValue (u8 Copy_u8Port , u8 Copy_u8PinNumber , u8
		* Copy_ptrData)
{
    1106:	df 93       	push	r29
    1108:	cf 93       	push	r28
    110a:	cd b7       	in	r28, 0x3d	; 61
    110c:	de b7       	in	r29, 0x3e	; 62
    110e:	27 97       	sbiw	r28, 0x07	; 7
    1110:	0f b6       	in	r0, 0x3f	; 63
    1112:	f8 94       	cli
    1114:	de bf       	out	0x3e, r29	; 62
    1116:	0f be       	out	0x3f, r0	; 63
    1118:	cd bf       	out	0x3d, r28	; 61
    111a:	8a 83       	std	Y+2, r24	; 0x02
    111c:	6b 83       	std	Y+3, r22	; 0x03
    111e:	5d 83       	std	Y+5, r21	; 0x05
    1120:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumState = DIO_OK;
    1122:	81 e0       	ldi	r24, 0x01	; 1
    1124:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8PinNumber >= DIO_PIN0 && Copy_u8PinNumber <= DIO_PIN7)
    1126:	8b 81       	ldd	r24, Y+3	; 0x03
    1128:	88 30       	cpi	r24, 0x08	; 8
    112a:	08 f0       	brcs	.+2      	; 0x112e <DIO_enumGetPinValue+0x28>
    112c:	73 c0       	rjmp	.+230    	; 0x1214 <DIO_enumGetPinValue+0x10e>
	{
		switch(Copy_u8Port)
    112e:	8a 81       	ldd	r24, Y+2	; 0x02
    1130:	28 2f       	mov	r18, r24
    1132:	30 e0       	ldi	r19, 0x00	; 0
    1134:	3f 83       	std	Y+7, r19	; 0x07
    1136:	2e 83       	std	Y+6, r18	; 0x06
    1138:	4e 81       	ldd	r20, Y+6	; 0x06
    113a:	5f 81       	ldd	r21, Y+7	; 0x07
    113c:	41 30       	cpi	r20, 0x01	; 1
    113e:	51 05       	cpc	r21, r1
    1140:	59 f1       	breq	.+86     	; 0x1198 <DIO_enumGetPinValue+0x92>
    1142:	8e 81       	ldd	r24, Y+6	; 0x06
    1144:	9f 81       	ldd	r25, Y+7	; 0x07
    1146:	82 30       	cpi	r24, 0x02	; 2
    1148:	91 05       	cpc	r25, r1
    114a:	34 f4       	brge	.+12     	; 0x1158 <DIO_enumGetPinValue+0x52>
    114c:	2e 81       	ldd	r18, Y+6	; 0x06
    114e:	3f 81       	ldd	r19, Y+7	; 0x07
    1150:	21 15       	cp	r18, r1
    1152:	31 05       	cpc	r19, r1
    1154:	69 f0       	breq	.+26     	; 0x1170 <DIO_enumGetPinValue+0x6a>
    1156:	5c c0       	rjmp	.+184    	; 0x1210 <DIO_enumGetPinValue+0x10a>
    1158:	4e 81       	ldd	r20, Y+6	; 0x06
    115a:	5f 81       	ldd	r21, Y+7	; 0x07
    115c:	42 30       	cpi	r20, 0x02	; 2
    115e:	51 05       	cpc	r21, r1
    1160:	79 f1       	breq	.+94     	; 0x11c0 <DIO_enumGetPinValue+0xba>
    1162:	8e 81       	ldd	r24, Y+6	; 0x06
    1164:	9f 81       	ldd	r25, Y+7	; 0x07
    1166:	83 30       	cpi	r24, 0x03	; 3
    1168:	91 05       	cpc	r25, r1
    116a:	09 f4       	brne	.+2      	; 0x116e <DIO_enumGetPinValue+0x68>
    116c:	3d c0       	rjmp	.+122    	; 0x11e8 <DIO_enumGetPinValue+0xe2>
    116e:	50 c0       	rjmp	.+160    	; 0x1210 <DIO_enumGetPinValue+0x10a>
		{
		case DIO_PORTA : *Copy_ptrData = GET_BIT(PINA_REG,Copy_u8PinNumber);
    1170:	e9 e3       	ldi	r30, 0x39	; 57
    1172:	f0 e0       	ldi	r31, 0x00	; 0
    1174:	80 81       	ld	r24, Z
    1176:	28 2f       	mov	r18, r24
    1178:	30 e0       	ldi	r19, 0x00	; 0
    117a:	8b 81       	ldd	r24, Y+3	; 0x03
    117c:	88 2f       	mov	r24, r24
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	a9 01       	movw	r20, r18
    1182:	02 c0       	rjmp	.+4      	; 0x1188 <DIO_enumGetPinValue+0x82>
    1184:	55 95       	asr	r21
    1186:	47 95       	ror	r20
    1188:	8a 95       	dec	r24
    118a:	e2 f7       	brpl	.-8      	; 0x1184 <DIO_enumGetPinValue+0x7e>
    118c:	ca 01       	movw	r24, r20
    118e:	81 70       	andi	r24, 0x01	; 1
    1190:	ec 81       	ldd	r30, Y+4	; 0x04
    1192:	fd 81       	ldd	r31, Y+5	; 0x05
    1194:	80 83       	st	Z, r24
    1196:	3f c0       	rjmp	.+126    	; 0x1216 <DIO_enumGetPinValue+0x110>
		break;
		case DIO_PORTB : *Copy_ptrData = GET_BIT(PINB_REG,Copy_u8PinNumber);
    1198:	e6 e3       	ldi	r30, 0x36	; 54
    119a:	f0 e0       	ldi	r31, 0x00	; 0
    119c:	80 81       	ld	r24, Z
    119e:	28 2f       	mov	r18, r24
    11a0:	30 e0       	ldi	r19, 0x00	; 0
    11a2:	8b 81       	ldd	r24, Y+3	; 0x03
    11a4:	88 2f       	mov	r24, r24
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	a9 01       	movw	r20, r18
    11aa:	02 c0       	rjmp	.+4      	; 0x11b0 <DIO_enumGetPinValue+0xaa>
    11ac:	55 95       	asr	r21
    11ae:	47 95       	ror	r20
    11b0:	8a 95       	dec	r24
    11b2:	e2 f7       	brpl	.-8      	; 0x11ac <DIO_enumGetPinValue+0xa6>
    11b4:	ca 01       	movw	r24, r20
    11b6:	81 70       	andi	r24, 0x01	; 1
    11b8:	ec 81       	ldd	r30, Y+4	; 0x04
    11ba:	fd 81       	ldd	r31, Y+5	; 0x05
    11bc:	80 83       	st	Z, r24
    11be:	2b c0       	rjmp	.+86     	; 0x1216 <DIO_enumGetPinValue+0x110>
		break;
		case DIO_PORTC : *Copy_ptrData = GET_BIT(PINC_REG,Copy_u8PinNumber);
    11c0:	e3 e3       	ldi	r30, 0x33	; 51
    11c2:	f0 e0       	ldi	r31, 0x00	; 0
    11c4:	80 81       	ld	r24, Z
    11c6:	28 2f       	mov	r18, r24
    11c8:	30 e0       	ldi	r19, 0x00	; 0
    11ca:	8b 81       	ldd	r24, Y+3	; 0x03
    11cc:	88 2f       	mov	r24, r24
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	a9 01       	movw	r20, r18
    11d2:	02 c0       	rjmp	.+4      	; 0x11d8 <DIO_enumGetPinValue+0xd2>
    11d4:	55 95       	asr	r21
    11d6:	47 95       	ror	r20
    11d8:	8a 95       	dec	r24
    11da:	e2 f7       	brpl	.-8      	; 0x11d4 <DIO_enumGetPinValue+0xce>
    11dc:	ca 01       	movw	r24, r20
    11de:	81 70       	andi	r24, 0x01	; 1
    11e0:	ec 81       	ldd	r30, Y+4	; 0x04
    11e2:	fd 81       	ldd	r31, Y+5	; 0x05
    11e4:	80 83       	st	Z, r24
    11e6:	17 c0       	rjmp	.+46     	; 0x1216 <DIO_enumGetPinValue+0x110>
		break;
		case DIO_PORTD : *Copy_ptrData = GET_BIT(PIND_REG,Copy_u8PinNumber);
    11e8:	e0 e3       	ldi	r30, 0x30	; 48
    11ea:	f0 e0       	ldi	r31, 0x00	; 0
    11ec:	80 81       	ld	r24, Z
    11ee:	28 2f       	mov	r18, r24
    11f0:	30 e0       	ldi	r19, 0x00	; 0
    11f2:	8b 81       	ldd	r24, Y+3	; 0x03
    11f4:	88 2f       	mov	r24, r24
    11f6:	90 e0       	ldi	r25, 0x00	; 0
    11f8:	a9 01       	movw	r20, r18
    11fa:	02 c0       	rjmp	.+4      	; 0x1200 <DIO_enumGetPinValue+0xfa>
    11fc:	55 95       	asr	r21
    11fe:	47 95       	ror	r20
    1200:	8a 95       	dec	r24
    1202:	e2 f7       	brpl	.-8      	; 0x11fc <DIO_enumGetPinValue+0xf6>
    1204:	ca 01       	movw	r24, r20
    1206:	81 70       	andi	r24, 0x01	; 1
    1208:	ec 81       	ldd	r30, Y+4	; 0x04
    120a:	fd 81       	ldd	r31, Y+5	; 0x05
    120c:	80 83       	st	Z, r24
    120e:	03 c0       	rjmp	.+6      	; 0x1216 <DIO_enumGetPinValue+0x110>
		break;
		default : LOC_enumState = DIO_NOK ;
    1210:	19 82       	std	Y+1, r1	; 0x01
    1212:	01 c0       	rjmp	.+2      	; 0x1216 <DIO_enumGetPinValue+0x110>
		break;
		}
	}
	else{LOC_enumState = DIO_NOK ;}
    1214:	19 82       	std	Y+1, r1	; 0x01
	return LOC_enumState;
    1216:	89 81       	ldd	r24, Y+1	; 0x01
}
    1218:	27 96       	adiw	r28, 0x07	; 7
    121a:	0f b6       	in	r0, 0x3f	; 63
    121c:	f8 94       	cli
    121e:	de bf       	out	0x3e, r29	; 62
    1220:	0f be       	out	0x3f, r0	; 63
    1222:	cd bf       	out	0x3d, r28	; 61
    1224:	cf 91       	pop	r28
    1226:	df 91       	pop	r29
    1228:	08 95       	ret

0000122a <DIO_enumTogglePortValue>:
DIO_ErrorStatus DIO_enumTogglePortValue (u8 Copy_u8Port){
    122a:	df 93       	push	r29
    122c:	cf 93       	push	r28
    122e:	00 d0       	rcall	.+0      	; 0x1230 <DIO_enumTogglePortValue+0x6>
    1230:	0f 92       	push	r0
    1232:	cd b7       	in	r28, 0x3d	; 61
    1234:	de b7       	in	r29, 0x3e	; 62
    1236:	8b 83       	std	Y+3, r24	; 0x03
	DIO_ErrorStatus Loc_enumState = DIO_OK;
    1238:	81 e0       	ldi	r24, 0x01	; 1
    123a:	89 83       	std	Y+1, r24	; 0x01
	u8 Loc_u8Value;
	Loc_enumState=DIO_enumGetPortValue(Copy_u8Port,&Loc_u8Value);
    123c:	9e 01       	movw	r18, r28
    123e:	2e 5f       	subi	r18, 0xFE	; 254
    1240:	3f 4f       	sbci	r19, 0xFF	; 255
    1242:	8b 81       	ldd	r24, Y+3	; 0x03
    1244:	b9 01       	movw	r22, r18
    1246:	0e 94 2e 07 	call	0xe5c	; 0xe5c <DIO_enumGetPortValue>
    124a:	89 83       	std	Y+1, r24	; 0x01
	Loc_enumState=DIO_enumSetPortValue(Copy_u8Port,~Loc_u8Value);
    124c:	8a 81       	ldd	r24, Y+2	; 0x02
    124e:	98 2f       	mov	r25, r24
    1250:	90 95       	com	r25
    1252:	8b 81       	ldd	r24, Y+3	; 0x03
    1254:	69 2f       	mov	r22, r25
    1256:	0e 94 e6 06 	call	0xdcc	; 0xdcc <DIO_enumSetPortValue>
    125a:	89 83       	std	Y+1, r24	; 0x01
	return Loc_enumState;
    125c:	89 81       	ldd	r24, Y+1	; 0x01
}
    125e:	0f 90       	pop	r0
    1260:	0f 90       	pop	r0
    1262:	0f 90       	pop	r0
    1264:	cf 91       	pop	r28
    1266:	df 91       	pop	r29
    1268:	08 95       	ret

0000126a <DIO_enumTogglePinValue>:
DIO_ErrorStatus DIO_enumTogglePinValue (u8 Copy_u8Port,u8 Copy_u8PinNumber){
    126a:	df 93       	push	r29
    126c:	cf 93       	push	r28
    126e:	00 d0       	rcall	.+0      	; 0x1270 <DIO_enumTogglePinValue+0x6>
    1270:	00 d0       	rcall	.+0      	; 0x1272 <DIO_enumTogglePinValue+0x8>
    1272:	0f 92       	push	r0
    1274:	cd b7       	in	r28, 0x3d	; 61
    1276:	de b7       	in	r29, 0x3e	; 62
    1278:	8b 83       	std	Y+3, r24	; 0x03
    127a:	6c 83       	std	Y+4, r22	; 0x04
	DIO_ErrorStatus Loc_enumState = DIO_OK;
    127c:	81 e0       	ldi	r24, 0x01	; 1
    127e:	89 83       	std	Y+1, r24	; 0x01
		u8 Loc_u8Value;
		Loc_enumState=DIO_enumGetPinValue(Copy_u8Port,Copy_u8PinNumber,&Loc_u8Value);
    1280:	9e 01       	movw	r18, r28
    1282:	2e 5f       	subi	r18, 0xFE	; 254
    1284:	3f 4f       	sbci	r19, 0xFF	; 255
    1286:	8b 81       	ldd	r24, Y+3	; 0x03
    1288:	6c 81       	ldd	r22, Y+4	; 0x04
    128a:	a9 01       	movw	r20, r18
    128c:	0e 94 83 08 	call	0x1106	; 0x1106 <DIO_enumGetPinValue>
    1290:	89 83       	std	Y+1, r24	; 0x01
		Loc_enumState=DIO_enumSetPinValue(Copy_u8Port,Copy_u8PinNumber,!Loc_u8Value);
    1292:	8a 81       	ldd	r24, Y+2	; 0x02
    1294:	1d 82       	std	Y+5, r1	; 0x05
    1296:	88 23       	and	r24, r24
    1298:	11 f4       	brne	.+4      	; 0x129e <DIO_enumTogglePinValue+0x34>
    129a:	81 e0       	ldi	r24, 0x01	; 1
    129c:	8d 83       	std	Y+5, r24	; 0x05
    129e:	8b 81       	ldd	r24, Y+3	; 0x03
    12a0:	6c 81       	ldd	r22, Y+4	; 0x04
    12a2:	4d 81       	ldd	r20, Y+5	; 0x05
    12a4:	0e 94 80 07 	call	0xf00	; 0xf00 <DIO_enumSetPinValue>
    12a8:	89 83       	std	Y+1, r24	; 0x01
		return Loc_enumState;
    12aa:	89 81       	ldd	r24, Y+1	; 0x01
}
    12ac:	0f 90       	pop	r0
    12ae:	0f 90       	pop	r0
    12b0:	0f 90       	pop	r0
    12b2:	0f 90       	pop	r0
    12b4:	0f 90       	pop	r0
    12b6:	cf 91       	pop	r28
    12b8:	df 91       	pop	r29
    12ba:	08 95       	ret

000012bc <LED_voidInit>:
#include "BIT_MATH.h"
#include "LED_Interface.h"


void LED_voidInit(LED_Confgration Led_u8Conf)
{
    12bc:	df 93       	push	r29
    12be:	cf 93       	push	r28
    12c0:	00 d0       	rcall	.+0      	; 0x12c2 <LED_voidInit+0x6>
    12c2:	0f 92       	push	r0
    12c4:	cd b7       	in	r28, 0x3d	; 61
    12c6:	de b7       	in	r29, 0x3e	; 62
    12c8:	69 83       	std	Y+1, r22	; 0x01
    12ca:	7a 83       	std	Y+2, r23	; 0x02
    12cc:	8b 83       	std	Y+3, r24	; 0x03
	DIO_enumSetPinDirection(Led_u8Conf.port,Led_u8Conf.pin,DIO_OUTPUT);
    12ce:	89 81       	ldd	r24, Y+1	; 0x01
    12d0:	9a 81       	ldd	r25, Y+2	; 0x02
    12d2:	69 2f       	mov	r22, r25
    12d4:	41 e0       	ldi	r20, 0x01	; 1
    12d6:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <DIO_enumSetPinDirection>

}
    12da:	0f 90       	pop	r0
    12dc:	0f 90       	pop	r0
    12de:	0f 90       	pop	r0
    12e0:	cf 91       	pop	r28
    12e2:	df 91       	pop	r29
    12e4:	08 95       	ret

000012e6 <LED_voidOn>:
void LED_voidOn(LED_Confgration Led_u8Conf){
    12e6:	df 93       	push	r29
    12e8:	cf 93       	push	r28
    12ea:	00 d0       	rcall	.+0      	; 0x12ec <LED_voidOn+0x6>
    12ec:	0f 92       	push	r0
    12ee:	cd b7       	in	r28, 0x3d	; 61
    12f0:	de b7       	in	r29, 0x3e	; 62
    12f2:	69 83       	std	Y+1, r22	; 0x01
    12f4:	7a 83       	std	Y+2, r23	; 0x02
    12f6:	8b 83       	std	Y+3, r24	; 0x03
	if(Led_u8Conf.Active_State==ACTIVE_HIGH){
    12f8:	8b 81       	ldd	r24, Y+3	; 0x03
    12fa:	81 30       	cpi	r24, 0x01	; 1
    12fc:	39 f4       	brne	.+14     	; 0x130c <LED_voidOn+0x26>
	DIO_enumSetPinValue(Led_u8Conf.port,Led_u8Conf.pin,DIO_HIGH);
    12fe:	89 81       	ldd	r24, Y+1	; 0x01
    1300:	9a 81       	ldd	r25, Y+2	; 0x02
    1302:	69 2f       	mov	r22, r25
    1304:	41 e0       	ldi	r20, 0x01	; 1
    1306:	0e 94 80 07 	call	0xf00	; 0xf00 <DIO_enumSetPinValue>
    130a:	06 c0       	rjmp	.+12     	; 0x1318 <LED_voidOn+0x32>
	}
	else
	{
		DIO_enumSetPinValue(Led_u8Conf.port,Led_u8Conf.pin,DIO_LOW);
    130c:	89 81       	ldd	r24, Y+1	; 0x01
    130e:	9a 81       	ldd	r25, Y+2	; 0x02
    1310:	69 2f       	mov	r22, r25
    1312:	40 e0       	ldi	r20, 0x00	; 0
    1314:	0e 94 80 07 	call	0xf00	; 0xf00 <DIO_enumSetPinValue>
	}

}
    1318:	0f 90       	pop	r0
    131a:	0f 90       	pop	r0
    131c:	0f 90       	pop	r0
    131e:	cf 91       	pop	r28
    1320:	df 91       	pop	r29
    1322:	08 95       	ret

00001324 <LED_voidOff>:
void LED_voidOff(LED_Confgration Led_u8Conf){
    1324:	df 93       	push	r29
    1326:	cf 93       	push	r28
    1328:	00 d0       	rcall	.+0      	; 0x132a <LED_voidOff+0x6>
    132a:	0f 92       	push	r0
    132c:	cd b7       	in	r28, 0x3d	; 61
    132e:	de b7       	in	r29, 0x3e	; 62
    1330:	69 83       	std	Y+1, r22	; 0x01
    1332:	7a 83       	std	Y+2, r23	; 0x02
    1334:	8b 83       	std	Y+3, r24	; 0x03
	if(Led_u8Conf.Active_State==ACTIVE_HIGH){
    1336:	8b 81       	ldd	r24, Y+3	; 0x03
    1338:	81 30       	cpi	r24, 0x01	; 1
    133a:	39 f4       	brne	.+14     	; 0x134a <LED_voidOff+0x26>
		DIO_enumSetPinValue(Led_u8Conf.port,Led_u8Conf.pin,DIO_LOW);
    133c:	89 81       	ldd	r24, Y+1	; 0x01
    133e:	9a 81       	ldd	r25, Y+2	; 0x02
    1340:	69 2f       	mov	r22, r25
    1342:	40 e0       	ldi	r20, 0x00	; 0
    1344:	0e 94 80 07 	call	0xf00	; 0xf00 <DIO_enumSetPinValue>
    1348:	06 c0       	rjmp	.+12     	; 0x1356 <LED_voidOff+0x32>
		}
		else
		{
			DIO_enumSetPinValue(Led_u8Conf.port,Led_u8Conf.pin,DIO_HIGH);
    134a:	89 81       	ldd	r24, Y+1	; 0x01
    134c:	9a 81       	ldd	r25, Y+2	; 0x02
    134e:	69 2f       	mov	r22, r25
    1350:	41 e0       	ldi	r20, 0x01	; 1
    1352:	0e 94 80 07 	call	0xf00	; 0xf00 <DIO_enumSetPinValue>
		}

}
    1356:	0f 90       	pop	r0
    1358:	0f 90       	pop	r0
    135a:	0f 90       	pop	r0
    135c:	cf 91       	pop	r28
    135e:	df 91       	pop	r29
    1360:	08 95       	ret

00001362 <LED_voidToggle>:
void LED_voidToggle(LED_Confgration Led_u8Conf){
    1362:	df 93       	push	r29
    1364:	cf 93       	push	r28
    1366:	00 d0       	rcall	.+0      	; 0x1368 <LED_voidToggle+0x6>
    1368:	0f 92       	push	r0
    136a:	cd b7       	in	r28, 0x3d	; 61
    136c:	de b7       	in	r29, 0x3e	; 62
    136e:	69 83       	std	Y+1, r22	; 0x01
    1370:	7a 83       	std	Y+2, r23	; 0x02
    1372:	8b 83       	std	Y+3, r24	; 0x03
	DIO_enumTogglePinValue(Led_u8Conf.port,Led_u8Conf.pin);
    1374:	89 81       	ldd	r24, Y+1	; 0x01
    1376:	9a 81       	ldd	r25, Y+2	; 0x02
    1378:	69 2f       	mov	r22, r25
    137a:	0e 94 35 09 	call	0x126a	; 0x126a <DIO_enumTogglePinValue>
}
    137e:	0f 90       	pop	r0
    1380:	0f 90       	pop	r0
    1382:	0f 90       	pop	r0
    1384:	cf 91       	pop	r28
    1386:	df 91       	pop	r29
    1388:	08 95       	ret

0000138a <main>:
#include "LED_Interface.h"
#include "DIO_INTERFACE.h"
#include "DIO_privete.h"
#include "push_button.h"
#define F_CPU  8000000UL
int main (){
    138a:	0f 93       	push	r16
    138c:	1f 93       	push	r17
    138e:	df 93       	push	r29
    1390:	cf 93       	push	r28
    1392:	cd b7       	in	r28, 0x3d	; 61
    1394:	de b7       	in	r29, 0x3e	; 62
    1396:	c0 58       	subi	r28, 0x80	; 128
    1398:	d1 40       	sbci	r29, 0x01	; 1
    139a:	0f b6       	in	r0, 0x3f	; 63
    139c:	f8 94       	cli
    139e:	de bf       	out	0x3e, r29	; 62
    13a0:	0f be       	out	0x3f, r0	; 63
    13a2:	cd bf       	out	0x3d, r28	; 61



	button B1={DIO_PORTB ,DIO_PIN0,button_PULL_UP};
    13a4:	ce 01       	movw	r24, r28
    13a6:	87 5e       	subi	r24, 0xE7	; 231
    13a8:	9e 4f       	sbci	r25, 0xFE	; 254
    13aa:	c0 5c       	subi	r28, 0xC0	; 192
    13ac:	de 4f       	sbci	r29, 0xFE	; 254
    13ae:	99 83       	std	Y+1, r25	; 0x01
    13b0:	88 83       	st	Y, r24
    13b2:	c0 54       	subi	r28, 0x40	; 64
    13b4:	d1 40       	sbci	r29, 0x01	; 1
    13b6:	8c e8       	ldi	r24, 0x8C	; 140
    13b8:	90 e0       	ldi	r25, 0x00	; 0
    13ba:	ce 5b       	subi	r28, 0xBE	; 190
    13bc:	de 4f       	sbci	r29, 0xFE	; 254
    13be:	99 83       	std	Y+1, r25	; 0x01
    13c0:	88 83       	st	Y, r24
    13c2:	c2 54       	subi	r28, 0x42	; 66
    13c4:	d1 40       	sbci	r29, 0x01	; 1
    13c6:	93 e0       	ldi	r25, 0x03	; 3
    13c8:	cc 5b       	subi	r28, 0xBC	; 188
    13ca:	de 4f       	sbci	r29, 0xFE	; 254
    13cc:	98 83       	st	Y, r25
    13ce:	c4 54       	subi	r28, 0x44	; 68
    13d0:	d1 40       	sbci	r29, 0x01	; 1
    13d2:	ce 5b       	subi	r28, 0xBE	; 190
    13d4:	de 4f       	sbci	r29, 0xFE	; 254
    13d6:	e8 81       	ld	r30, Y
    13d8:	f9 81       	ldd	r31, Y+1	; 0x01
    13da:	c2 54       	subi	r28, 0x42	; 66
    13dc:	d1 40       	sbci	r29, 0x01	; 1
    13de:	00 80       	ld	r0, Z
    13e0:	ce 5b       	subi	r28, 0xBE	; 190
    13e2:	de 4f       	sbci	r29, 0xFE	; 254
    13e4:	88 81       	ld	r24, Y
    13e6:	99 81       	ldd	r25, Y+1	; 0x01
    13e8:	c2 54       	subi	r28, 0x42	; 66
    13ea:	d1 40       	sbci	r29, 0x01	; 1
    13ec:	01 96       	adiw	r24, 0x01	; 1
    13ee:	ce 5b       	subi	r28, 0xBE	; 190
    13f0:	de 4f       	sbci	r29, 0xFE	; 254
    13f2:	99 83       	std	Y+1, r25	; 0x01
    13f4:	88 83       	st	Y, r24
    13f6:	c2 54       	subi	r28, 0x42	; 66
    13f8:	d1 40       	sbci	r29, 0x01	; 1
    13fa:	c0 5c       	subi	r28, 0xC0	; 192
    13fc:	de 4f       	sbci	r29, 0xFE	; 254
    13fe:	e8 81       	ld	r30, Y
    1400:	f9 81       	ldd	r31, Y+1	; 0x01
    1402:	c0 54       	subi	r28, 0x40	; 64
    1404:	d1 40       	sbci	r29, 0x01	; 1
    1406:	00 82       	st	Z, r0
    1408:	c0 5c       	subi	r28, 0xC0	; 192
    140a:	de 4f       	sbci	r29, 0xFE	; 254
    140c:	88 81       	ld	r24, Y
    140e:	99 81       	ldd	r25, Y+1	; 0x01
    1410:	c0 54       	subi	r28, 0x40	; 64
    1412:	d1 40       	sbci	r29, 0x01	; 1
    1414:	01 96       	adiw	r24, 0x01	; 1
    1416:	c0 5c       	subi	r28, 0xC0	; 192
    1418:	de 4f       	sbci	r29, 0xFE	; 254
    141a:	99 83       	std	Y+1, r25	; 0x01
    141c:	88 83       	st	Y, r24
    141e:	c0 54       	subi	r28, 0x40	; 64
    1420:	d1 40       	sbci	r29, 0x01	; 1
    1422:	cc 5b       	subi	r28, 0xBC	; 188
    1424:	de 4f       	sbci	r29, 0xFE	; 254
    1426:	98 81       	ld	r25, Y
    1428:	c4 54       	subi	r28, 0x44	; 68
    142a:	d1 40       	sbci	r29, 0x01	; 1
    142c:	91 50       	subi	r25, 0x01	; 1
    142e:	cc 5b       	subi	r28, 0xBC	; 188
    1430:	de 4f       	sbci	r29, 0xFE	; 254
    1432:	98 83       	st	Y, r25
    1434:	c4 54       	subi	r28, 0x44	; 68
    1436:	d1 40       	sbci	r29, 0x01	; 1
    1438:	cc 5b       	subi	r28, 0xBC	; 188
    143a:	de 4f       	sbci	r29, 0xFE	; 254
    143c:	e8 81       	ld	r30, Y
    143e:	c4 54       	subi	r28, 0x44	; 68
    1440:	d1 40       	sbci	r29, 0x01	; 1
    1442:	ee 23       	and	r30, r30
    1444:	31 f6       	brne	.-116    	; 0x13d2 <main+0x48>
	button B2={DIO_PORTB ,DIO_PIN1,button_PULL_UP};
    1446:	ce 01       	movw	r24, r28
    1448:	84 5e       	subi	r24, 0xE4	; 228
    144a:	9e 4f       	sbci	r25, 0xFE	; 254
    144c:	cb 5b       	subi	r28, 0xBB	; 187
    144e:	de 4f       	sbci	r29, 0xFE	; 254
    1450:	99 83       	std	Y+1, r25	; 0x01
    1452:	88 83       	st	Y, r24
    1454:	c5 54       	subi	r28, 0x45	; 69
    1456:	d1 40       	sbci	r29, 0x01	; 1
    1458:	89 e8       	ldi	r24, 0x89	; 137
    145a:	90 e0       	ldi	r25, 0x00	; 0
    145c:	c9 5b       	subi	r28, 0xB9	; 185
    145e:	de 4f       	sbci	r29, 0xFE	; 254
    1460:	99 83       	std	Y+1, r25	; 0x01
    1462:	88 83       	st	Y, r24
    1464:	c7 54       	subi	r28, 0x47	; 71
    1466:	d1 40       	sbci	r29, 0x01	; 1
    1468:	93 e0       	ldi	r25, 0x03	; 3
    146a:	c7 5b       	subi	r28, 0xB7	; 183
    146c:	de 4f       	sbci	r29, 0xFE	; 254
    146e:	98 83       	st	Y, r25
    1470:	c9 54       	subi	r28, 0x49	; 73
    1472:	d1 40       	sbci	r29, 0x01	; 1
    1474:	c9 5b       	subi	r28, 0xB9	; 185
    1476:	de 4f       	sbci	r29, 0xFE	; 254
    1478:	e8 81       	ld	r30, Y
    147a:	f9 81       	ldd	r31, Y+1	; 0x01
    147c:	c7 54       	subi	r28, 0x47	; 71
    147e:	d1 40       	sbci	r29, 0x01	; 1
    1480:	00 80       	ld	r0, Z
    1482:	c9 5b       	subi	r28, 0xB9	; 185
    1484:	de 4f       	sbci	r29, 0xFE	; 254
    1486:	88 81       	ld	r24, Y
    1488:	99 81       	ldd	r25, Y+1	; 0x01
    148a:	c7 54       	subi	r28, 0x47	; 71
    148c:	d1 40       	sbci	r29, 0x01	; 1
    148e:	01 96       	adiw	r24, 0x01	; 1
    1490:	c9 5b       	subi	r28, 0xB9	; 185
    1492:	de 4f       	sbci	r29, 0xFE	; 254
    1494:	99 83       	std	Y+1, r25	; 0x01
    1496:	88 83       	st	Y, r24
    1498:	c7 54       	subi	r28, 0x47	; 71
    149a:	d1 40       	sbci	r29, 0x01	; 1
    149c:	cb 5b       	subi	r28, 0xBB	; 187
    149e:	de 4f       	sbci	r29, 0xFE	; 254
    14a0:	e8 81       	ld	r30, Y
    14a2:	f9 81       	ldd	r31, Y+1	; 0x01
    14a4:	c5 54       	subi	r28, 0x45	; 69
    14a6:	d1 40       	sbci	r29, 0x01	; 1
    14a8:	00 82       	st	Z, r0
    14aa:	cb 5b       	subi	r28, 0xBB	; 187
    14ac:	de 4f       	sbci	r29, 0xFE	; 254
    14ae:	88 81       	ld	r24, Y
    14b0:	99 81       	ldd	r25, Y+1	; 0x01
    14b2:	c5 54       	subi	r28, 0x45	; 69
    14b4:	d1 40       	sbci	r29, 0x01	; 1
    14b6:	01 96       	adiw	r24, 0x01	; 1
    14b8:	cb 5b       	subi	r28, 0xBB	; 187
    14ba:	de 4f       	sbci	r29, 0xFE	; 254
    14bc:	99 83       	std	Y+1, r25	; 0x01
    14be:	88 83       	st	Y, r24
    14c0:	c5 54       	subi	r28, 0x45	; 69
    14c2:	d1 40       	sbci	r29, 0x01	; 1
    14c4:	c7 5b       	subi	r28, 0xB7	; 183
    14c6:	de 4f       	sbci	r29, 0xFE	; 254
    14c8:	98 81       	ld	r25, Y
    14ca:	c9 54       	subi	r28, 0x49	; 73
    14cc:	d1 40       	sbci	r29, 0x01	; 1
    14ce:	91 50       	subi	r25, 0x01	; 1
    14d0:	c7 5b       	subi	r28, 0xB7	; 183
    14d2:	de 4f       	sbci	r29, 0xFE	; 254
    14d4:	98 83       	st	Y, r25
    14d6:	c9 54       	subi	r28, 0x49	; 73
    14d8:	d1 40       	sbci	r29, 0x01	; 1
    14da:	c7 5b       	subi	r28, 0xB7	; 183
    14dc:	de 4f       	sbci	r29, 0xFE	; 254
    14de:	e8 81       	ld	r30, Y
    14e0:	c9 54       	subi	r28, 0x49	; 73
    14e2:	d1 40       	sbci	r29, 0x01	; 1
    14e4:	ee 23       	and	r30, r30
    14e6:	31 f6       	brne	.-116    	; 0x1474 <main+0xea>
	button B3={DIO_PORTB ,DIO_PIN2,button_PULL_UP};
    14e8:	ce 01       	movw	r24, r28
    14ea:	81 5e       	subi	r24, 0xE1	; 225
    14ec:	9e 4f       	sbci	r25, 0xFE	; 254
    14ee:	c6 5b       	subi	r28, 0xB6	; 182
    14f0:	de 4f       	sbci	r29, 0xFE	; 254
    14f2:	99 83       	std	Y+1, r25	; 0x01
    14f4:	88 83       	st	Y, r24
    14f6:	ca 54       	subi	r28, 0x4A	; 74
    14f8:	d1 40       	sbci	r29, 0x01	; 1
    14fa:	86 e8       	ldi	r24, 0x86	; 134
    14fc:	90 e0       	ldi	r25, 0x00	; 0
    14fe:	c4 5b       	subi	r28, 0xB4	; 180
    1500:	de 4f       	sbci	r29, 0xFE	; 254
    1502:	99 83       	std	Y+1, r25	; 0x01
    1504:	88 83       	st	Y, r24
    1506:	cc 54       	subi	r28, 0x4C	; 76
    1508:	d1 40       	sbci	r29, 0x01	; 1
    150a:	93 e0       	ldi	r25, 0x03	; 3
    150c:	c2 5b       	subi	r28, 0xB2	; 178
    150e:	de 4f       	sbci	r29, 0xFE	; 254
    1510:	98 83       	st	Y, r25
    1512:	ce 54       	subi	r28, 0x4E	; 78
    1514:	d1 40       	sbci	r29, 0x01	; 1
    1516:	c4 5b       	subi	r28, 0xB4	; 180
    1518:	de 4f       	sbci	r29, 0xFE	; 254
    151a:	e8 81       	ld	r30, Y
    151c:	f9 81       	ldd	r31, Y+1	; 0x01
    151e:	cc 54       	subi	r28, 0x4C	; 76
    1520:	d1 40       	sbci	r29, 0x01	; 1
    1522:	00 80       	ld	r0, Z
    1524:	c4 5b       	subi	r28, 0xB4	; 180
    1526:	de 4f       	sbci	r29, 0xFE	; 254
    1528:	88 81       	ld	r24, Y
    152a:	99 81       	ldd	r25, Y+1	; 0x01
    152c:	cc 54       	subi	r28, 0x4C	; 76
    152e:	d1 40       	sbci	r29, 0x01	; 1
    1530:	01 96       	adiw	r24, 0x01	; 1
    1532:	c4 5b       	subi	r28, 0xB4	; 180
    1534:	de 4f       	sbci	r29, 0xFE	; 254
    1536:	99 83       	std	Y+1, r25	; 0x01
    1538:	88 83       	st	Y, r24
    153a:	cc 54       	subi	r28, 0x4C	; 76
    153c:	d1 40       	sbci	r29, 0x01	; 1
    153e:	c6 5b       	subi	r28, 0xB6	; 182
    1540:	de 4f       	sbci	r29, 0xFE	; 254
    1542:	e8 81       	ld	r30, Y
    1544:	f9 81       	ldd	r31, Y+1	; 0x01
    1546:	ca 54       	subi	r28, 0x4A	; 74
    1548:	d1 40       	sbci	r29, 0x01	; 1
    154a:	00 82       	st	Z, r0
    154c:	c6 5b       	subi	r28, 0xB6	; 182
    154e:	de 4f       	sbci	r29, 0xFE	; 254
    1550:	88 81       	ld	r24, Y
    1552:	99 81       	ldd	r25, Y+1	; 0x01
    1554:	ca 54       	subi	r28, 0x4A	; 74
    1556:	d1 40       	sbci	r29, 0x01	; 1
    1558:	01 96       	adiw	r24, 0x01	; 1
    155a:	c6 5b       	subi	r28, 0xB6	; 182
    155c:	de 4f       	sbci	r29, 0xFE	; 254
    155e:	99 83       	std	Y+1, r25	; 0x01
    1560:	88 83       	st	Y, r24
    1562:	ca 54       	subi	r28, 0x4A	; 74
    1564:	d1 40       	sbci	r29, 0x01	; 1
    1566:	c2 5b       	subi	r28, 0xB2	; 178
    1568:	de 4f       	sbci	r29, 0xFE	; 254
    156a:	98 81       	ld	r25, Y
    156c:	ce 54       	subi	r28, 0x4E	; 78
    156e:	d1 40       	sbci	r29, 0x01	; 1
    1570:	91 50       	subi	r25, 0x01	; 1
    1572:	c2 5b       	subi	r28, 0xB2	; 178
    1574:	de 4f       	sbci	r29, 0xFE	; 254
    1576:	98 83       	st	Y, r25
    1578:	ce 54       	subi	r28, 0x4E	; 78
    157a:	d1 40       	sbci	r29, 0x01	; 1
    157c:	c2 5b       	subi	r28, 0xB2	; 178
    157e:	de 4f       	sbci	r29, 0xFE	; 254
    1580:	e8 81       	ld	r30, Y
    1582:	ce 54       	subi	r28, 0x4E	; 78
    1584:	d1 40       	sbci	r29, 0x01	; 1
    1586:	ee 23       	and	r30, r30
    1588:	31 f6       	brne	.-116    	; 0x1516 <main+0x18c>
	button B4={DIO_PORTD ,DIO_PIN0,button_PULL_UP};
    158a:	ce 01       	movw	r24, r28
    158c:	8e 5d       	subi	r24, 0xDE	; 222
    158e:	9e 4f       	sbci	r25, 0xFE	; 254
    1590:	c1 5b       	subi	r28, 0xB1	; 177
    1592:	de 4f       	sbci	r29, 0xFE	; 254
    1594:	99 83       	std	Y+1, r25	; 0x01
    1596:	88 83       	st	Y, r24
    1598:	cf 54       	subi	r28, 0x4F	; 79
    159a:	d1 40       	sbci	r29, 0x01	; 1
    159c:	83 e8       	ldi	r24, 0x83	; 131
    159e:	90 e0       	ldi	r25, 0x00	; 0
    15a0:	cf 5a       	subi	r28, 0xAF	; 175
    15a2:	de 4f       	sbci	r29, 0xFE	; 254
    15a4:	99 83       	std	Y+1, r25	; 0x01
    15a6:	88 83       	st	Y, r24
    15a8:	c1 55       	subi	r28, 0x51	; 81
    15aa:	d1 40       	sbci	r29, 0x01	; 1
    15ac:	93 e0       	ldi	r25, 0x03	; 3
    15ae:	cd 5a       	subi	r28, 0xAD	; 173
    15b0:	de 4f       	sbci	r29, 0xFE	; 254
    15b2:	98 83       	st	Y, r25
    15b4:	c3 55       	subi	r28, 0x53	; 83
    15b6:	d1 40       	sbci	r29, 0x01	; 1
    15b8:	cf 5a       	subi	r28, 0xAF	; 175
    15ba:	de 4f       	sbci	r29, 0xFE	; 254
    15bc:	e8 81       	ld	r30, Y
    15be:	f9 81       	ldd	r31, Y+1	; 0x01
    15c0:	c1 55       	subi	r28, 0x51	; 81
    15c2:	d1 40       	sbci	r29, 0x01	; 1
    15c4:	00 80       	ld	r0, Z
    15c6:	cf 5a       	subi	r28, 0xAF	; 175
    15c8:	de 4f       	sbci	r29, 0xFE	; 254
    15ca:	88 81       	ld	r24, Y
    15cc:	99 81       	ldd	r25, Y+1	; 0x01
    15ce:	c1 55       	subi	r28, 0x51	; 81
    15d0:	d1 40       	sbci	r29, 0x01	; 1
    15d2:	01 96       	adiw	r24, 0x01	; 1
    15d4:	cf 5a       	subi	r28, 0xAF	; 175
    15d6:	de 4f       	sbci	r29, 0xFE	; 254
    15d8:	99 83       	std	Y+1, r25	; 0x01
    15da:	88 83       	st	Y, r24
    15dc:	c1 55       	subi	r28, 0x51	; 81
    15de:	d1 40       	sbci	r29, 0x01	; 1
    15e0:	c1 5b       	subi	r28, 0xB1	; 177
    15e2:	de 4f       	sbci	r29, 0xFE	; 254
    15e4:	e8 81       	ld	r30, Y
    15e6:	f9 81       	ldd	r31, Y+1	; 0x01
    15e8:	cf 54       	subi	r28, 0x4F	; 79
    15ea:	d1 40       	sbci	r29, 0x01	; 1
    15ec:	00 82       	st	Z, r0
    15ee:	c1 5b       	subi	r28, 0xB1	; 177
    15f0:	de 4f       	sbci	r29, 0xFE	; 254
    15f2:	88 81       	ld	r24, Y
    15f4:	99 81       	ldd	r25, Y+1	; 0x01
    15f6:	cf 54       	subi	r28, 0x4F	; 79
    15f8:	d1 40       	sbci	r29, 0x01	; 1
    15fa:	01 96       	adiw	r24, 0x01	; 1
    15fc:	c1 5b       	subi	r28, 0xB1	; 177
    15fe:	de 4f       	sbci	r29, 0xFE	; 254
    1600:	99 83       	std	Y+1, r25	; 0x01
    1602:	88 83       	st	Y, r24
    1604:	cf 54       	subi	r28, 0x4F	; 79
    1606:	d1 40       	sbci	r29, 0x01	; 1
    1608:	cd 5a       	subi	r28, 0xAD	; 173
    160a:	de 4f       	sbci	r29, 0xFE	; 254
    160c:	98 81       	ld	r25, Y
    160e:	c3 55       	subi	r28, 0x53	; 83
    1610:	d1 40       	sbci	r29, 0x01	; 1
    1612:	91 50       	subi	r25, 0x01	; 1
    1614:	cd 5a       	subi	r28, 0xAD	; 173
    1616:	de 4f       	sbci	r29, 0xFE	; 254
    1618:	98 83       	st	Y, r25
    161a:	c3 55       	subi	r28, 0x53	; 83
    161c:	d1 40       	sbci	r29, 0x01	; 1
    161e:	cd 5a       	subi	r28, 0xAD	; 173
    1620:	de 4f       	sbci	r29, 0xFE	; 254
    1622:	e8 81       	ld	r30, Y
    1624:	c3 55       	subi	r28, 0x53	; 83
    1626:	d1 40       	sbci	r29, 0x01	; 1
    1628:	ee 23       	and	r30, r30
    162a:	31 f6       	brne	.-116    	; 0x15b8 <main+0x22e>
	button B5={DIO_PORTB ,DIO_PIN3,button_PULL_UP};
    162c:	ce 01       	movw	r24, r28
    162e:	8b 5d       	subi	r24, 0xDB	; 219
    1630:	9e 4f       	sbci	r25, 0xFE	; 254
    1632:	cc 5a       	subi	r28, 0xAC	; 172
    1634:	de 4f       	sbci	r29, 0xFE	; 254
    1636:	99 83       	std	Y+1, r25	; 0x01
    1638:	88 83       	st	Y, r24
    163a:	c4 55       	subi	r28, 0x54	; 84
    163c:	d1 40       	sbci	r29, 0x01	; 1
    163e:	80 e8       	ldi	r24, 0x80	; 128
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	ca 5a       	subi	r28, 0xAA	; 170
    1644:	de 4f       	sbci	r29, 0xFE	; 254
    1646:	99 83       	std	Y+1, r25	; 0x01
    1648:	88 83       	st	Y, r24
    164a:	c6 55       	subi	r28, 0x56	; 86
    164c:	d1 40       	sbci	r29, 0x01	; 1
    164e:	93 e0       	ldi	r25, 0x03	; 3
    1650:	c8 5a       	subi	r28, 0xA8	; 168
    1652:	de 4f       	sbci	r29, 0xFE	; 254
    1654:	98 83       	st	Y, r25
    1656:	c8 55       	subi	r28, 0x58	; 88
    1658:	d1 40       	sbci	r29, 0x01	; 1
    165a:	ca 5a       	subi	r28, 0xAA	; 170
    165c:	de 4f       	sbci	r29, 0xFE	; 254
    165e:	e8 81       	ld	r30, Y
    1660:	f9 81       	ldd	r31, Y+1	; 0x01
    1662:	c6 55       	subi	r28, 0x56	; 86
    1664:	d1 40       	sbci	r29, 0x01	; 1
    1666:	00 80       	ld	r0, Z
    1668:	ca 5a       	subi	r28, 0xAA	; 170
    166a:	de 4f       	sbci	r29, 0xFE	; 254
    166c:	88 81       	ld	r24, Y
    166e:	99 81       	ldd	r25, Y+1	; 0x01
    1670:	c6 55       	subi	r28, 0x56	; 86
    1672:	d1 40       	sbci	r29, 0x01	; 1
    1674:	01 96       	adiw	r24, 0x01	; 1
    1676:	ca 5a       	subi	r28, 0xAA	; 170
    1678:	de 4f       	sbci	r29, 0xFE	; 254
    167a:	99 83       	std	Y+1, r25	; 0x01
    167c:	88 83       	st	Y, r24
    167e:	c6 55       	subi	r28, 0x56	; 86
    1680:	d1 40       	sbci	r29, 0x01	; 1
    1682:	cc 5a       	subi	r28, 0xAC	; 172
    1684:	de 4f       	sbci	r29, 0xFE	; 254
    1686:	e8 81       	ld	r30, Y
    1688:	f9 81       	ldd	r31, Y+1	; 0x01
    168a:	c4 55       	subi	r28, 0x54	; 84
    168c:	d1 40       	sbci	r29, 0x01	; 1
    168e:	00 82       	st	Z, r0
    1690:	cc 5a       	subi	r28, 0xAC	; 172
    1692:	de 4f       	sbci	r29, 0xFE	; 254
    1694:	88 81       	ld	r24, Y
    1696:	99 81       	ldd	r25, Y+1	; 0x01
    1698:	c4 55       	subi	r28, 0x54	; 84
    169a:	d1 40       	sbci	r29, 0x01	; 1
    169c:	01 96       	adiw	r24, 0x01	; 1
    169e:	cc 5a       	subi	r28, 0xAC	; 172
    16a0:	de 4f       	sbci	r29, 0xFE	; 254
    16a2:	99 83       	std	Y+1, r25	; 0x01
    16a4:	88 83       	st	Y, r24
    16a6:	c4 55       	subi	r28, 0x54	; 84
    16a8:	d1 40       	sbci	r29, 0x01	; 1
    16aa:	c8 5a       	subi	r28, 0xA8	; 168
    16ac:	de 4f       	sbci	r29, 0xFE	; 254
    16ae:	98 81       	ld	r25, Y
    16b0:	c8 55       	subi	r28, 0x58	; 88
    16b2:	d1 40       	sbci	r29, 0x01	; 1
    16b4:	91 50       	subi	r25, 0x01	; 1
    16b6:	c8 5a       	subi	r28, 0xA8	; 168
    16b8:	de 4f       	sbci	r29, 0xFE	; 254
    16ba:	98 83       	st	Y, r25
    16bc:	c8 55       	subi	r28, 0x58	; 88
    16be:	d1 40       	sbci	r29, 0x01	; 1
    16c0:	c8 5a       	subi	r28, 0xA8	; 168
    16c2:	de 4f       	sbci	r29, 0xFE	; 254
    16c4:	e8 81       	ld	r30, Y
    16c6:	c8 55       	subi	r28, 0x58	; 88
    16c8:	d1 40       	sbci	r29, 0x01	; 1
    16ca:	ee 23       	and	r30, r30
    16cc:	31 f6       	brne	.-116    	; 0x165a <main+0x2d0>
	LED_Confgration LED1={DIO_PORTA ,DIO_PIN0,ACTIVE_HIGH};
    16ce:	ce 01       	movw	r24, r28
    16d0:	88 5d       	subi	r24, 0xD8	; 216
    16d2:	9e 4f       	sbci	r25, 0xFE	; 254
    16d4:	c7 5a       	subi	r28, 0xA7	; 167
    16d6:	de 4f       	sbci	r29, 0xFE	; 254
    16d8:	99 83       	std	Y+1, r25	; 0x01
    16da:	88 83       	st	Y, r24
    16dc:	c9 55       	subi	r28, 0x59	; 89
    16de:	d1 40       	sbci	r29, 0x01	; 1
    16e0:	8d e7       	ldi	r24, 0x7D	; 125
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	c5 5a       	subi	r28, 0xA5	; 165
    16e6:	de 4f       	sbci	r29, 0xFE	; 254
    16e8:	99 83       	std	Y+1, r25	; 0x01
    16ea:	88 83       	st	Y, r24
    16ec:	cb 55       	subi	r28, 0x5B	; 91
    16ee:	d1 40       	sbci	r29, 0x01	; 1
    16f0:	93 e0       	ldi	r25, 0x03	; 3
    16f2:	c3 5a       	subi	r28, 0xA3	; 163
    16f4:	de 4f       	sbci	r29, 0xFE	; 254
    16f6:	98 83       	st	Y, r25
    16f8:	cd 55       	subi	r28, 0x5D	; 93
    16fa:	d1 40       	sbci	r29, 0x01	; 1
    16fc:	c5 5a       	subi	r28, 0xA5	; 165
    16fe:	de 4f       	sbci	r29, 0xFE	; 254
    1700:	e8 81       	ld	r30, Y
    1702:	f9 81       	ldd	r31, Y+1	; 0x01
    1704:	cb 55       	subi	r28, 0x5B	; 91
    1706:	d1 40       	sbci	r29, 0x01	; 1
    1708:	00 80       	ld	r0, Z
    170a:	c5 5a       	subi	r28, 0xA5	; 165
    170c:	de 4f       	sbci	r29, 0xFE	; 254
    170e:	88 81       	ld	r24, Y
    1710:	99 81       	ldd	r25, Y+1	; 0x01
    1712:	cb 55       	subi	r28, 0x5B	; 91
    1714:	d1 40       	sbci	r29, 0x01	; 1
    1716:	01 96       	adiw	r24, 0x01	; 1
    1718:	c5 5a       	subi	r28, 0xA5	; 165
    171a:	de 4f       	sbci	r29, 0xFE	; 254
    171c:	99 83       	std	Y+1, r25	; 0x01
    171e:	88 83       	st	Y, r24
    1720:	cb 55       	subi	r28, 0x5B	; 91
    1722:	d1 40       	sbci	r29, 0x01	; 1
    1724:	c7 5a       	subi	r28, 0xA7	; 167
    1726:	de 4f       	sbci	r29, 0xFE	; 254
    1728:	e8 81       	ld	r30, Y
    172a:	f9 81       	ldd	r31, Y+1	; 0x01
    172c:	c9 55       	subi	r28, 0x59	; 89
    172e:	d1 40       	sbci	r29, 0x01	; 1
    1730:	00 82       	st	Z, r0
    1732:	c7 5a       	subi	r28, 0xA7	; 167
    1734:	de 4f       	sbci	r29, 0xFE	; 254
    1736:	88 81       	ld	r24, Y
    1738:	99 81       	ldd	r25, Y+1	; 0x01
    173a:	c9 55       	subi	r28, 0x59	; 89
    173c:	d1 40       	sbci	r29, 0x01	; 1
    173e:	01 96       	adiw	r24, 0x01	; 1
    1740:	c7 5a       	subi	r28, 0xA7	; 167
    1742:	de 4f       	sbci	r29, 0xFE	; 254
    1744:	99 83       	std	Y+1, r25	; 0x01
    1746:	88 83       	st	Y, r24
    1748:	c9 55       	subi	r28, 0x59	; 89
    174a:	d1 40       	sbci	r29, 0x01	; 1
    174c:	c3 5a       	subi	r28, 0xA3	; 163
    174e:	de 4f       	sbci	r29, 0xFE	; 254
    1750:	98 81       	ld	r25, Y
    1752:	cd 55       	subi	r28, 0x5D	; 93
    1754:	d1 40       	sbci	r29, 0x01	; 1
    1756:	91 50       	subi	r25, 0x01	; 1
    1758:	c3 5a       	subi	r28, 0xA3	; 163
    175a:	de 4f       	sbci	r29, 0xFE	; 254
    175c:	98 83       	st	Y, r25
    175e:	cd 55       	subi	r28, 0x5D	; 93
    1760:	d1 40       	sbci	r29, 0x01	; 1
    1762:	c3 5a       	subi	r28, 0xA3	; 163
    1764:	de 4f       	sbci	r29, 0xFE	; 254
    1766:	e8 81       	ld	r30, Y
    1768:	cd 55       	subi	r28, 0x5D	; 93
    176a:	d1 40       	sbci	r29, 0x01	; 1
    176c:	ee 23       	and	r30, r30
    176e:	31 f6       	brne	.-116    	; 0x16fc <main+0x372>
	LED_voidInit(LED1);
    1770:	fe 01       	movw	r30, r28
    1772:	e8 5d       	subi	r30, 0xD8	; 216
    1774:	fe 4f       	sbci	r31, 0xFE	; 254
    1776:	60 81       	ld	r22, Z
    1778:	71 81       	ldd	r23, Z+1	; 0x01
    177a:	82 81       	ldd	r24, Z+2	; 0x02
    177c:	0e 94 5e 09 	call	0x12bc	; 0x12bc <LED_voidInit>
	LED_Confgration LED2={DIO_PORTA ,DIO_PIN1,ACTIVE_HIGH};
    1780:	ce 01       	movw	r24, r28
    1782:	85 5d       	subi	r24, 0xD5	; 213
    1784:	9e 4f       	sbci	r25, 0xFE	; 254
    1786:	c2 5a       	subi	r28, 0xA2	; 162
    1788:	de 4f       	sbci	r29, 0xFE	; 254
    178a:	99 83       	std	Y+1, r25	; 0x01
    178c:	88 83       	st	Y, r24
    178e:	ce 55       	subi	r28, 0x5E	; 94
    1790:	d1 40       	sbci	r29, 0x01	; 1
    1792:	8a e7       	ldi	r24, 0x7A	; 122
    1794:	90 e0       	ldi	r25, 0x00	; 0
    1796:	c0 5a       	subi	r28, 0xA0	; 160
    1798:	de 4f       	sbci	r29, 0xFE	; 254
    179a:	99 83       	std	Y+1, r25	; 0x01
    179c:	88 83       	st	Y, r24
    179e:	c0 56       	subi	r28, 0x60	; 96
    17a0:	d1 40       	sbci	r29, 0x01	; 1
    17a2:	93 e0       	ldi	r25, 0x03	; 3
    17a4:	ce 59       	subi	r28, 0x9E	; 158
    17a6:	de 4f       	sbci	r29, 0xFE	; 254
    17a8:	98 83       	st	Y, r25
    17aa:	c2 56       	subi	r28, 0x62	; 98
    17ac:	d1 40       	sbci	r29, 0x01	; 1
    17ae:	c0 5a       	subi	r28, 0xA0	; 160
    17b0:	de 4f       	sbci	r29, 0xFE	; 254
    17b2:	e8 81       	ld	r30, Y
    17b4:	f9 81       	ldd	r31, Y+1	; 0x01
    17b6:	c0 56       	subi	r28, 0x60	; 96
    17b8:	d1 40       	sbci	r29, 0x01	; 1
    17ba:	00 80       	ld	r0, Z
    17bc:	c0 5a       	subi	r28, 0xA0	; 160
    17be:	de 4f       	sbci	r29, 0xFE	; 254
    17c0:	88 81       	ld	r24, Y
    17c2:	99 81       	ldd	r25, Y+1	; 0x01
    17c4:	c0 56       	subi	r28, 0x60	; 96
    17c6:	d1 40       	sbci	r29, 0x01	; 1
    17c8:	01 96       	adiw	r24, 0x01	; 1
    17ca:	c0 5a       	subi	r28, 0xA0	; 160
    17cc:	de 4f       	sbci	r29, 0xFE	; 254
    17ce:	99 83       	std	Y+1, r25	; 0x01
    17d0:	88 83       	st	Y, r24
    17d2:	c0 56       	subi	r28, 0x60	; 96
    17d4:	d1 40       	sbci	r29, 0x01	; 1
    17d6:	c2 5a       	subi	r28, 0xA2	; 162
    17d8:	de 4f       	sbci	r29, 0xFE	; 254
    17da:	e8 81       	ld	r30, Y
    17dc:	f9 81       	ldd	r31, Y+1	; 0x01
    17de:	ce 55       	subi	r28, 0x5E	; 94
    17e0:	d1 40       	sbci	r29, 0x01	; 1
    17e2:	00 82       	st	Z, r0
    17e4:	c2 5a       	subi	r28, 0xA2	; 162
    17e6:	de 4f       	sbci	r29, 0xFE	; 254
    17e8:	88 81       	ld	r24, Y
    17ea:	99 81       	ldd	r25, Y+1	; 0x01
    17ec:	ce 55       	subi	r28, 0x5E	; 94
    17ee:	d1 40       	sbci	r29, 0x01	; 1
    17f0:	01 96       	adiw	r24, 0x01	; 1
    17f2:	c2 5a       	subi	r28, 0xA2	; 162
    17f4:	de 4f       	sbci	r29, 0xFE	; 254
    17f6:	99 83       	std	Y+1, r25	; 0x01
    17f8:	88 83       	st	Y, r24
    17fa:	ce 55       	subi	r28, 0x5E	; 94
    17fc:	d1 40       	sbci	r29, 0x01	; 1
    17fe:	ce 59       	subi	r28, 0x9E	; 158
    1800:	de 4f       	sbci	r29, 0xFE	; 254
    1802:	98 81       	ld	r25, Y
    1804:	c2 56       	subi	r28, 0x62	; 98
    1806:	d1 40       	sbci	r29, 0x01	; 1
    1808:	91 50       	subi	r25, 0x01	; 1
    180a:	ce 59       	subi	r28, 0x9E	; 158
    180c:	de 4f       	sbci	r29, 0xFE	; 254
    180e:	98 83       	st	Y, r25
    1810:	c2 56       	subi	r28, 0x62	; 98
    1812:	d1 40       	sbci	r29, 0x01	; 1
    1814:	ce 59       	subi	r28, 0x9E	; 158
    1816:	de 4f       	sbci	r29, 0xFE	; 254
    1818:	e8 81       	ld	r30, Y
    181a:	c2 56       	subi	r28, 0x62	; 98
    181c:	d1 40       	sbci	r29, 0x01	; 1
    181e:	ee 23       	and	r30, r30
    1820:	31 f6       	brne	.-116    	; 0x17ae <main+0x424>
	LED_voidInit(LED2);
    1822:	fe 01       	movw	r30, r28
    1824:	e5 5d       	subi	r30, 0xD5	; 213
    1826:	fe 4f       	sbci	r31, 0xFE	; 254
    1828:	60 81       	ld	r22, Z
    182a:	71 81       	ldd	r23, Z+1	; 0x01
    182c:	82 81       	ldd	r24, Z+2	; 0x02
    182e:	0e 94 5e 09 	call	0x12bc	; 0x12bc <LED_voidInit>
	LED_Confgration LED3={DIO_PORTA ,DIO_PIN2,ACTIVE_HIGH};
    1832:	ce 01       	movw	r24, r28
    1834:	82 5d       	subi	r24, 0xD2	; 210
    1836:	9e 4f       	sbci	r25, 0xFE	; 254
    1838:	cd 59       	subi	r28, 0x9D	; 157
    183a:	de 4f       	sbci	r29, 0xFE	; 254
    183c:	99 83       	std	Y+1, r25	; 0x01
    183e:	88 83       	st	Y, r24
    1840:	c3 56       	subi	r28, 0x63	; 99
    1842:	d1 40       	sbci	r29, 0x01	; 1
    1844:	87 e7       	ldi	r24, 0x77	; 119
    1846:	90 e0       	ldi	r25, 0x00	; 0
    1848:	cb 59       	subi	r28, 0x9B	; 155
    184a:	de 4f       	sbci	r29, 0xFE	; 254
    184c:	99 83       	std	Y+1, r25	; 0x01
    184e:	88 83       	st	Y, r24
    1850:	c5 56       	subi	r28, 0x65	; 101
    1852:	d1 40       	sbci	r29, 0x01	; 1
    1854:	93 e0       	ldi	r25, 0x03	; 3
    1856:	c9 59       	subi	r28, 0x99	; 153
    1858:	de 4f       	sbci	r29, 0xFE	; 254
    185a:	98 83       	st	Y, r25
    185c:	c7 56       	subi	r28, 0x67	; 103
    185e:	d1 40       	sbci	r29, 0x01	; 1
    1860:	cb 59       	subi	r28, 0x9B	; 155
    1862:	de 4f       	sbci	r29, 0xFE	; 254
    1864:	e8 81       	ld	r30, Y
    1866:	f9 81       	ldd	r31, Y+1	; 0x01
    1868:	c5 56       	subi	r28, 0x65	; 101
    186a:	d1 40       	sbci	r29, 0x01	; 1
    186c:	00 80       	ld	r0, Z
    186e:	cb 59       	subi	r28, 0x9B	; 155
    1870:	de 4f       	sbci	r29, 0xFE	; 254
    1872:	88 81       	ld	r24, Y
    1874:	99 81       	ldd	r25, Y+1	; 0x01
    1876:	c5 56       	subi	r28, 0x65	; 101
    1878:	d1 40       	sbci	r29, 0x01	; 1
    187a:	01 96       	adiw	r24, 0x01	; 1
    187c:	cb 59       	subi	r28, 0x9B	; 155
    187e:	de 4f       	sbci	r29, 0xFE	; 254
    1880:	99 83       	std	Y+1, r25	; 0x01
    1882:	88 83       	st	Y, r24
    1884:	c5 56       	subi	r28, 0x65	; 101
    1886:	d1 40       	sbci	r29, 0x01	; 1
    1888:	cd 59       	subi	r28, 0x9D	; 157
    188a:	de 4f       	sbci	r29, 0xFE	; 254
    188c:	e8 81       	ld	r30, Y
    188e:	f9 81       	ldd	r31, Y+1	; 0x01
    1890:	c3 56       	subi	r28, 0x63	; 99
    1892:	d1 40       	sbci	r29, 0x01	; 1
    1894:	00 82       	st	Z, r0
    1896:	cd 59       	subi	r28, 0x9D	; 157
    1898:	de 4f       	sbci	r29, 0xFE	; 254
    189a:	88 81       	ld	r24, Y
    189c:	99 81       	ldd	r25, Y+1	; 0x01
    189e:	c3 56       	subi	r28, 0x63	; 99
    18a0:	d1 40       	sbci	r29, 0x01	; 1
    18a2:	01 96       	adiw	r24, 0x01	; 1
    18a4:	cd 59       	subi	r28, 0x9D	; 157
    18a6:	de 4f       	sbci	r29, 0xFE	; 254
    18a8:	99 83       	std	Y+1, r25	; 0x01
    18aa:	88 83       	st	Y, r24
    18ac:	c3 56       	subi	r28, 0x63	; 99
    18ae:	d1 40       	sbci	r29, 0x01	; 1
    18b0:	c9 59       	subi	r28, 0x99	; 153
    18b2:	de 4f       	sbci	r29, 0xFE	; 254
    18b4:	98 81       	ld	r25, Y
    18b6:	c7 56       	subi	r28, 0x67	; 103
    18b8:	d1 40       	sbci	r29, 0x01	; 1
    18ba:	91 50       	subi	r25, 0x01	; 1
    18bc:	c9 59       	subi	r28, 0x99	; 153
    18be:	de 4f       	sbci	r29, 0xFE	; 254
    18c0:	98 83       	st	Y, r25
    18c2:	c7 56       	subi	r28, 0x67	; 103
    18c4:	d1 40       	sbci	r29, 0x01	; 1
    18c6:	c9 59       	subi	r28, 0x99	; 153
    18c8:	de 4f       	sbci	r29, 0xFE	; 254
    18ca:	e8 81       	ld	r30, Y
    18cc:	c7 56       	subi	r28, 0x67	; 103
    18ce:	d1 40       	sbci	r29, 0x01	; 1
    18d0:	ee 23       	and	r30, r30
    18d2:	31 f6       	brne	.-116    	; 0x1860 <main+0x4d6>
	LED_voidInit(LED3);
    18d4:	fe 01       	movw	r30, r28
    18d6:	e2 5d       	subi	r30, 0xD2	; 210
    18d8:	fe 4f       	sbci	r31, 0xFE	; 254
    18da:	60 81       	ld	r22, Z
    18dc:	71 81       	ldd	r23, Z+1	; 0x01
    18de:	82 81       	ldd	r24, Z+2	; 0x02
    18e0:	0e 94 5e 09 	call	0x12bc	; 0x12bc <LED_voidInit>
	LED_Confgration LED5={DIO_PORTA ,DIO_PIN3,ACTIVE_HIGH};
    18e4:	ce 01       	movw	r24, r28
    18e6:	8f 5c       	subi	r24, 0xCF	; 207
    18e8:	9e 4f       	sbci	r25, 0xFE	; 254
    18ea:	c8 59       	subi	r28, 0x98	; 152
    18ec:	de 4f       	sbci	r29, 0xFE	; 254
    18ee:	99 83       	std	Y+1, r25	; 0x01
    18f0:	88 83       	st	Y, r24
    18f2:	c8 56       	subi	r28, 0x68	; 104
    18f4:	d1 40       	sbci	r29, 0x01	; 1
    18f6:	84 e7       	ldi	r24, 0x74	; 116
    18f8:	90 e0       	ldi	r25, 0x00	; 0
    18fa:	c6 59       	subi	r28, 0x96	; 150
    18fc:	de 4f       	sbci	r29, 0xFE	; 254
    18fe:	99 83       	std	Y+1, r25	; 0x01
    1900:	88 83       	st	Y, r24
    1902:	ca 56       	subi	r28, 0x6A	; 106
    1904:	d1 40       	sbci	r29, 0x01	; 1
    1906:	93 e0       	ldi	r25, 0x03	; 3
    1908:	c4 59       	subi	r28, 0x94	; 148
    190a:	de 4f       	sbci	r29, 0xFE	; 254
    190c:	98 83       	st	Y, r25
    190e:	cc 56       	subi	r28, 0x6C	; 108
    1910:	d1 40       	sbci	r29, 0x01	; 1
    1912:	c6 59       	subi	r28, 0x96	; 150
    1914:	de 4f       	sbci	r29, 0xFE	; 254
    1916:	e8 81       	ld	r30, Y
    1918:	f9 81       	ldd	r31, Y+1	; 0x01
    191a:	ca 56       	subi	r28, 0x6A	; 106
    191c:	d1 40       	sbci	r29, 0x01	; 1
    191e:	00 80       	ld	r0, Z
    1920:	c6 59       	subi	r28, 0x96	; 150
    1922:	de 4f       	sbci	r29, 0xFE	; 254
    1924:	88 81       	ld	r24, Y
    1926:	99 81       	ldd	r25, Y+1	; 0x01
    1928:	ca 56       	subi	r28, 0x6A	; 106
    192a:	d1 40       	sbci	r29, 0x01	; 1
    192c:	01 96       	adiw	r24, 0x01	; 1
    192e:	c6 59       	subi	r28, 0x96	; 150
    1930:	de 4f       	sbci	r29, 0xFE	; 254
    1932:	99 83       	std	Y+1, r25	; 0x01
    1934:	88 83       	st	Y, r24
    1936:	ca 56       	subi	r28, 0x6A	; 106
    1938:	d1 40       	sbci	r29, 0x01	; 1
    193a:	c8 59       	subi	r28, 0x98	; 152
    193c:	de 4f       	sbci	r29, 0xFE	; 254
    193e:	e8 81       	ld	r30, Y
    1940:	f9 81       	ldd	r31, Y+1	; 0x01
    1942:	c8 56       	subi	r28, 0x68	; 104
    1944:	d1 40       	sbci	r29, 0x01	; 1
    1946:	00 82       	st	Z, r0
    1948:	c8 59       	subi	r28, 0x98	; 152
    194a:	de 4f       	sbci	r29, 0xFE	; 254
    194c:	88 81       	ld	r24, Y
    194e:	99 81       	ldd	r25, Y+1	; 0x01
    1950:	c8 56       	subi	r28, 0x68	; 104
    1952:	d1 40       	sbci	r29, 0x01	; 1
    1954:	01 96       	adiw	r24, 0x01	; 1
    1956:	c8 59       	subi	r28, 0x98	; 152
    1958:	de 4f       	sbci	r29, 0xFE	; 254
    195a:	99 83       	std	Y+1, r25	; 0x01
    195c:	88 83       	st	Y, r24
    195e:	c8 56       	subi	r28, 0x68	; 104
    1960:	d1 40       	sbci	r29, 0x01	; 1
    1962:	c4 59       	subi	r28, 0x94	; 148
    1964:	de 4f       	sbci	r29, 0xFE	; 254
    1966:	98 81       	ld	r25, Y
    1968:	cc 56       	subi	r28, 0x6C	; 108
    196a:	d1 40       	sbci	r29, 0x01	; 1
    196c:	91 50       	subi	r25, 0x01	; 1
    196e:	c4 59       	subi	r28, 0x94	; 148
    1970:	de 4f       	sbci	r29, 0xFE	; 254
    1972:	98 83       	st	Y, r25
    1974:	cc 56       	subi	r28, 0x6C	; 108
    1976:	d1 40       	sbci	r29, 0x01	; 1
    1978:	c4 59       	subi	r28, 0x94	; 148
    197a:	de 4f       	sbci	r29, 0xFE	; 254
    197c:	e8 81       	ld	r30, Y
    197e:	cc 56       	subi	r28, 0x6C	; 108
    1980:	d1 40       	sbci	r29, 0x01	; 1
    1982:	ee 23       	and	r30, r30
    1984:	31 f6       	brne	.-116    	; 0x1912 <main+0x588>
	LED_voidInit(LED5);
    1986:	fe 01       	movw	r30, r28
    1988:	ef 5c       	subi	r30, 0xCF	; 207
    198a:	fe 4f       	sbci	r31, 0xFE	; 254
    198c:	60 81       	ld	r22, Z
    198e:	71 81       	ldd	r23, Z+1	; 0x01
    1990:	82 81       	ldd	r24, Z+2	; 0x02
    1992:	0e 94 5e 09 	call	0x12bc	; 0x12bc <LED_voidInit>
	LED_Confgration LED6={DIO_PORTA ,DIO_PIN4,ACTIVE_HIGH};
    1996:	ce 01       	movw	r24, r28
    1998:	8c 5c       	subi	r24, 0xCC	; 204
    199a:	9e 4f       	sbci	r25, 0xFE	; 254
    199c:	c3 59       	subi	r28, 0x93	; 147
    199e:	de 4f       	sbci	r29, 0xFE	; 254
    19a0:	99 83       	std	Y+1, r25	; 0x01
    19a2:	88 83       	st	Y, r24
    19a4:	cd 56       	subi	r28, 0x6D	; 109
    19a6:	d1 40       	sbci	r29, 0x01	; 1
    19a8:	81 e7       	ldi	r24, 0x71	; 113
    19aa:	90 e0       	ldi	r25, 0x00	; 0
    19ac:	c1 59       	subi	r28, 0x91	; 145
    19ae:	de 4f       	sbci	r29, 0xFE	; 254
    19b0:	99 83       	std	Y+1, r25	; 0x01
    19b2:	88 83       	st	Y, r24
    19b4:	cf 56       	subi	r28, 0x6F	; 111
    19b6:	d1 40       	sbci	r29, 0x01	; 1
    19b8:	93 e0       	ldi	r25, 0x03	; 3
    19ba:	cf 58       	subi	r28, 0x8F	; 143
    19bc:	de 4f       	sbci	r29, 0xFE	; 254
    19be:	98 83       	st	Y, r25
    19c0:	c1 57       	subi	r28, 0x71	; 113
    19c2:	d1 40       	sbci	r29, 0x01	; 1
    19c4:	c1 59       	subi	r28, 0x91	; 145
    19c6:	de 4f       	sbci	r29, 0xFE	; 254
    19c8:	e8 81       	ld	r30, Y
    19ca:	f9 81       	ldd	r31, Y+1	; 0x01
    19cc:	cf 56       	subi	r28, 0x6F	; 111
    19ce:	d1 40       	sbci	r29, 0x01	; 1
    19d0:	00 80       	ld	r0, Z
    19d2:	c1 59       	subi	r28, 0x91	; 145
    19d4:	de 4f       	sbci	r29, 0xFE	; 254
    19d6:	88 81       	ld	r24, Y
    19d8:	99 81       	ldd	r25, Y+1	; 0x01
    19da:	cf 56       	subi	r28, 0x6F	; 111
    19dc:	d1 40       	sbci	r29, 0x01	; 1
    19de:	01 96       	adiw	r24, 0x01	; 1
    19e0:	c1 59       	subi	r28, 0x91	; 145
    19e2:	de 4f       	sbci	r29, 0xFE	; 254
    19e4:	99 83       	std	Y+1, r25	; 0x01
    19e6:	88 83       	st	Y, r24
    19e8:	cf 56       	subi	r28, 0x6F	; 111
    19ea:	d1 40       	sbci	r29, 0x01	; 1
    19ec:	c3 59       	subi	r28, 0x93	; 147
    19ee:	de 4f       	sbci	r29, 0xFE	; 254
    19f0:	e8 81       	ld	r30, Y
    19f2:	f9 81       	ldd	r31, Y+1	; 0x01
    19f4:	cd 56       	subi	r28, 0x6D	; 109
    19f6:	d1 40       	sbci	r29, 0x01	; 1
    19f8:	00 82       	st	Z, r0
    19fa:	c3 59       	subi	r28, 0x93	; 147
    19fc:	de 4f       	sbci	r29, 0xFE	; 254
    19fe:	88 81       	ld	r24, Y
    1a00:	99 81       	ldd	r25, Y+1	; 0x01
    1a02:	cd 56       	subi	r28, 0x6D	; 109
    1a04:	d1 40       	sbci	r29, 0x01	; 1
    1a06:	01 96       	adiw	r24, 0x01	; 1
    1a08:	c3 59       	subi	r28, 0x93	; 147
    1a0a:	de 4f       	sbci	r29, 0xFE	; 254
    1a0c:	99 83       	std	Y+1, r25	; 0x01
    1a0e:	88 83       	st	Y, r24
    1a10:	cd 56       	subi	r28, 0x6D	; 109
    1a12:	d1 40       	sbci	r29, 0x01	; 1
    1a14:	cf 58       	subi	r28, 0x8F	; 143
    1a16:	de 4f       	sbci	r29, 0xFE	; 254
    1a18:	98 81       	ld	r25, Y
    1a1a:	c1 57       	subi	r28, 0x71	; 113
    1a1c:	d1 40       	sbci	r29, 0x01	; 1
    1a1e:	91 50       	subi	r25, 0x01	; 1
    1a20:	cf 58       	subi	r28, 0x8F	; 143
    1a22:	de 4f       	sbci	r29, 0xFE	; 254
    1a24:	98 83       	st	Y, r25
    1a26:	c1 57       	subi	r28, 0x71	; 113
    1a28:	d1 40       	sbci	r29, 0x01	; 1
    1a2a:	cf 58       	subi	r28, 0x8F	; 143
    1a2c:	de 4f       	sbci	r29, 0xFE	; 254
    1a2e:	e8 81       	ld	r30, Y
    1a30:	c1 57       	subi	r28, 0x71	; 113
    1a32:	d1 40       	sbci	r29, 0x01	; 1
    1a34:	ee 23       	and	r30, r30
    1a36:	31 f6       	brne	.-116    	; 0x19c4 <main+0x63a>
	LED_voidInit(LED6);
    1a38:	fe 01       	movw	r30, r28
    1a3a:	ec 5c       	subi	r30, 0xCC	; 204
    1a3c:	fe 4f       	sbci	r31, 0xFE	; 254
    1a3e:	60 81       	ld	r22, Z
    1a40:	71 81       	ldd	r23, Z+1	; 0x01
    1a42:	82 81       	ldd	r24, Z+2	; 0x02
    1a44:	0e 94 5e 09 	call	0x12bc	; 0x12bc <LED_voidInit>
	LED_Confgration LED7={DIO_PORTC ,DIO_PIN2,ACTIVE_HIGH};
    1a48:	ce 01       	movw	r24, r28
    1a4a:	89 5c       	subi	r24, 0xC9	; 201
    1a4c:	9e 4f       	sbci	r25, 0xFE	; 254
    1a4e:	ce 58       	subi	r28, 0x8E	; 142
    1a50:	de 4f       	sbci	r29, 0xFE	; 254
    1a52:	99 83       	std	Y+1, r25	; 0x01
    1a54:	88 83       	st	Y, r24
    1a56:	c2 57       	subi	r28, 0x72	; 114
    1a58:	d1 40       	sbci	r29, 0x01	; 1
    1a5a:	8e e6       	ldi	r24, 0x6E	; 110
    1a5c:	90 e0       	ldi	r25, 0x00	; 0
    1a5e:	cc 58       	subi	r28, 0x8C	; 140
    1a60:	de 4f       	sbci	r29, 0xFE	; 254
    1a62:	99 83       	std	Y+1, r25	; 0x01
    1a64:	88 83       	st	Y, r24
    1a66:	c4 57       	subi	r28, 0x74	; 116
    1a68:	d1 40       	sbci	r29, 0x01	; 1
    1a6a:	93 e0       	ldi	r25, 0x03	; 3
    1a6c:	ca 58       	subi	r28, 0x8A	; 138
    1a6e:	de 4f       	sbci	r29, 0xFE	; 254
    1a70:	98 83       	st	Y, r25
    1a72:	c6 57       	subi	r28, 0x76	; 118
    1a74:	d1 40       	sbci	r29, 0x01	; 1
    1a76:	cc 58       	subi	r28, 0x8C	; 140
    1a78:	de 4f       	sbci	r29, 0xFE	; 254
    1a7a:	e8 81       	ld	r30, Y
    1a7c:	f9 81       	ldd	r31, Y+1	; 0x01
    1a7e:	c4 57       	subi	r28, 0x74	; 116
    1a80:	d1 40       	sbci	r29, 0x01	; 1
    1a82:	00 80       	ld	r0, Z
    1a84:	cc 58       	subi	r28, 0x8C	; 140
    1a86:	de 4f       	sbci	r29, 0xFE	; 254
    1a88:	88 81       	ld	r24, Y
    1a8a:	99 81       	ldd	r25, Y+1	; 0x01
    1a8c:	c4 57       	subi	r28, 0x74	; 116
    1a8e:	d1 40       	sbci	r29, 0x01	; 1
    1a90:	01 96       	adiw	r24, 0x01	; 1
    1a92:	cc 58       	subi	r28, 0x8C	; 140
    1a94:	de 4f       	sbci	r29, 0xFE	; 254
    1a96:	99 83       	std	Y+1, r25	; 0x01
    1a98:	88 83       	st	Y, r24
    1a9a:	c4 57       	subi	r28, 0x74	; 116
    1a9c:	d1 40       	sbci	r29, 0x01	; 1
    1a9e:	ce 58       	subi	r28, 0x8E	; 142
    1aa0:	de 4f       	sbci	r29, 0xFE	; 254
    1aa2:	e8 81       	ld	r30, Y
    1aa4:	f9 81       	ldd	r31, Y+1	; 0x01
    1aa6:	c2 57       	subi	r28, 0x72	; 114
    1aa8:	d1 40       	sbci	r29, 0x01	; 1
    1aaa:	00 82       	st	Z, r0
    1aac:	ce 58       	subi	r28, 0x8E	; 142
    1aae:	de 4f       	sbci	r29, 0xFE	; 254
    1ab0:	88 81       	ld	r24, Y
    1ab2:	99 81       	ldd	r25, Y+1	; 0x01
    1ab4:	c2 57       	subi	r28, 0x72	; 114
    1ab6:	d1 40       	sbci	r29, 0x01	; 1
    1ab8:	01 96       	adiw	r24, 0x01	; 1
    1aba:	ce 58       	subi	r28, 0x8E	; 142
    1abc:	de 4f       	sbci	r29, 0xFE	; 254
    1abe:	99 83       	std	Y+1, r25	; 0x01
    1ac0:	88 83       	st	Y, r24
    1ac2:	c2 57       	subi	r28, 0x72	; 114
    1ac4:	d1 40       	sbci	r29, 0x01	; 1
    1ac6:	ca 58       	subi	r28, 0x8A	; 138
    1ac8:	de 4f       	sbci	r29, 0xFE	; 254
    1aca:	98 81       	ld	r25, Y
    1acc:	c6 57       	subi	r28, 0x76	; 118
    1ace:	d1 40       	sbci	r29, 0x01	; 1
    1ad0:	91 50       	subi	r25, 0x01	; 1
    1ad2:	ca 58       	subi	r28, 0x8A	; 138
    1ad4:	de 4f       	sbci	r29, 0xFE	; 254
    1ad6:	98 83       	st	Y, r25
    1ad8:	c6 57       	subi	r28, 0x76	; 118
    1ada:	d1 40       	sbci	r29, 0x01	; 1
    1adc:	ca 58       	subi	r28, 0x8A	; 138
    1ade:	de 4f       	sbci	r29, 0xFE	; 254
    1ae0:	e8 81       	ld	r30, Y
    1ae2:	c6 57       	subi	r28, 0x76	; 118
    1ae4:	d1 40       	sbci	r29, 0x01	; 1
    1ae6:	ee 23       	and	r30, r30
    1ae8:	31 f6       	brne	.-116    	; 0x1a76 <main+0x6ec>
	LED_voidInit(LED7);
    1aea:	fe 01       	movw	r30, r28
    1aec:	e9 5c       	subi	r30, 0xC9	; 201
    1aee:	fe 4f       	sbci	r31, 0xFE	; 254
    1af0:	60 81       	ld	r22, Z
    1af2:	71 81       	ldd	r23, Z+1	; 0x01
    1af4:	82 81       	ldd	r24, Z+2	; 0x02
    1af6:	0e 94 5e 09 	call	0x12bc	; 0x12bc <LED_voidInit>
	LED_Confgration LED8={DIO_PORTC ,DIO_PIN3,ACTIVE_HIGH};
    1afa:	ce 01       	movw	r24, r28
    1afc:	86 5c       	subi	r24, 0xC6	; 198
    1afe:	9e 4f       	sbci	r25, 0xFE	; 254
    1b00:	c9 58       	subi	r28, 0x89	; 137
    1b02:	de 4f       	sbci	r29, 0xFE	; 254
    1b04:	99 83       	std	Y+1, r25	; 0x01
    1b06:	88 83       	st	Y, r24
    1b08:	c7 57       	subi	r28, 0x77	; 119
    1b0a:	d1 40       	sbci	r29, 0x01	; 1
    1b0c:	8b e6       	ldi	r24, 0x6B	; 107
    1b0e:	90 e0       	ldi	r25, 0x00	; 0
    1b10:	c7 58       	subi	r28, 0x87	; 135
    1b12:	de 4f       	sbci	r29, 0xFE	; 254
    1b14:	99 83       	std	Y+1, r25	; 0x01
    1b16:	88 83       	st	Y, r24
    1b18:	c9 57       	subi	r28, 0x79	; 121
    1b1a:	d1 40       	sbci	r29, 0x01	; 1
    1b1c:	93 e0       	ldi	r25, 0x03	; 3
    1b1e:	c5 58       	subi	r28, 0x85	; 133
    1b20:	de 4f       	sbci	r29, 0xFE	; 254
    1b22:	98 83       	st	Y, r25
    1b24:	cb 57       	subi	r28, 0x7B	; 123
    1b26:	d1 40       	sbci	r29, 0x01	; 1
    1b28:	c7 58       	subi	r28, 0x87	; 135
    1b2a:	de 4f       	sbci	r29, 0xFE	; 254
    1b2c:	e8 81       	ld	r30, Y
    1b2e:	f9 81       	ldd	r31, Y+1	; 0x01
    1b30:	c9 57       	subi	r28, 0x79	; 121
    1b32:	d1 40       	sbci	r29, 0x01	; 1
    1b34:	00 80       	ld	r0, Z
    1b36:	c7 58       	subi	r28, 0x87	; 135
    1b38:	de 4f       	sbci	r29, 0xFE	; 254
    1b3a:	88 81       	ld	r24, Y
    1b3c:	99 81       	ldd	r25, Y+1	; 0x01
    1b3e:	c9 57       	subi	r28, 0x79	; 121
    1b40:	d1 40       	sbci	r29, 0x01	; 1
    1b42:	01 96       	adiw	r24, 0x01	; 1
    1b44:	c7 58       	subi	r28, 0x87	; 135
    1b46:	de 4f       	sbci	r29, 0xFE	; 254
    1b48:	99 83       	std	Y+1, r25	; 0x01
    1b4a:	88 83       	st	Y, r24
    1b4c:	c9 57       	subi	r28, 0x79	; 121
    1b4e:	d1 40       	sbci	r29, 0x01	; 1
    1b50:	c9 58       	subi	r28, 0x89	; 137
    1b52:	de 4f       	sbci	r29, 0xFE	; 254
    1b54:	e8 81       	ld	r30, Y
    1b56:	f9 81       	ldd	r31, Y+1	; 0x01
    1b58:	c7 57       	subi	r28, 0x77	; 119
    1b5a:	d1 40       	sbci	r29, 0x01	; 1
    1b5c:	00 82       	st	Z, r0
    1b5e:	c9 58       	subi	r28, 0x89	; 137
    1b60:	de 4f       	sbci	r29, 0xFE	; 254
    1b62:	88 81       	ld	r24, Y
    1b64:	99 81       	ldd	r25, Y+1	; 0x01
    1b66:	c7 57       	subi	r28, 0x77	; 119
    1b68:	d1 40       	sbci	r29, 0x01	; 1
    1b6a:	01 96       	adiw	r24, 0x01	; 1
    1b6c:	c9 58       	subi	r28, 0x89	; 137
    1b6e:	de 4f       	sbci	r29, 0xFE	; 254
    1b70:	99 83       	std	Y+1, r25	; 0x01
    1b72:	88 83       	st	Y, r24
    1b74:	c7 57       	subi	r28, 0x77	; 119
    1b76:	d1 40       	sbci	r29, 0x01	; 1
    1b78:	c5 58       	subi	r28, 0x85	; 133
    1b7a:	de 4f       	sbci	r29, 0xFE	; 254
    1b7c:	98 81       	ld	r25, Y
    1b7e:	cb 57       	subi	r28, 0x7B	; 123
    1b80:	d1 40       	sbci	r29, 0x01	; 1
    1b82:	91 50       	subi	r25, 0x01	; 1
    1b84:	c5 58       	subi	r28, 0x85	; 133
    1b86:	de 4f       	sbci	r29, 0xFE	; 254
    1b88:	98 83       	st	Y, r25
    1b8a:	cb 57       	subi	r28, 0x7B	; 123
    1b8c:	d1 40       	sbci	r29, 0x01	; 1
    1b8e:	c5 58       	subi	r28, 0x85	; 133
    1b90:	de 4f       	sbci	r29, 0xFE	; 254
    1b92:	e8 81       	ld	r30, Y
    1b94:	cb 57       	subi	r28, 0x7B	; 123
    1b96:	d1 40       	sbci	r29, 0x01	; 1
    1b98:	ee 23       	and	r30, r30
    1b9a:	31 f6       	brne	.-116    	; 0x1b28 <main+0x79e>
	LED_voidInit(LED8);
    1b9c:	fe 01       	movw	r30, r28
    1b9e:	e6 5c       	subi	r30, 0xC6	; 198
    1ba0:	fe 4f       	sbci	r31, 0xFE	; 254
    1ba2:	60 81       	ld	r22, Z
    1ba4:	71 81       	ldd	r23, Z+1	; 0x01
    1ba6:	82 81       	ldd	r24, Z+2	; 0x02
    1ba8:	0e 94 5e 09 	call	0x12bc	; 0x12bc <LED_voidInit>
	LED_Confgration LED9={DIO_PORTC ,DIO_PIN4,ACTIVE_HIGH};
    1bac:	ce 01       	movw	r24, r28
    1bae:	83 5c       	subi	r24, 0xC3	; 195
    1bb0:	9e 4f       	sbci	r25, 0xFE	; 254
    1bb2:	c4 58       	subi	r28, 0x84	; 132
    1bb4:	de 4f       	sbci	r29, 0xFE	; 254
    1bb6:	99 83       	std	Y+1, r25	; 0x01
    1bb8:	88 83       	st	Y, r24
    1bba:	cc 57       	subi	r28, 0x7C	; 124
    1bbc:	d1 40       	sbci	r29, 0x01	; 1
    1bbe:	88 e6       	ldi	r24, 0x68	; 104
    1bc0:	90 e0       	ldi	r25, 0x00	; 0
    1bc2:	c2 58       	subi	r28, 0x82	; 130
    1bc4:	de 4f       	sbci	r29, 0xFE	; 254
    1bc6:	99 83       	std	Y+1, r25	; 0x01
    1bc8:	88 83       	st	Y, r24
    1bca:	ce 57       	subi	r28, 0x7E	; 126
    1bcc:	d1 40       	sbci	r29, 0x01	; 1
    1bce:	93 e0       	ldi	r25, 0x03	; 3
    1bd0:	c0 58       	subi	r28, 0x80	; 128
    1bd2:	de 4f       	sbci	r29, 0xFE	; 254
    1bd4:	98 83       	st	Y, r25
    1bd6:	c0 58       	subi	r28, 0x80	; 128
    1bd8:	d1 40       	sbci	r29, 0x01	; 1
    1bda:	c2 58       	subi	r28, 0x82	; 130
    1bdc:	de 4f       	sbci	r29, 0xFE	; 254
    1bde:	e8 81       	ld	r30, Y
    1be0:	f9 81       	ldd	r31, Y+1	; 0x01
    1be2:	ce 57       	subi	r28, 0x7E	; 126
    1be4:	d1 40       	sbci	r29, 0x01	; 1
    1be6:	00 80       	ld	r0, Z
    1be8:	c2 58       	subi	r28, 0x82	; 130
    1bea:	de 4f       	sbci	r29, 0xFE	; 254
    1bec:	88 81       	ld	r24, Y
    1bee:	99 81       	ldd	r25, Y+1	; 0x01
    1bf0:	ce 57       	subi	r28, 0x7E	; 126
    1bf2:	d1 40       	sbci	r29, 0x01	; 1
    1bf4:	01 96       	adiw	r24, 0x01	; 1
    1bf6:	c2 58       	subi	r28, 0x82	; 130
    1bf8:	de 4f       	sbci	r29, 0xFE	; 254
    1bfa:	99 83       	std	Y+1, r25	; 0x01
    1bfc:	88 83       	st	Y, r24
    1bfe:	ce 57       	subi	r28, 0x7E	; 126
    1c00:	d1 40       	sbci	r29, 0x01	; 1
    1c02:	c4 58       	subi	r28, 0x84	; 132
    1c04:	de 4f       	sbci	r29, 0xFE	; 254
    1c06:	e8 81       	ld	r30, Y
    1c08:	f9 81       	ldd	r31, Y+1	; 0x01
    1c0a:	cc 57       	subi	r28, 0x7C	; 124
    1c0c:	d1 40       	sbci	r29, 0x01	; 1
    1c0e:	00 82       	st	Z, r0
    1c10:	c4 58       	subi	r28, 0x84	; 132
    1c12:	de 4f       	sbci	r29, 0xFE	; 254
    1c14:	88 81       	ld	r24, Y
    1c16:	99 81       	ldd	r25, Y+1	; 0x01
    1c18:	cc 57       	subi	r28, 0x7C	; 124
    1c1a:	d1 40       	sbci	r29, 0x01	; 1
    1c1c:	01 96       	adiw	r24, 0x01	; 1
    1c1e:	c4 58       	subi	r28, 0x84	; 132
    1c20:	de 4f       	sbci	r29, 0xFE	; 254
    1c22:	99 83       	std	Y+1, r25	; 0x01
    1c24:	88 83       	st	Y, r24
    1c26:	cc 57       	subi	r28, 0x7C	; 124
    1c28:	d1 40       	sbci	r29, 0x01	; 1
    1c2a:	c0 58       	subi	r28, 0x80	; 128
    1c2c:	de 4f       	sbci	r29, 0xFE	; 254
    1c2e:	98 81       	ld	r25, Y
    1c30:	c0 58       	subi	r28, 0x80	; 128
    1c32:	d1 40       	sbci	r29, 0x01	; 1
    1c34:	91 50       	subi	r25, 0x01	; 1
    1c36:	c0 58       	subi	r28, 0x80	; 128
    1c38:	de 4f       	sbci	r29, 0xFE	; 254
    1c3a:	98 83       	st	Y, r25
    1c3c:	c0 58       	subi	r28, 0x80	; 128
    1c3e:	d1 40       	sbci	r29, 0x01	; 1
    1c40:	c0 58       	subi	r28, 0x80	; 128
    1c42:	de 4f       	sbci	r29, 0xFE	; 254
    1c44:	e8 81       	ld	r30, Y
    1c46:	c0 58       	subi	r28, 0x80	; 128
    1c48:	d1 40       	sbci	r29, 0x01	; 1
    1c4a:	ee 23       	and	r30, r30
    1c4c:	31 f6       	brne	.-116    	; 0x1bda <main+0x850>
	LED_voidInit(LED9);
    1c4e:	fe 01       	movw	r30, r28
    1c50:	e3 5c       	subi	r30, 0xC3	; 195
    1c52:	fe 4f       	sbci	r31, 0xFE	; 254
    1c54:	60 81       	ld	r22, Z
    1c56:	71 81       	ldd	r23, Z+1	; 0x01
    1c58:	82 81       	ldd	r24, Z+2	; 0x02
    1c5a:	0e 94 5e 09 	call	0x12bc	; 0x12bc <LED_voidInit>
	button_voidInit(B1);
    1c5e:	fe 01       	movw	r30, r28
    1c60:	e7 5e       	subi	r30, 0xE7	; 231
    1c62:	fe 4f       	sbci	r31, 0xFE	; 254
    1c64:	60 81       	ld	r22, Z
    1c66:	71 81       	ldd	r23, Z+1	; 0x01
    1c68:	82 81       	ldd	r24, Z+2	; 0x02
    1c6a:	0e 94 9c 1c 	call	0x3938	; 0x3938 <button_voidInit>
	button_voidInit(B2);
    1c6e:	fe 01       	movw	r30, r28
    1c70:	e4 5e       	subi	r30, 0xE4	; 228
    1c72:	fe 4f       	sbci	r31, 0xFE	; 254
    1c74:	60 81       	ld	r22, Z
    1c76:	71 81       	ldd	r23, Z+1	; 0x01
    1c78:	82 81       	ldd	r24, Z+2	; 0x02
    1c7a:	0e 94 9c 1c 	call	0x3938	; 0x3938 <button_voidInit>
	button_voidInit(B3);
    1c7e:	fe 01       	movw	r30, r28
    1c80:	e1 5e       	subi	r30, 0xE1	; 225
    1c82:	fe 4f       	sbci	r31, 0xFE	; 254
    1c84:	60 81       	ld	r22, Z
    1c86:	71 81       	ldd	r23, Z+1	; 0x01
    1c88:	82 81       	ldd	r24, Z+2	; 0x02
    1c8a:	0e 94 9c 1c 	call	0x3938	; 0x3938 <button_voidInit>
	button_voidInit(B4);
    1c8e:	fe 01       	movw	r30, r28
    1c90:	ee 5d       	subi	r30, 0xDE	; 222
    1c92:	fe 4f       	sbci	r31, 0xFE	; 254
    1c94:	60 81       	ld	r22, Z
    1c96:	71 81       	ldd	r23, Z+1	; 0x01
    1c98:	82 81       	ldd	r24, Z+2	; 0x02
    1c9a:	0e 94 9c 1c 	call	0x3938	; 0x3938 <button_voidInit>
	button_voidInit(B5);
    1c9e:	fe 01       	movw	r30, r28
    1ca0:	eb 5d       	subi	r30, 0xDB	; 219
    1ca2:	fe 4f       	sbci	r31, 0xFE	; 254
    1ca4:	60 81       	ld	r22, Z
    1ca6:	71 81       	ldd	r23, Z+1	; 0x01
    1ca8:	82 81       	ldd	r24, Z+2	; 0x02
    1caa:	0e 94 9c 1c 	call	0x3938	; 0x3938 <button_voidInit>

	while(1){
		/*some button draw shape*/

		if(button_u8GetPressed(B5)==0){
    1cae:	fe 01       	movw	r30, r28
    1cb0:	eb 5d       	subi	r30, 0xDB	; 219
    1cb2:	fe 4f       	sbci	r31, 0xFE	; 254
    1cb4:	60 81       	ld	r22, Z
    1cb6:	71 81       	ldd	r23, Z+1	; 0x01
    1cb8:	82 81       	ldd	r24, Z+2	; 0x02
    1cba:	0e 94 c4 1c 	call	0x3988	; 0x3988 <button_u8GetPressed>
    1cbe:	88 23       	and	r24, r24
    1cc0:	11 f0       	breq	.+4      	; 0x1cc6 <main+0x93c>
    1cc2:	0c 94 fc 1a 	jmp	0x35f8	; 0x35f8 <main+0x226e>
    1cc6:	0c 94 ee 1a 	jmp	0x35dc	; 0x35dc <main+0x2252>
while(button_u8GetPressed(B5)==0){
		if(button_u8GetPressed(B1)==0){
    1cca:	fe 01       	movw	r30, r28
    1ccc:	e7 5e       	subi	r30, 0xE7	; 231
    1cce:	fe 4f       	sbci	r31, 0xFE	; 254
    1cd0:	60 81       	ld	r22, Z
    1cd2:	71 81       	ldd	r23, Z+1	; 0x01
    1cd4:	82 81       	ldd	r24, Z+2	; 0x02
    1cd6:	0e 94 c4 1c 	call	0x3988	; 0x3988 <button_u8GetPressed>
    1cda:	88 23       	and	r24, r24
    1cdc:	09 f0       	breq	.+2      	; 0x1ce0 <main+0x956>
    1cde:	05 c1       	rjmp	.+522    	; 0x1eea <main+0xb60>


			LED_voidOn(LED1);
    1ce0:	fe 01       	movw	r30, r28
    1ce2:	e8 5d       	subi	r30, 0xD8	; 216
    1ce4:	fe 4f       	sbci	r31, 0xFE	; 254
    1ce6:	60 81       	ld	r22, Z
    1ce8:	71 81       	ldd	r23, Z+1	; 0x01
    1cea:	82 81       	ldd	r24, Z+2	; 0x02
    1cec:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
			LED_voidOn(LED2);
    1cf0:	fe 01       	movw	r30, r28
    1cf2:	e5 5d       	subi	r30, 0xD5	; 213
    1cf4:	fe 4f       	sbci	r31, 0xFE	; 254
    1cf6:	60 81       	ld	r22, Z
    1cf8:	71 81       	ldd	r23, Z+1	; 0x01
    1cfa:	82 81       	ldd	r24, Z+2	; 0x02
    1cfc:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
			LED_voidOn(LED3);
    1d00:	fe 01       	movw	r30, r28
    1d02:	e2 5d       	subi	r30, 0xD2	; 210
    1d04:	fe 4f       	sbci	r31, 0xFE	; 254
    1d06:	60 81       	ld	r22, Z
    1d08:	71 81       	ldd	r23, Z+1	; 0x01
    1d0a:	82 81       	ldd	r24, Z+2	; 0x02
    1d0c:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
			LED_voidOn(LED5);
    1d10:	fe 01       	movw	r30, r28
    1d12:	ef 5c       	subi	r30, 0xCF	; 207
    1d14:	fe 4f       	sbci	r31, 0xFE	; 254
    1d16:	60 81       	ld	r22, Z
    1d18:	71 81       	ldd	r23, Z+1	; 0x01
    1d1a:	82 81       	ldd	r24, Z+2	; 0x02
    1d1c:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
			LED_voidOn(LED6);
    1d20:	fe 01       	movw	r30, r28
    1d22:	ec 5c       	subi	r30, 0xCC	; 204
    1d24:	fe 4f       	sbci	r31, 0xFE	; 254
    1d26:	60 81       	ld	r22, Z
    1d28:	71 81       	ldd	r23, Z+1	; 0x01
    1d2a:	82 81       	ldd	r24, Z+2	; 0x02
    1d2c:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
    1d30:	fe 01       	movw	r30, r28
    1d32:	eb 5e       	subi	r30, 0xEB	; 235
    1d34:	fe 4f       	sbci	r31, 0xFE	; 254
    1d36:	80 e0       	ldi	r24, 0x00	; 0
    1d38:	90 e6       	ldi	r25, 0x60	; 96
    1d3a:	aa ee       	ldi	r26, 0xEA	; 234
    1d3c:	b6 e4       	ldi	r27, 0x46	; 70
    1d3e:	80 83       	st	Z, r24
    1d40:	91 83       	std	Z+1, r25	; 0x01
    1d42:	a2 83       	std	Z+2, r26	; 0x02
    1d44:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1d46:	8e 01       	movw	r16, r28
    1d48:	0f 5e       	subi	r16, 0xEF	; 239
    1d4a:	1e 4f       	sbci	r17, 0xFE	; 254
    1d4c:	fe 01       	movw	r30, r28
    1d4e:	eb 5e       	subi	r30, 0xEB	; 235
    1d50:	fe 4f       	sbci	r31, 0xFE	; 254
    1d52:	60 81       	ld	r22, Z
    1d54:	71 81       	ldd	r23, Z+1	; 0x01
    1d56:	82 81       	ldd	r24, Z+2	; 0x02
    1d58:	93 81       	ldd	r25, Z+3	; 0x03
    1d5a:	20 e0       	ldi	r18, 0x00	; 0
    1d5c:	30 e0       	ldi	r19, 0x00	; 0
    1d5e:	4a e7       	ldi	r20, 0x7A	; 122
    1d60:	53 e4       	ldi	r21, 0x43	; 67
    1d62:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d66:	dc 01       	movw	r26, r24
    1d68:	cb 01       	movw	r24, r22
    1d6a:	f8 01       	movw	r30, r16
    1d6c:	80 83       	st	Z, r24
    1d6e:	91 83       	std	Z+1, r25	; 0x01
    1d70:	a2 83       	std	Z+2, r26	; 0x02
    1d72:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d74:	fe 01       	movw	r30, r28
    1d76:	ef 5e       	subi	r30, 0xEF	; 239
    1d78:	fe 4f       	sbci	r31, 0xFE	; 254
    1d7a:	60 81       	ld	r22, Z
    1d7c:	71 81       	ldd	r23, Z+1	; 0x01
    1d7e:	82 81       	ldd	r24, Z+2	; 0x02
    1d80:	93 81       	ldd	r25, Z+3	; 0x03
    1d82:	20 e0       	ldi	r18, 0x00	; 0
    1d84:	30 e0       	ldi	r19, 0x00	; 0
    1d86:	40 e8       	ldi	r20, 0x80	; 128
    1d88:	5f e3       	ldi	r21, 0x3F	; 63
    1d8a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d8e:	88 23       	and	r24, r24
    1d90:	44 f4       	brge	.+16     	; 0x1da2 <main+0xa18>
		__ticks = 1;
    1d92:	fe 01       	movw	r30, r28
    1d94:	e1 5f       	subi	r30, 0xF1	; 241
    1d96:	fe 4f       	sbci	r31, 0xFE	; 254
    1d98:	81 e0       	ldi	r24, 0x01	; 1
    1d9a:	90 e0       	ldi	r25, 0x00	; 0
    1d9c:	91 83       	std	Z+1, r25	; 0x01
    1d9e:	80 83       	st	Z, r24
    1da0:	64 c0       	rjmp	.+200    	; 0x1e6a <main+0xae0>
	else if (__tmp > 65535)
    1da2:	fe 01       	movw	r30, r28
    1da4:	ef 5e       	subi	r30, 0xEF	; 239
    1da6:	fe 4f       	sbci	r31, 0xFE	; 254
    1da8:	60 81       	ld	r22, Z
    1daa:	71 81       	ldd	r23, Z+1	; 0x01
    1dac:	82 81       	ldd	r24, Z+2	; 0x02
    1dae:	93 81       	ldd	r25, Z+3	; 0x03
    1db0:	20 e0       	ldi	r18, 0x00	; 0
    1db2:	3f ef       	ldi	r19, 0xFF	; 255
    1db4:	4f e7       	ldi	r20, 0x7F	; 127
    1db6:	57 e4       	ldi	r21, 0x47	; 71
    1db8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1dbc:	18 16       	cp	r1, r24
    1dbe:	0c f0       	brlt	.+2      	; 0x1dc2 <main+0xa38>
    1dc0:	43 c0       	rjmp	.+134    	; 0x1e48 <main+0xabe>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1dc2:	fe 01       	movw	r30, r28
    1dc4:	eb 5e       	subi	r30, 0xEB	; 235
    1dc6:	fe 4f       	sbci	r31, 0xFE	; 254
    1dc8:	60 81       	ld	r22, Z
    1dca:	71 81       	ldd	r23, Z+1	; 0x01
    1dcc:	82 81       	ldd	r24, Z+2	; 0x02
    1dce:	93 81       	ldd	r25, Z+3	; 0x03
    1dd0:	20 e0       	ldi	r18, 0x00	; 0
    1dd2:	30 e0       	ldi	r19, 0x00	; 0
    1dd4:	40 e2       	ldi	r20, 0x20	; 32
    1dd6:	51 e4       	ldi	r21, 0x41	; 65
    1dd8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ddc:	dc 01       	movw	r26, r24
    1dde:	cb 01       	movw	r24, r22
    1de0:	8e 01       	movw	r16, r28
    1de2:	01 5f       	subi	r16, 0xF1	; 241
    1de4:	1e 4f       	sbci	r17, 0xFE	; 254
    1de6:	bc 01       	movw	r22, r24
    1de8:	cd 01       	movw	r24, r26
    1dea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1dee:	dc 01       	movw	r26, r24
    1df0:	cb 01       	movw	r24, r22
    1df2:	f8 01       	movw	r30, r16
    1df4:	91 83       	std	Z+1, r25	; 0x01
    1df6:	80 83       	st	Z, r24
    1df8:	1f c0       	rjmp	.+62     	; 0x1e38 <main+0xaae>
    1dfa:	fe 01       	movw	r30, r28
    1dfc:	e3 5f       	subi	r30, 0xF3	; 243
    1dfe:	fe 4f       	sbci	r31, 0xFE	; 254
    1e00:	89 e1       	ldi	r24, 0x19	; 25
    1e02:	90 e0       	ldi	r25, 0x00	; 0
    1e04:	91 83       	std	Z+1, r25	; 0x01
    1e06:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1e08:	fe 01       	movw	r30, r28
    1e0a:	e3 5f       	subi	r30, 0xF3	; 243
    1e0c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e0e:	80 81       	ld	r24, Z
    1e10:	91 81       	ldd	r25, Z+1	; 0x01
    1e12:	01 97       	sbiw	r24, 0x01	; 1
    1e14:	f1 f7       	brne	.-4      	; 0x1e12 <main+0xa88>
    1e16:	fe 01       	movw	r30, r28
    1e18:	e3 5f       	subi	r30, 0xF3	; 243
    1e1a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e1c:	91 83       	std	Z+1, r25	; 0x01
    1e1e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e20:	de 01       	movw	r26, r28
    1e22:	a1 5f       	subi	r26, 0xF1	; 241
    1e24:	be 4f       	sbci	r27, 0xFE	; 254
    1e26:	fe 01       	movw	r30, r28
    1e28:	e1 5f       	subi	r30, 0xF1	; 241
    1e2a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e2c:	80 81       	ld	r24, Z
    1e2e:	91 81       	ldd	r25, Z+1	; 0x01
    1e30:	01 97       	sbiw	r24, 0x01	; 1
    1e32:	11 96       	adiw	r26, 0x01	; 1
    1e34:	9c 93       	st	X, r25
    1e36:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1e38:	fe 01       	movw	r30, r28
    1e3a:	e1 5f       	subi	r30, 0xF1	; 241
    1e3c:	fe 4f       	sbci	r31, 0xFE	; 254
    1e3e:	80 81       	ld	r24, Z
    1e40:	91 81       	ldd	r25, Z+1	; 0x01
    1e42:	00 97       	sbiw	r24, 0x00	; 0
    1e44:	d1 f6       	brne	.-76     	; 0x1dfa <main+0xa70>
    1e46:	27 c0       	rjmp	.+78     	; 0x1e96 <main+0xb0c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1e48:	8e 01       	movw	r16, r28
    1e4a:	01 5f       	subi	r16, 0xF1	; 241
    1e4c:	1e 4f       	sbci	r17, 0xFE	; 254
    1e4e:	fe 01       	movw	r30, r28
    1e50:	ef 5e       	subi	r30, 0xEF	; 239
    1e52:	fe 4f       	sbci	r31, 0xFE	; 254
    1e54:	60 81       	ld	r22, Z
    1e56:	71 81       	ldd	r23, Z+1	; 0x01
    1e58:	82 81       	ldd	r24, Z+2	; 0x02
    1e5a:	93 81       	ldd	r25, Z+3	; 0x03
    1e5c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e60:	dc 01       	movw	r26, r24
    1e62:	cb 01       	movw	r24, r22
    1e64:	f8 01       	movw	r30, r16
    1e66:	91 83       	std	Z+1, r25	; 0x01
    1e68:	80 83       	st	Z, r24
    1e6a:	de 01       	movw	r26, r28
    1e6c:	a5 5f       	subi	r26, 0xF5	; 245
    1e6e:	be 4f       	sbci	r27, 0xFE	; 254
    1e70:	fe 01       	movw	r30, r28
    1e72:	e1 5f       	subi	r30, 0xF1	; 241
    1e74:	fe 4f       	sbci	r31, 0xFE	; 254
    1e76:	80 81       	ld	r24, Z
    1e78:	91 81       	ldd	r25, Z+1	; 0x01
    1e7a:	8d 93       	st	X+, r24
    1e7c:	9c 93       	st	X, r25
    1e7e:	fe 01       	movw	r30, r28
    1e80:	e5 5f       	subi	r30, 0xF5	; 245
    1e82:	fe 4f       	sbci	r31, 0xFE	; 254
    1e84:	80 81       	ld	r24, Z
    1e86:	91 81       	ldd	r25, Z+1	; 0x01
    1e88:	01 97       	sbiw	r24, 0x01	; 1
    1e8a:	f1 f7       	brne	.-4      	; 0x1e88 <main+0xafe>
    1e8c:	fe 01       	movw	r30, r28
    1e8e:	e5 5f       	subi	r30, 0xF5	; 245
    1e90:	fe 4f       	sbci	r31, 0xFE	; 254
    1e92:	91 83       	std	Z+1, r25	; 0x01
    1e94:	80 83       	st	Z, r24

			_delay_ms(30000);
			LED_voidOff(LED1);
    1e96:	fe 01       	movw	r30, r28
    1e98:	e8 5d       	subi	r30, 0xD8	; 216
    1e9a:	fe 4f       	sbci	r31, 0xFE	; 254
    1e9c:	60 81       	ld	r22, Z
    1e9e:	71 81       	ldd	r23, Z+1	; 0x01
    1ea0:	82 81       	ldd	r24, Z+2	; 0x02
    1ea2:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
			LED_voidOff(LED2);
    1ea6:	fe 01       	movw	r30, r28
    1ea8:	e5 5d       	subi	r30, 0xD5	; 213
    1eaa:	fe 4f       	sbci	r31, 0xFE	; 254
    1eac:	60 81       	ld	r22, Z
    1eae:	71 81       	ldd	r23, Z+1	; 0x01
    1eb0:	82 81       	ldd	r24, Z+2	; 0x02
    1eb2:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
			LED_voidOff(LED3);
    1eb6:	fe 01       	movw	r30, r28
    1eb8:	e2 5d       	subi	r30, 0xD2	; 210
    1eba:	fe 4f       	sbci	r31, 0xFE	; 254
    1ebc:	60 81       	ld	r22, Z
    1ebe:	71 81       	ldd	r23, Z+1	; 0x01
    1ec0:	82 81       	ldd	r24, Z+2	; 0x02
    1ec2:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
			LED_voidOff(LED5);
    1ec6:	fe 01       	movw	r30, r28
    1ec8:	ef 5c       	subi	r30, 0xCF	; 207
    1eca:	fe 4f       	sbci	r31, 0xFE	; 254
    1ecc:	60 81       	ld	r22, Z
    1ece:	71 81       	ldd	r23, Z+1	; 0x01
    1ed0:	82 81       	ldd	r24, Z+2	; 0x02
    1ed2:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
			LED_voidOff(LED6);
    1ed6:	fe 01       	movw	r30, r28
    1ed8:	ec 5c       	subi	r30, 0xCC	; 204
    1eda:	fe 4f       	sbci	r31, 0xFE	; 254
    1edc:	60 81       	ld	r22, Z
    1ede:	71 81       	ldd	r23, Z+1	; 0x01
    1ee0:	82 81       	ldd	r24, Z+2	; 0x02
    1ee2:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
    1ee6:	0c 94 ee 1a 	jmp	0x35dc	; 0x35dc <main+0x2252>



		}

		else if(button_u8GetPressed(B2)==0)
    1eea:	fe 01       	movw	r30, r28
    1eec:	e4 5e       	subi	r30, 0xE4	; 228
    1eee:	fe 4f       	sbci	r31, 0xFE	; 254
    1ef0:	60 81       	ld	r22, Z
    1ef2:	71 81       	ldd	r23, Z+1	; 0x01
    1ef4:	82 81       	ldd	r24, Z+2	; 0x02
    1ef6:	0e 94 c4 1c 	call	0x3988	; 0x3988 <button_u8GetPressed>
    1efa:	88 23       	and	r24, r24
    1efc:	09 f0       	breq	.+2      	; 0x1f00 <main+0xb76>
    1efe:	50 c7       	rjmp	.+3744   	; 0x2da0 <main+0x1a16>
		{
			LED_voidOn(LED1);
    1f00:	fe 01       	movw	r30, r28
    1f02:	e8 5d       	subi	r30, 0xD8	; 216
    1f04:	fe 4f       	sbci	r31, 0xFE	; 254
    1f06:	60 81       	ld	r22, Z
    1f08:	71 81       	ldd	r23, Z+1	; 0x01
    1f0a:	82 81       	ldd	r24, Z+2	; 0x02
    1f0c:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
    1f10:	fe 01       	movw	r30, r28
    1f12:	e9 5f       	subi	r30, 0xF9	; 249
    1f14:	fe 4f       	sbci	r31, 0xFE	; 254
    1f16:	80 e0       	ldi	r24, 0x00	; 0
    1f18:	90 e8       	ldi	r25, 0x80	; 128
    1f1a:	ab e3       	ldi	r26, 0x3B	; 59
    1f1c:	b5 e4       	ldi	r27, 0x45	; 69
    1f1e:	80 83       	st	Z, r24
    1f20:	91 83       	std	Z+1, r25	; 0x01
    1f22:	a2 83       	std	Z+2, r26	; 0x02
    1f24:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f26:	8e 01       	movw	r16, r28
    1f28:	0d 5f       	subi	r16, 0xFD	; 253
    1f2a:	1e 4f       	sbci	r17, 0xFE	; 254
    1f2c:	fe 01       	movw	r30, r28
    1f2e:	e9 5f       	subi	r30, 0xF9	; 249
    1f30:	fe 4f       	sbci	r31, 0xFE	; 254
    1f32:	60 81       	ld	r22, Z
    1f34:	71 81       	ldd	r23, Z+1	; 0x01
    1f36:	82 81       	ldd	r24, Z+2	; 0x02
    1f38:	93 81       	ldd	r25, Z+3	; 0x03
    1f3a:	20 e0       	ldi	r18, 0x00	; 0
    1f3c:	30 e0       	ldi	r19, 0x00	; 0
    1f3e:	4a e7       	ldi	r20, 0x7A	; 122
    1f40:	53 e4       	ldi	r21, 0x43	; 67
    1f42:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f46:	dc 01       	movw	r26, r24
    1f48:	cb 01       	movw	r24, r22
    1f4a:	f8 01       	movw	r30, r16
    1f4c:	80 83       	st	Z, r24
    1f4e:	91 83       	std	Z+1, r25	; 0x01
    1f50:	a2 83       	std	Z+2, r26	; 0x02
    1f52:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f54:	fe 01       	movw	r30, r28
    1f56:	ed 5f       	subi	r30, 0xFD	; 253
    1f58:	fe 4f       	sbci	r31, 0xFE	; 254
    1f5a:	60 81       	ld	r22, Z
    1f5c:	71 81       	ldd	r23, Z+1	; 0x01
    1f5e:	82 81       	ldd	r24, Z+2	; 0x02
    1f60:	93 81       	ldd	r25, Z+3	; 0x03
    1f62:	20 e0       	ldi	r18, 0x00	; 0
    1f64:	30 e0       	ldi	r19, 0x00	; 0
    1f66:	40 e8       	ldi	r20, 0x80	; 128
    1f68:	5f e3       	ldi	r21, 0x3F	; 63
    1f6a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1f6e:	88 23       	and	r24, r24
    1f70:	44 f4       	brge	.+16     	; 0x1f82 <main+0xbf8>
		__ticks = 1;
    1f72:	fe 01       	movw	r30, r28
    1f74:	ef 5f       	subi	r30, 0xFF	; 255
    1f76:	fe 4f       	sbci	r31, 0xFE	; 254
    1f78:	81 e0       	ldi	r24, 0x01	; 1
    1f7a:	90 e0       	ldi	r25, 0x00	; 0
    1f7c:	91 83       	std	Z+1, r25	; 0x01
    1f7e:	80 83       	st	Z, r24
    1f80:	64 c0       	rjmp	.+200    	; 0x204a <main+0xcc0>
	else if (__tmp > 65535)
    1f82:	fe 01       	movw	r30, r28
    1f84:	ed 5f       	subi	r30, 0xFD	; 253
    1f86:	fe 4f       	sbci	r31, 0xFE	; 254
    1f88:	60 81       	ld	r22, Z
    1f8a:	71 81       	ldd	r23, Z+1	; 0x01
    1f8c:	82 81       	ldd	r24, Z+2	; 0x02
    1f8e:	93 81       	ldd	r25, Z+3	; 0x03
    1f90:	20 e0       	ldi	r18, 0x00	; 0
    1f92:	3f ef       	ldi	r19, 0xFF	; 255
    1f94:	4f e7       	ldi	r20, 0x7F	; 127
    1f96:	57 e4       	ldi	r21, 0x47	; 71
    1f98:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1f9c:	18 16       	cp	r1, r24
    1f9e:	0c f0       	brlt	.+2      	; 0x1fa2 <main+0xc18>
    1fa0:	43 c0       	rjmp	.+134    	; 0x2028 <main+0xc9e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fa2:	fe 01       	movw	r30, r28
    1fa4:	e9 5f       	subi	r30, 0xF9	; 249
    1fa6:	fe 4f       	sbci	r31, 0xFE	; 254
    1fa8:	60 81       	ld	r22, Z
    1faa:	71 81       	ldd	r23, Z+1	; 0x01
    1fac:	82 81       	ldd	r24, Z+2	; 0x02
    1fae:	93 81       	ldd	r25, Z+3	; 0x03
    1fb0:	20 e0       	ldi	r18, 0x00	; 0
    1fb2:	30 e0       	ldi	r19, 0x00	; 0
    1fb4:	40 e2       	ldi	r20, 0x20	; 32
    1fb6:	51 e4       	ldi	r21, 0x41	; 65
    1fb8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fbc:	dc 01       	movw	r26, r24
    1fbe:	cb 01       	movw	r24, r22
    1fc0:	8e 01       	movw	r16, r28
    1fc2:	0f 5f       	subi	r16, 0xFF	; 255
    1fc4:	1e 4f       	sbci	r17, 0xFE	; 254
    1fc6:	bc 01       	movw	r22, r24
    1fc8:	cd 01       	movw	r24, r26
    1fca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fce:	dc 01       	movw	r26, r24
    1fd0:	cb 01       	movw	r24, r22
    1fd2:	f8 01       	movw	r30, r16
    1fd4:	91 83       	std	Z+1, r25	; 0x01
    1fd6:	80 83       	st	Z, r24
    1fd8:	1f c0       	rjmp	.+62     	; 0x2018 <main+0xc8e>
    1fda:	fe 01       	movw	r30, r28
    1fdc:	e1 50       	subi	r30, 0x01	; 1
    1fde:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe0:	89 e1       	ldi	r24, 0x19	; 25
    1fe2:	90 e0       	ldi	r25, 0x00	; 0
    1fe4:	91 83       	std	Z+1, r25	; 0x01
    1fe6:	80 83       	st	Z, r24
    1fe8:	fe 01       	movw	r30, r28
    1fea:	e1 50       	subi	r30, 0x01	; 1
    1fec:	ff 4f       	sbci	r31, 0xFF	; 255
    1fee:	80 81       	ld	r24, Z
    1ff0:	91 81       	ldd	r25, Z+1	; 0x01
    1ff2:	01 97       	sbiw	r24, 0x01	; 1
    1ff4:	f1 f7       	brne	.-4      	; 0x1ff2 <main+0xc68>
    1ff6:	fe 01       	movw	r30, r28
    1ff8:	e1 50       	subi	r30, 0x01	; 1
    1ffa:	ff 4f       	sbci	r31, 0xFF	; 255
    1ffc:	91 83       	std	Z+1, r25	; 0x01
    1ffe:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2000:	de 01       	movw	r26, r28
    2002:	af 5f       	subi	r26, 0xFF	; 255
    2004:	be 4f       	sbci	r27, 0xFE	; 254
    2006:	fe 01       	movw	r30, r28
    2008:	ef 5f       	subi	r30, 0xFF	; 255
    200a:	fe 4f       	sbci	r31, 0xFE	; 254
    200c:	80 81       	ld	r24, Z
    200e:	91 81       	ldd	r25, Z+1	; 0x01
    2010:	01 97       	sbiw	r24, 0x01	; 1
    2012:	11 96       	adiw	r26, 0x01	; 1
    2014:	9c 93       	st	X, r25
    2016:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2018:	fe 01       	movw	r30, r28
    201a:	ef 5f       	subi	r30, 0xFF	; 255
    201c:	fe 4f       	sbci	r31, 0xFE	; 254
    201e:	80 81       	ld	r24, Z
    2020:	91 81       	ldd	r25, Z+1	; 0x01
    2022:	00 97       	sbiw	r24, 0x00	; 0
    2024:	d1 f6       	brne	.-76     	; 0x1fda <main+0xc50>
    2026:	27 c0       	rjmp	.+78     	; 0x2076 <main+0xcec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2028:	8e 01       	movw	r16, r28
    202a:	0f 5f       	subi	r16, 0xFF	; 255
    202c:	1e 4f       	sbci	r17, 0xFE	; 254
    202e:	fe 01       	movw	r30, r28
    2030:	ed 5f       	subi	r30, 0xFD	; 253
    2032:	fe 4f       	sbci	r31, 0xFE	; 254
    2034:	60 81       	ld	r22, Z
    2036:	71 81       	ldd	r23, Z+1	; 0x01
    2038:	82 81       	ldd	r24, Z+2	; 0x02
    203a:	93 81       	ldd	r25, Z+3	; 0x03
    203c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2040:	dc 01       	movw	r26, r24
    2042:	cb 01       	movw	r24, r22
    2044:	f8 01       	movw	r30, r16
    2046:	91 83       	std	Z+1, r25	; 0x01
    2048:	80 83       	st	Z, r24
    204a:	de 01       	movw	r26, r28
    204c:	a3 50       	subi	r26, 0x03	; 3
    204e:	bf 4f       	sbci	r27, 0xFF	; 255
    2050:	fe 01       	movw	r30, r28
    2052:	ef 5f       	subi	r30, 0xFF	; 255
    2054:	fe 4f       	sbci	r31, 0xFE	; 254
    2056:	80 81       	ld	r24, Z
    2058:	91 81       	ldd	r25, Z+1	; 0x01
    205a:	8d 93       	st	X+, r24
    205c:	9c 93       	st	X, r25
    205e:	fe 01       	movw	r30, r28
    2060:	e3 50       	subi	r30, 0x03	; 3
    2062:	ff 4f       	sbci	r31, 0xFF	; 255
    2064:	80 81       	ld	r24, Z
    2066:	91 81       	ldd	r25, Z+1	; 0x01
    2068:	01 97       	sbiw	r24, 0x01	; 1
    206a:	f1 f7       	brne	.-4      	; 0x2068 <main+0xcde>
    206c:	fe 01       	movw	r30, r28
    206e:	e3 50       	subi	r30, 0x03	; 3
    2070:	ff 4f       	sbci	r31, 0xFF	; 255
    2072:	91 83       	std	Z+1, r25	; 0x01
    2074:	80 83       	st	Z, r24
			_delay_ms(3000);
			LED_voidOn(LED2);
    2076:	fe 01       	movw	r30, r28
    2078:	e5 5d       	subi	r30, 0xD5	; 213
    207a:	fe 4f       	sbci	r31, 0xFE	; 254
    207c:	60 81       	ld	r22, Z
    207e:	71 81       	ldd	r23, Z+1	; 0x01
    2080:	82 81       	ldd	r24, Z+2	; 0x02
    2082:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
    2086:	fe 01       	movw	r30, r28
    2088:	e7 50       	subi	r30, 0x07	; 7
    208a:	ff 4f       	sbci	r31, 0xFF	; 255
    208c:	80 e0       	ldi	r24, 0x00	; 0
    208e:	90 e8       	ldi	r25, 0x80	; 128
    2090:	ab e3       	ldi	r26, 0x3B	; 59
    2092:	b5 e4       	ldi	r27, 0x45	; 69
    2094:	80 83       	st	Z, r24
    2096:	91 83       	std	Z+1, r25	; 0x01
    2098:	a2 83       	std	Z+2, r26	; 0x02
    209a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    209c:	8e 01       	movw	r16, r28
    209e:	0b 50       	subi	r16, 0x0B	; 11
    20a0:	1f 4f       	sbci	r17, 0xFF	; 255
    20a2:	fe 01       	movw	r30, r28
    20a4:	e7 50       	subi	r30, 0x07	; 7
    20a6:	ff 4f       	sbci	r31, 0xFF	; 255
    20a8:	60 81       	ld	r22, Z
    20aa:	71 81       	ldd	r23, Z+1	; 0x01
    20ac:	82 81       	ldd	r24, Z+2	; 0x02
    20ae:	93 81       	ldd	r25, Z+3	; 0x03
    20b0:	20 e0       	ldi	r18, 0x00	; 0
    20b2:	30 e0       	ldi	r19, 0x00	; 0
    20b4:	4a e7       	ldi	r20, 0x7A	; 122
    20b6:	53 e4       	ldi	r21, 0x43	; 67
    20b8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20bc:	dc 01       	movw	r26, r24
    20be:	cb 01       	movw	r24, r22
    20c0:	f8 01       	movw	r30, r16
    20c2:	80 83       	st	Z, r24
    20c4:	91 83       	std	Z+1, r25	; 0x01
    20c6:	a2 83       	std	Z+2, r26	; 0x02
    20c8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20ca:	fe 01       	movw	r30, r28
    20cc:	eb 50       	subi	r30, 0x0B	; 11
    20ce:	ff 4f       	sbci	r31, 0xFF	; 255
    20d0:	60 81       	ld	r22, Z
    20d2:	71 81       	ldd	r23, Z+1	; 0x01
    20d4:	82 81       	ldd	r24, Z+2	; 0x02
    20d6:	93 81       	ldd	r25, Z+3	; 0x03
    20d8:	20 e0       	ldi	r18, 0x00	; 0
    20da:	30 e0       	ldi	r19, 0x00	; 0
    20dc:	40 e8       	ldi	r20, 0x80	; 128
    20de:	5f e3       	ldi	r21, 0x3F	; 63
    20e0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20e4:	88 23       	and	r24, r24
    20e6:	44 f4       	brge	.+16     	; 0x20f8 <main+0xd6e>
		__ticks = 1;
    20e8:	fe 01       	movw	r30, r28
    20ea:	ed 50       	subi	r30, 0x0D	; 13
    20ec:	ff 4f       	sbci	r31, 0xFF	; 255
    20ee:	81 e0       	ldi	r24, 0x01	; 1
    20f0:	90 e0       	ldi	r25, 0x00	; 0
    20f2:	91 83       	std	Z+1, r25	; 0x01
    20f4:	80 83       	st	Z, r24
    20f6:	64 c0       	rjmp	.+200    	; 0x21c0 <main+0xe36>
	else if (__tmp > 65535)
    20f8:	fe 01       	movw	r30, r28
    20fa:	eb 50       	subi	r30, 0x0B	; 11
    20fc:	ff 4f       	sbci	r31, 0xFF	; 255
    20fe:	60 81       	ld	r22, Z
    2100:	71 81       	ldd	r23, Z+1	; 0x01
    2102:	82 81       	ldd	r24, Z+2	; 0x02
    2104:	93 81       	ldd	r25, Z+3	; 0x03
    2106:	20 e0       	ldi	r18, 0x00	; 0
    2108:	3f ef       	ldi	r19, 0xFF	; 255
    210a:	4f e7       	ldi	r20, 0x7F	; 127
    210c:	57 e4       	ldi	r21, 0x47	; 71
    210e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2112:	18 16       	cp	r1, r24
    2114:	0c f0       	brlt	.+2      	; 0x2118 <main+0xd8e>
    2116:	43 c0       	rjmp	.+134    	; 0x219e <main+0xe14>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2118:	fe 01       	movw	r30, r28
    211a:	e7 50       	subi	r30, 0x07	; 7
    211c:	ff 4f       	sbci	r31, 0xFF	; 255
    211e:	60 81       	ld	r22, Z
    2120:	71 81       	ldd	r23, Z+1	; 0x01
    2122:	82 81       	ldd	r24, Z+2	; 0x02
    2124:	93 81       	ldd	r25, Z+3	; 0x03
    2126:	20 e0       	ldi	r18, 0x00	; 0
    2128:	30 e0       	ldi	r19, 0x00	; 0
    212a:	40 e2       	ldi	r20, 0x20	; 32
    212c:	51 e4       	ldi	r21, 0x41	; 65
    212e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2132:	dc 01       	movw	r26, r24
    2134:	cb 01       	movw	r24, r22
    2136:	8e 01       	movw	r16, r28
    2138:	0d 50       	subi	r16, 0x0D	; 13
    213a:	1f 4f       	sbci	r17, 0xFF	; 255
    213c:	bc 01       	movw	r22, r24
    213e:	cd 01       	movw	r24, r26
    2140:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2144:	dc 01       	movw	r26, r24
    2146:	cb 01       	movw	r24, r22
    2148:	f8 01       	movw	r30, r16
    214a:	91 83       	std	Z+1, r25	; 0x01
    214c:	80 83       	st	Z, r24
    214e:	1f c0       	rjmp	.+62     	; 0x218e <main+0xe04>
    2150:	fe 01       	movw	r30, r28
    2152:	ef 50       	subi	r30, 0x0F	; 15
    2154:	ff 4f       	sbci	r31, 0xFF	; 255
    2156:	89 e1       	ldi	r24, 0x19	; 25
    2158:	90 e0       	ldi	r25, 0x00	; 0
    215a:	91 83       	std	Z+1, r25	; 0x01
    215c:	80 83       	st	Z, r24
    215e:	fe 01       	movw	r30, r28
    2160:	ef 50       	subi	r30, 0x0F	; 15
    2162:	ff 4f       	sbci	r31, 0xFF	; 255
    2164:	80 81       	ld	r24, Z
    2166:	91 81       	ldd	r25, Z+1	; 0x01
    2168:	01 97       	sbiw	r24, 0x01	; 1
    216a:	f1 f7       	brne	.-4      	; 0x2168 <main+0xdde>
    216c:	fe 01       	movw	r30, r28
    216e:	ef 50       	subi	r30, 0x0F	; 15
    2170:	ff 4f       	sbci	r31, 0xFF	; 255
    2172:	91 83       	std	Z+1, r25	; 0x01
    2174:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2176:	de 01       	movw	r26, r28
    2178:	ad 50       	subi	r26, 0x0D	; 13
    217a:	bf 4f       	sbci	r27, 0xFF	; 255
    217c:	fe 01       	movw	r30, r28
    217e:	ed 50       	subi	r30, 0x0D	; 13
    2180:	ff 4f       	sbci	r31, 0xFF	; 255
    2182:	80 81       	ld	r24, Z
    2184:	91 81       	ldd	r25, Z+1	; 0x01
    2186:	01 97       	sbiw	r24, 0x01	; 1
    2188:	11 96       	adiw	r26, 0x01	; 1
    218a:	9c 93       	st	X, r25
    218c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    218e:	fe 01       	movw	r30, r28
    2190:	ed 50       	subi	r30, 0x0D	; 13
    2192:	ff 4f       	sbci	r31, 0xFF	; 255
    2194:	80 81       	ld	r24, Z
    2196:	91 81       	ldd	r25, Z+1	; 0x01
    2198:	00 97       	sbiw	r24, 0x00	; 0
    219a:	d1 f6       	brne	.-76     	; 0x2150 <main+0xdc6>
    219c:	27 c0       	rjmp	.+78     	; 0x21ec <main+0xe62>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    219e:	8e 01       	movw	r16, r28
    21a0:	0d 50       	subi	r16, 0x0D	; 13
    21a2:	1f 4f       	sbci	r17, 0xFF	; 255
    21a4:	fe 01       	movw	r30, r28
    21a6:	eb 50       	subi	r30, 0x0B	; 11
    21a8:	ff 4f       	sbci	r31, 0xFF	; 255
    21aa:	60 81       	ld	r22, Z
    21ac:	71 81       	ldd	r23, Z+1	; 0x01
    21ae:	82 81       	ldd	r24, Z+2	; 0x02
    21b0:	93 81       	ldd	r25, Z+3	; 0x03
    21b2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21b6:	dc 01       	movw	r26, r24
    21b8:	cb 01       	movw	r24, r22
    21ba:	f8 01       	movw	r30, r16
    21bc:	91 83       	std	Z+1, r25	; 0x01
    21be:	80 83       	st	Z, r24
    21c0:	de 01       	movw	r26, r28
    21c2:	a1 51       	subi	r26, 0x11	; 17
    21c4:	bf 4f       	sbci	r27, 0xFF	; 255
    21c6:	fe 01       	movw	r30, r28
    21c8:	ed 50       	subi	r30, 0x0D	; 13
    21ca:	ff 4f       	sbci	r31, 0xFF	; 255
    21cc:	80 81       	ld	r24, Z
    21ce:	91 81       	ldd	r25, Z+1	; 0x01
    21d0:	8d 93       	st	X+, r24
    21d2:	9c 93       	st	X, r25
    21d4:	fe 01       	movw	r30, r28
    21d6:	e1 51       	subi	r30, 0x11	; 17
    21d8:	ff 4f       	sbci	r31, 0xFF	; 255
    21da:	80 81       	ld	r24, Z
    21dc:	91 81       	ldd	r25, Z+1	; 0x01
    21de:	01 97       	sbiw	r24, 0x01	; 1
    21e0:	f1 f7       	brne	.-4      	; 0x21de <main+0xe54>
    21e2:	fe 01       	movw	r30, r28
    21e4:	e1 51       	subi	r30, 0x11	; 17
    21e6:	ff 4f       	sbci	r31, 0xFF	; 255
    21e8:	91 83       	std	Z+1, r25	; 0x01
    21ea:	80 83       	st	Z, r24
			_delay_ms(3000);
			LED_voidOn(LED3);
    21ec:	fe 01       	movw	r30, r28
    21ee:	e2 5d       	subi	r30, 0xD2	; 210
    21f0:	fe 4f       	sbci	r31, 0xFE	; 254
    21f2:	60 81       	ld	r22, Z
    21f4:	71 81       	ldd	r23, Z+1	; 0x01
    21f6:	82 81       	ldd	r24, Z+2	; 0x02
    21f8:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
    21fc:	fe 01       	movw	r30, r28
    21fe:	e5 51       	subi	r30, 0x15	; 21
    2200:	ff 4f       	sbci	r31, 0xFF	; 255
    2202:	80 e0       	ldi	r24, 0x00	; 0
    2204:	90 e8       	ldi	r25, 0x80	; 128
    2206:	ab e3       	ldi	r26, 0x3B	; 59
    2208:	b5 e4       	ldi	r27, 0x45	; 69
    220a:	80 83       	st	Z, r24
    220c:	91 83       	std	Z+1, r25	; 0x01
    220e:	a2 83       	std	Z+2, r26	; 0x02
    2210:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2212:	8e 01       	movw	r16, r28
    2214:	09 51       	subi	r16, 0x19	; 25
    2216:	1f 4f       	sbci	r17, 0xFF	; 255
    2218:	fe 01       	movw	r30, r28
    221a:	e5 51       	subi	r30, 0x15	; 21
    221c:	ff 4f       	sbci	r31, 0xFF	; 255
    221e:	60 81       	ld	r22, Z
    2220:	71 81       	ldd	r23, Z+1	; 0x01
    2222:	82 81       	ldd	r24, Z+2	; 0x02
    2224:	93 81       	ldd	r25, Z+3	; 0x03
    2226:	20 e0       	ldi	r18, 0x00	; 0
    2228:	30 e0       	ldi	r19, 0x00	; 0
    222a:	4a e7       	ldi	r20, 0x7A	; 122
    222c:	53 e4       	ldi	r21, 0x43	; 67
    222e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2232:	dc 01       	movw	r26, r24
    2234:	cb 01       	movw	r24, r22
    2236:	f8 01       	movw	r30, r16
    2238:	80 83       	st	Z, r24
    223a:	91 83       	std	Z+1, r25	; 0x01
    223c:	a2 83       	std	Z+2, r26	; 0x02
    223e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2240:	fe 01       	movw	r30, r28
    2242:	e9 51       	subi	r30, 0x19	; 25
    2244:	ff 4f       	sbci	r31, 0xFF	; 255
    2246:	60 81       	ld	r22, Z
    2248:	71 81       	ldd	r23, Z+1	; 0x01
    224a:	82 81       	ldd	r24, Z+2	; 0x02
    224c:	93 81       	ldd	r25, Z+3	; 0x03
    224e:	20 e0       	ldi	r18, 0x00	; 0
    2250:	30 e0       	ldi	r19, 0x00	; 0
    2252:	40 e8       	ldi	r20, 0x80	; 128
    2254:	5f e3       	ldi	r21, 0x3F	; 63
    2256:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    225a:	88 23       	and	r24, r24
    225c:	44 f4       	brge	.+16     	; 0x226e <main+0xee4>
		__ticks = 1;
    225e:	fe 01       	movw	r30, r28
    2260:	eb 51       	subi	r30, 0x1B	; 27
    2262:	ff 4f       	sbci	r31, 0xFF	; 255
    2264:	81 e0       	ldi	r24, 0x01	; 1
    2266:	90 e0       	ldi	r25, 0x00	; 0
    2268:	91 83       	std	Z+1, r25	; 0x01
    226a:	80 83       	st	Z, r24
    226c:	64 c0       	rjmp	.+200    	; 0x2336 <main+0xfac>
	else if (__tmp > 65535)
    226e:	fe 01       	movw	r30, r28
    2270:	e9 51       	subi	r30, 0x19	; 25
    2272:	ff 4f       	sbci	r31, 0xFF	; 255
    2274:	60 81       	ld	r22, Z
    2276:	71 81       	ldd	r23, Z+1	; 0x01
    2278:	82 81       	ldd	r24, Z+2	; 0x02
    227a:	93 81       	ldd	r25, Z+3	; 0x03
    227c:	20 e0       	ldi	r18, 0x00	; 0
    227e:	3f ef       	ldi	r19, 0xFF	; 255
    2280:	4f e7       	ldi	r20, 0x7F	; 127
    2282:	57 e4       	ldi	r21, 0x47	; 71
    2284:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2288:	18 16       	cp	r1, r24
    228a:	0c f0       	brlt	.+2      	; 0x228e <main+0xf04>
    228c:	43 c0       	rjmp	.+134    	; 0x2314 <main+0xf8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    228e:	fe 01       	movw	r30, r28
    2290:	e5 51       	subi	r30, 0x15	; 21
    2292:	ff 4f       	sbci	r31, 0xFF	; 255
    2294:	60 81       	ld	r22, Z
    2296:	71 81       	ldd	r23, Z+1	; 0x01
    2298:	82 81       	ldd	r24, Z+2	; 0x02
    229a:	93 81       	ldd	r25, Z+3	; 0x03
    229c:	20 e0       	ldi	r18, 0x00	; 0
    229e:	30 e0       	ldi	r19, 0x00	; 0
    22a0:	40 e2       	ldi	r20, 0x20	; 32
    22a2:	51 e4       	ldi	r21, 0x41	; 65
    22a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22a8:	dc 01       	movw	r26, r24
    22aa:	cb 01       	movw	r24, r22
    22ac:	8e 01       	movw	r16, r28
    22ae:	0b 51       	subi	r16, 0x1B	; 27
    22b0:	1f 4f       	sbci	r17, 0xFF	; 255
    22b2:	bc 01       	movw	r22, r24
    22b4:	cd 01       	movw	r24, r26
    22b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22ba:	dc 01       	movw	r26, r24
    22bc:	cb 01       	movw	r24, r22
    22be:	f8 01       	movw	r30, r16
    22c0:	91 83       	std	Z+1, r25	; 0x01
    22c2:	80 83       	st	Z, r24
    22c4:	1f c0       	rjmp	.+62     	; 0x2304 <main+0xf7a>
    22c6:	fe 01       	movw	r30, r28
    22c8:	ed 51       	subi	r30, 0x1D	; 29
    22ca:	ff 4f       	sbci	r31, 0xFF	; 255
    22cc:	89 e1       	ldi	r24, 0x19	; 25
    22ce:	90 e0       	ldi	r25, 0x00	; 0
    22d0:	91 83       	std	Z+1, r25	; 0x01
    22d2:	80 83       	st	Z, r24
    22d4:	fe 01       	movw	r30, r28
    22d6:	ed 51       	subi	r30, 0x1D	; 29
    22d8:	ff 4f       	sbci	r31, 0xFF	; 255
    22da:	80 81       	ld	r24, Z
    22dc:	91 81       	ldd	r25, Z+1	; 0x01
    22de:	01 97       	sbiw	r24, 0x01	; 1
    22e0:	f1 f7       	brne	.-4      	; 0x22de <main+0xf54>
    22e2:	fe 01       	movw	r30, r28
    22e4:	ed 51       	subi	r30, 0x1D	; 29
    22e6:	ff 4f       	sbci	r31, 0xFF	; 255
    22e8:	91 83       	std	Z+1, r25	; 0x01
    22ea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22ec:	de 01       	movw	r26, r28
    22ee:	ab 51       	subi	r26, 0x1B	; 27
    22f0:	bf 4f       	sbci	r27, 0xFF	; 255
    22f2:	fe 01       	movw	r30, r28
    22f4:	eb 51       	subi	r30, 0x1B	; 27
    22f6:	ff 4f       	sbci	r31, 0xFF	; 255
    22f8:	80 81       	ld	r24, Z
    22fa:	91 81       	ldd	r25, Z+1	; 0x01
    22fc:	01 97       	sbiw	r24, 0x01	; 1
    22fe:	11 96       	adiw	r26, 0x01	; 1
    2300:	9c 93       	st	X, r25
    2302:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2304:	fe 01       	movw	r30, r28
    2306:	eb 51       	subi	r30, 0x1B	; 27
    2308:	ff 4f       	sbci	r31, 0xFF	; 255
    230a:	80 81       	ld	r24, Z
    230c:	91 81       	ldd	r25, Z+1	; 0x01
    230e:	00 97       	sbiw	r24, 0x00	; 0
    2310:	d1 f6       	brne	.-76     	; 0x22c6 <main+0xf3c>
    2312:	27 c0       	rjmp	.+78     	; 0x2362 <main+0xfd8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2314:	8e 01       	movw	r16, r28
    2316:	0b 51       	subi	r16, 0x1B	; 27
    2318:	1f 4f       	sbci	r17, 0xFF	; 255
    231a:	fe 01       	movw	r30, r28
    231c:	e9 51       	subi	r30, 0x19	; 25
    231e:	ff 4f       	sbci	r31, 0xFF	; 255
    2320:	60 81       	ld	r22, Z
    2322:	71 81       	ldd	r23, Z+1	; 0x01
    2324:	82 81       	ldd	r24, Z+2	; 0x02
    2326:	93 81       	ldd	r25, Z+3	; 0x03
    2328:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    232c:	dc 01       	movw	r26, r24
    232e:	cb 01       	movw	r24, r22
    2330:	f8 01       	movw	r30, r16
    2332:	91 83       	std	Z+1, r25	; 0x01
    2334:	80 83       	st	Z, r24
    2336:	de 01       	movw	r26, r28
    2338:	af 51       	subi	r26, 0x1F	; 31
    233a:	bf 4f       	sbci	r27, 0xFF	; 255
    233c:	fe 01       	movw	r30, r28
    233e:	eb 51       	subi	r30, 0x1B	; 27
    2340:	ff 4f       	sbci	r31, 0xFF	; 255
    2342:	80 81       	ld	r24, Z
    2344:	91 81       	ldd	r25, Z+1	; 0x01
    2346:	8d 93       	st	X+, r24
    2348:	9c 93       	st	X, r25
    234a:	fe 01       	movw	r30, r28
    234c:	ef 51       	subi	r30, 0x1F	; 31
    234e:	ff 4f       	sbci	r31, 0xFF	; 255
    2350:	80 81       	ld	r24, Z
    2352:	91 81       	ldd	r25, Z+1	; 0x01
    2354:	01 97       	sbiw	r24, 0x01	; 1
    2356:	f1 f7       	brne	.-4      	; 0x2354 <main+0xfca>
    2358:	fe 01       	movw	r30, r28
    235a:	ef 51       	subi	r30, 0x1F	; 31
    235c:	ff 4f       	sbci	r31, 0xFF	; 255
    235e:	91 83       	std	Z+1, r25	; 0x01
    2360:	80 83       	st	Z, r24
			_delay_ms(3000);
			LED_voidOn(LED5);
    2362:	fe 01       	movw	r30, r28
    2364:	ef 5c       	subi	r30, 0xCF	; 207
    2366:	fe 4f       	sbci	r31, 0xFE	; 254
    2368:	60 81       	ld	r22, Z
    236a:	71 81       	ldd	r23, Z+1	; 0x01
    236c:	82 81       	ldd	r24, Z+2	; 0x02
    236e:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
    2372:	fe 01       	movw	r30, r28
    2374:	e3 52       	subi	r30, 0x23	; 35
    2376:	ff 4f       	sbci	r31, 0xFF	; 255
    2378:	80 e0       	ldi	r24, 0x00	; 0
    237a:	90 e8       	ldi	r25, 0x80	; 128
    237c:	ab e3       	ldi	r26, 0x3B	; 59
    237e:	b5 e4       	ldi	r27, 0x45	; 69
    2380:	80 83       	st	Z, r24
    2382:	91 83       	std	Z+1, r25	; 0x01
    2384:	a2 83       	std	Z+2, r26	; 0x02
    2386:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2388:	8e 01       	movw	r16, r28
    238a:	07 52       	subi	r16, 0x27	; 39
    238c:	1f 4f       	sbci	r17, 0xFF	; 255
    238e:	fe 01       	movw	r30, r28
    2390:	e3 52       	subi	r30, 0x23	; 35
    2392:	ff 4f       	sbci	r31, 0xFF	; 255
    2394:	60 81       	ld	r22, Z
    2396:	71 81       	ldd	r23, Z+1	; 0x01
    2398:	82 81       	ldd	r24, Z+2	; 0x02
    239a:	93 81       	ldd	r25, Z+3	; 0x03
    239c:	20 e0       	ldi	r18, 0x00	; 0
    239e:	30 e0       	ldi	r19, 0x00	; 0
    23a0:	4a e7       	ldi	r20, 0x7A	; 122
    23a2:	53 e4       	ldi	r21, 0x43	; 67
    23a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23a8:	dc 01       	movw	r26, r24
    23aa:	cb 01       	movw	r24, r22
    23ac:	f8 01       	movw	r30, r16
    23ae:	80 83       	st	Z, r24
    23b0:	91 83       	std	Z+1, r25	; 0x01
    23b2:	a2 83       	std	Z+2, r26	; 0x02
    23b4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23b6:	fe 01       	movw	r30, r28
    23b8:	e7 52       	subi	r30, 0x27	; 39
    23ba:	ff 4f       	sbci	r31, 0xFF	; 255
    23bc:	60 81       	ld	r22, Z
    23be:	71 81       	ldd	r23, Z+1	; 0x01
    23c0:	82 81       	ldd	r24, Z+2	; 0x02
    23c2:	93 81       	ldd	r25, Z+3	; 0x03
    23c4:	20 e0       	ldi	r18, 0x00	; 0
    23c6:	30 e0       	ldi	r19, 0x00	; 0
    23c8:	40 e8       	ldi	r20, 0x80	; 128
    23ca:	5f e3       	ldi	r21, 0x3F	; 63
    23cc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    23d0:	88 23       	and	r24, r24
    23d2:	44 f4       	brge	.+16     	; 0x23e4 <main+0x105a>
		__ticks = 1;
    23d4:	fe 01       	movw	r30, r28
    23d6:	e9 52       	subi	r30, 0x29	; 41
    23d8:	ff 4f       	sbci	r31, 0xFF	; 255
    23da:	81 e0       	ldi	r24, 0x01	; 1
    23dc:	90 e0       	ldi	r25, 0x00	; 0
    23de:	91 83       	std	Z+1, r25	; 0x01
    23e0:	80 83       	st	Z, r24
    23e2:	64 c0       	rjmp	.+200    	; 0x24ac <main+0x1122>
	else if (__tmp > 65535)
    23e4:	fe 01       	movw	r30, r28
    23e6:	e7 52       	subi	r30, 0x27	; 39
    23e8:	ff 4f       	sbci	r31, 0xFF	; 255
    23ea:	60 81       	ld	r22, Z
    23ec:	71 81       	ldd	r23, Z+1	; 0x01
    23ee:	82 81       	ldd	r24, Z+2	; 0x02
    23f0:	93 81       	ldd	r25, Z+3	; 0x03
    23f2:	20 e0       	ldi	r18, 0x00	; 0
    23f4:	3f ef       	ldi	r19, 0xFF	; 255
    23f6:	4f e7       	ldi	r20, 0x7F	; 127
    23f8:	57 e4       	ldi	r21, 0x47	; 71
    23fa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    23fe:	18 16       	cp	r1, r24
    2400:	0c f0       	brlt	.+2      	; 0x2404 <main+0x107a>
    2402:	43 c0       	rjmp	.+134    	; 0x248a <main+0x1100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2404:	fe 01       	movw	r30, r28
    2406:	e3 52       	subi	r30, 0x23	; 35
    2408:	ff 4f       	sbci	r31, 0xFF	; 255
    240a:	60 81       	ld	r22, Z
    240c:	71 81       	ldd	r23, Z+1	; 0x01
    240e:	82 81       	ldd	r24, Z+2	; 0x02
    2410:	93 81       	ldd	r25, Z+3	; 0x03
    2412:	20 e0       	ldi	r18, 0x00	; 0
    2414:	30 e0       	ldi	r19, 0x00	; 0
    2416:	40 e2       	ldi	r20, 0x20	; 32
    2418:	51 e4       	ldi	r21, 0x41	; 65
    241a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    241e:	dc 01       	movw	r26, r24
    2420:	cb 01       	movw	r24, r22
    2422:	8e 01       	movw	r16, r28
    2424:	09 52       	subi	r16, 0x29	; 41
    2426:	1f 4f       	sbci	r17, 0xFF	; 255
    2428:	bc 01       	movw	r22, r24
    242a:	cd 01       	movw	r24, r26
    242c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2430:	dc 01       	movw	r26, r24
    2432:	cb 01       	movw	r24, r22
    2434:	f8 01       	movw	r30, r16
    2436:	91 83       	std	Z+1, r25	; 0x01
    2438:	80 83       	st	Z, r24
    243a:	1f c0       	rjmp	.+62     	; 0x247a <main+0x10f0>
    243c:	fe 01       	movw	r30, r28
    243e:	eb 52       	subi	r30, 0x2B	; 43
    2440:	ff 4f       	sbci	r31, 0xFF	; 255
    2442:	89 e1       	ldi	r24, 0x19	; 25
    2444:	90 e0       	ldi	r25, 0x00	; 0
    2446:	91 83       	std	Z+1, r25	; 0x01
    2448:	80 83       	st	Z, r24
    244a:	fe 01       	movw	r30, r28
    244c:	eb 52       	subi	r30, 0x2B	; 43
    244e:	ff 4f       	sbci	r31, 0xFF	; 255
    2450:	80 81       	ld	r24, Z
    2452:	91 81       	ldd	r25, Z+1	; 0x01
    2454:	01 97       	sbiw	r24, 0x01	; 1
    2456:	f1 f7       	brne	.-4      	; 0x2454 <main+0x10ca>
    2458:	fe 01       	movw	r30, r28
    245a:	eb 52       	subi	r30, 0x2B	; 43
    245c:	ff 4f       	sbci	r31, 0xFF	; 255
    245e:	91 83       	std	Z+1, r25	; 0x01
    2460:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2462:	de 01       	movw	r26, r28
    2464:	a9 52       	subi	r26, 0x29	; 41
    2466:	bf 4f       	sbci	r27, 0xFF	; 255
    2468:	fe 01       	movw	r30, r28
    246a:	e9 52       	subi	r30, 0x29	; 41
    246c:	ff 4f       	sbci	r31, 0xFF	; 255
    246e:	80 81       	ld	r24, Z
    2470:	91 81       	ldd	r25, Z+1	; 0x01
    2472:	01 97       	sbiw	r24, 0x01	; 1
    2474:	11 96       	adiw	r26, 0x01	; 1
    2476:	9c 93       	st	X, r25
    2478:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    247a:	fe 01       	movw	r30, r28
    247c:	e9 52       	subi	r30, 0x29	; 41
    247e:	ff 4f       	sbci	r31, 0xFF	; 255
    2480:	80 81       	ld	r24, Z
    2482:	91 81       	ldd	r25, Z+1	; 0x01
    2484:	00 97       	sbiw	r24, 0x00	; 0
    2486:	d1 f6       	brne	.-76     	; 0x243c <main+0x10b2>
    2488:	27 c0       	rjmp	.+78     	; 0x24d8 <main+0x114e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    248a:	8e 01       	movw	r16, r28
    248c:	09 52       	subi	r16, 0x29	; 41
    248e:	1f 4f       	sbci	r17, 0xFF	; 255
    2490:	fe 01       	movw	r30, r28
    2492:	e7 52       	subi	r30, 0x27	; 39
    2494:	ff 4f       	sbci	r31, 0xFF	; 255
    2496:	60 81       	ld	r22, Z
    2498:	71 81       	ldd	r23, Z+1	; 0x01
    249a:	82 81       	ldd	r24, Z+2	; 0x02
    249c:	93 81       	ldd	r25, Z+3	; 0x03
    249e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24a2:	dc 01       	movw	r26, r24
    24a4:	cb 01       	movw	r24, r22
    24a6:	f8 01       	movw	r30, r16
    24a8:	91 83       	std	Z+1, r25	; 0x01
    24aa:	80 83       	st	Z, r24
    24ac:	de 01       	movw	r26, r28
    24ae:	ad 52       	subi	r26, 0x2D	; 45
    24b0:	bf 4f       	sbci	r27, 0xFF	; 255
    24b2:	fe 01       	movw	r30, r28
    24b4:	e9 52       	subi	r30, 0x29	; 41
    24b6:	ff 4f       	sbci	r31, 0xFF	; 255
    24b8:	80 81       	ld	r24, Z
    24ba:	91 81       	ldd	r25, Z+1	; 0x01
    24bc:	8d 93       	st	X+, r24
    24be:	9c 93       	st	X, r25
    24c0:	fe 01       	movw	r30, r28
    24c2:	ed 52       	subi	r30, 0x2D	; 45
    24c4:	ff 4f       	sbci	r31, 0xFF	; 255
    24c6:	80 81       	ld	r24, Z
    24c8:	91 81       	ldd	r25, Z+1	; 0x01
    24ca:	01 97       	sbiw	r24, 0x01	; 1
    24cc:	f1 f7       	brne	.-4      	; 0x24ca <main+0x1140>
    24ce:	fe 01       	movw	r30, r28
    24d0:	ed 52       	subi	r30, 0x2D	; 45
    24d2:	ff 4f       	sbci	r31, 0xFF	; 255
    24d4:	91 83       	std	Z+1, r25	; 0x01
    24d6:	80 83       	st	Z, r24
			_delay_ms(3000);
			LED_voidOn(LED6);
    24d8:	fe 01       	movw	r30, r28
    24da:	ec 5c       	subi	r30, 0xCC	; 204
    24dc:	fe 4f       	sbci	r31, 0xFE	; 254
    24de:	60 81       	ld	r22, Z
    24e0:	71 81       	ldd	r23, Z+1	; 0x01
    24e2:	82 81       	ldd	r24, Z+2	; 0x02
    24e4:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
    24e8:	fe 01       	movw	r30, r28
    24ea:	e1 53       	subi	r30, 0x31	; 49
    24ec:	ff 4f       	sbci	r31, 0xFF	; 255
    24ee:	80 e0       	ldi	r24, 0x00	; 0
    24f0:	90 e8       	ldi	r25, 0x80	; 128
    24f2:	ab e3       	ldi	r26, 0x3B	; 59
    24f4:	b5 e4       	ldi	r27, 0x45	; 69
    24f6:	80 83       	st	Z, r24
    24f8:	91 83       	std	Z+1, r25	; 0x01
    24fa:	a2 83       	std	Z+2, r26	; 0x02
    24fc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    24fe:	8e 01       	movw	r16, r28
    2500:	05 53       	subi	r16, 0x35	; 53
    2502:	1f 4f       	sbci	r17, 0xFF	; 255
    2504:	fe 01       	movw	r30, r28
    2506:	e1 53       	subi	r30, 0x31	; 49
    2508:	ff 4f       	sbci	r31, 0xFF	; 255
    250a:	60 81       	ld	r22, Z
    250c:	71 81       	ldd	r23, Z+1	; 0x01
    250e:	82 81       	ldd	r24, Z+2	; 0x02
    2510:	93 81       	ldd	r25, Z+3	; 0x03
    2512:	20 e0       	ldi	r18, 0x00	; 0
    2514:	30 e0       	ldi	r19, 0x00	; 0
    2516:	4a e7       	ldi	r20, 0x7A	; 122
    2518:	53 e4       	ldi	r21, 0x43	; 67
    251a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    251e:	dc 01       	movw	r26, r24
    2520:	cb 01       	movw	r24, r22
    2522:	f8 01       	movw	r30, r16
    2524:	80 83       	st	Z, r24
    2526:	91 83       	std	Z+1, r25	; 0x01
    2528:	a2 83       	std	Z+2, r26	; 0x02
    252a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    252c:	fe 01       	movw	r30, r28
    252e:	e5 53       	subi	r30, 0x35	; 53
    2530:	ff 4f       	sbci	r31, 0xFF	; 255
    2532:	60 81       	ld	r22, Z
    2534:	71 81       	ldd	r23, Z+1	; 0x01
    2536:	82 81       	ldd	r24, Z+2	; 0x02
    2538:	93 81       	ldd	r25, Z+3	; 0x03
    253a:	20 e0       	ldi	r18, 0x00	; 0
    253c:	30 e0       	ldi	r19, 0x00	; 0
    253e:	40 e8       	ldi	r20, 0x80	; 128
    2540:	5f e3       	ldi	r21, 0x3F	; 63
    2542:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2546:	88 23       	and	r24, r24
    2548:	44 f4       	brge	.+16     	; 0x255a <main+0x11d0>
		__ticks = 1;
    254a:	fe 01       	movw	r30, r28
    254c:	e7 53       	subi	r30, 0x37	; 55
    254e:	ff 4f       	sbci	r31, 0xFF	; 255
    2550:	81 e0       	ldi	r24, 0x01	; 1
    2552:	90 e0       	ldi	r25, 0x00	; 0
    2554:	91 83       	std	Z+1, r25	; 0x01
    2556:	80 83       	st	Z, r24
    2558:	64 c0       	rjmp	.+200    	; 0x2622 <main+0x1298>
	else if (__tmp > 65535)
    255a:	fe 01       	movw	r30, r28
    255c:	e5 53       	subi	r30, 0x35	; 53
    255e:	ff 4f       	sbci	r31, 0xFF	; 255
    2560:	60 81       	ld	r22, Z
    2562:	71 81       	ldd	r23, Z+1	; 0x01
    2564:	82 81       	ldd	r24, Z+2	; 0x02
    2566:	93 81       	ldd	r25, Z+3	; 0x03
    2568:	20 e0       	ldi	r18, 0x00	; 0
    256a:	3f ef       	ldi	r19, 0xFF	; 255
    256c:	4f e7       	ldi	r20, 0x7F	; 127
    256e:	57 e4       	ldi	r21, 0x47	; 71
    2570:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2574:	18 16       	cp	r1, r24
    2576:	0c f0       	brlt	.+2      	; 0x257a <main+0x11f0>
    2578:	43 c0       	rjmp	.+134    	; 0x2600 <main+0x1276>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    257a:	fe 01       	movw	r30, r28
    257c:	e1 53       	subi	r30, 0x31	; 49
    257e:	ff 4f       	sbci	r31, 0xFF	; 255
    2580:	60 81       	ld	r22, Z
    2582:	71 81       	ldd	r23, Z+1	; 0x01
    2584:	82 81       	ldd	r24, Z+2	; 0x02
    2586:	93 81       	ldd	r25, Z+3	; 0x03
    2588:	20 e0       	ldi	r18, 0x00	; 0
    258a:	30 e0       	ldi	r19, 0x00	; 0
    258c:	40 e2       	ldi	r20, 0x20	; 32
    258e:	51 e4       	ldi	r21, 0x41	; 65
    2590:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2594:	dc 01       	movw	r26, r24
    2596:	cb 01       	movw	r24, r22
    2598:	8e 01       	movw	r16, r28
    259a:	07 53       	subi	r16, 0x37	; 55
    259c:	1f 4f       	sbci	r17, 0xFF	; 255
    259e:	bc 01       	movw	r22, r24
    25a0:	cd 01       	movw	r24, r26
    25a2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25a6:	dc 01       	movw	r26, r24
    25a8:	cb 01       	movw	r24, r22
    25aa:	f8 01       	movw	r30, r16
    25ac:	91 83       	std	Z+1, r25	; 0x01
    25ae:	80 83       	st	Z, r24
    25b0:	1f c0       	rjmp	.+62     	; 0x25f0 <main+0x1266>
    25b2:	fe 01       	movw	r30, r28
    25b4:	e9 53       	subi	r30, 0x39	; 57
    25b6:	ff 4f       	sbci	r31, 0xFF	; 255
    25b8:	89 e1       	ldi	r24, 0x19	; 25
    25ba:	90 e0       	ldi	r25, 0x00	; 0
    25bc:	91 83       	std	Z+1, r25	; 0x01
    25be:	80 83       	st	Z, r24
    25c0:	fe 01       	movw	r30, r28
    25c2:	e9 53       	subi	r30, 0x39	; 57
    25c4:	ff 4f       	sbci	r31, 0xFF	; 255
    25c6:	80 81       	ld	r24, Z
    25c8:	91 81       	ldd	r25, Z+1	; 0x01
    25ca:	01 97       	sbiw	r24, 0x01	; 1
    25cc:	f1 f7       	brne	.-4      	; 0x25ca <main+0x1240>
    25ce:	fe 01       	movw	r30, r28
    25d0:	e9 53       	subi	r30, 0x39	; 57
    25d2:	ff 4f       	sbci	r31, 0xFF	; 255
    25d4:	91 83       	std	Z+1, r25	; 0x01
    25d6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    25d8:	de 01       	movw	r26, r28
    25da:	a7 53       	subi	r26, 0x37	; 55
    25dc:	bf 4f       	sbci	r27, 0xFF	; 255
    25de:	fe 01       	movw	r30, r28
    25e0:	e7 53       	subi	r30, 0x37	; 55
    25e2:	ff 4f       	sbci	r31, 0xFF	; 255
    25e4:	80 81       	ld	r24, Z
    25e6:	91 81       	ldd	r25, Z+1	; 0x01
    25e8:	01 97       	sbiw	r24, 0x01	; 1
    25ea:	11 96       	adiw	r26, 0x01	; 1
    25ec:	9c 93       	st	X, r25
    25ee:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    25f0:	fe 01       	movw	r30, r28
    25f2:	e7 53       	subi	r30, 0x37	; 55
    25f4:	ff 4f       	sbci	r31, 0xFF	; 255
    25f6:	80 81       	ld	r24, Z
    25f8:	91 81       	ldd	r25, Z+1	; 0x01
    25fa:	00 97       	sbiw	r24, 0x00	; 0
    25fc:	d1 f6       	brne	.-76     	; 0x25b2 <main+0x1228>
    25fe:	27 c0       	rjmp	.+78     	; 0x264e <main+0x12c4>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2600:	8e 01       	movw	r16, r28
    2602:	07 53       	subi	r16, 0x37	; 55
    2604:	1f 4f       	sbci	r17, 0xFF	; 255
    2606:	fe 01       	movw	r30, r28
    2608:	e5 53       	subi	r30, 0x35	; 53
    260a:	ff 4f       	sbci	r31, 0xFF	; 255
    260c:	60 81       	ld	r22, Z
    260e:	71 81       	ldd	r23, Z+1	; 0x01
    2610:	82 81       	ldd	r24, Z+2	; 0x02
    2612:	93 81       	ldd	r25, Z+3	; 0x03
    2614:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2618:	dc 01       	movw	r26, r24
    261a:	cb 01       	movw	r24, r22
    261c:	f8 01       	movw	r30, r16
    261e:	91 83       	std	Z+1, r25	; 0x01
    2620:	80 83       	st	Z, r24
    2622:	de 01       	movw	r26, r28
    2624:	ab 53       	subi	r26, 0x3B	; 59
    2626:	bf 4f       	sbci	r27, 0xFF	; 255
    2628:	fe 01       	movw	r30, r28
    262a:	e7 53       	subi	r30, 0x37	; 55
    262c:	ff 4f       	sbci	r31, 0xFF	; 255
    262e:	80 81       	ld	r24, Z
    2630:	91 81       	ldd	r25, Z+1	; 0x01
    2632:	8d 93       	st	X+, r24
    2634:	9c 93       	st	X, r25
    2636:	fe 01       	movw	r30, r28
    2638:	eb 53       	subi	r30, 0x3B	; 59
    263a:	ff 4f       	sbci	r31, 0xFF	; 255
    263c:	80 81       	ld	r24, Z
    263e:	91 81       	ldd	r25, Z+1	; 0x01
    2640:	01 97       	sbiw	r24, 0x01	; 1
    2642:	f1 f7       	brne	.-4      	; 0x2640 <main+0x12b6>
    2644:	fe 01       	movw	r30, r28
    2646:	eb 53       	subi	r30, 0x3B	; 59
    2648:	ff 4f       	sbci	r31, 0xFF	; 255
    264a:	91 83       	std	Z+1, r25	; 0x01
    264c:	80 83       	st	Z, r24
			_delay_ms(3000);
			LED_voidOff(LED6);
    264e:	fe 01       	movw	r30, r28
    2650:	ec 5c       	subi	r30, 0xCC	; 204
    2652:	fe 4f       	sbci	r31, 0xFE	; 254
    2654:	60 81       	ld	r22, Z
    2656:	71 81       	ldd	r23, Z+1	; 0x01
    2658:	82 81       	ldd	r24, Z+2	; 0x02
    265a:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
    265e:	fe 01       	movw	r30, r28
    2660:	ef 53       	subi	r30, 0x3F	; 63
    2662:	ff 4f       	sbci	r31, 0xFF	; 255
    2664:	80 e0       	ldi	r24, 0x00	; 0
    2666:	90 e8       	ldi	r25, 0x80	; 128
    2668:	ab e3       	ldi	r26, 0x3B	; 59
    266a:	b5 e4       	ldi	r27, 0x45	; 69
    266c:	80 83       	st	Z, r24
    266e:	91 83       	std	Z+1, r25	; 0x01
    2670:	a2 83       	std	Z+2, r26	; 0x02
    2672:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2674:	8e 01       	movw	r16, r28
    2676:	03 54       	subi	r16, 0x43	; 67
    2678:	1f 4f       	sbci	r17, 0xFF	; 255
    267a:	fe 01       	movw	r30, r28
    267c:	ef 53       	subi	r30, 0x3F	; 63
    267e:	ff 4f       	sbci	r31, 0xFF	; 255
    2680:	60 81       	ld	r22, Z
    2682:	71 81       	ldd	r23, Z+1	; 0x01
    2684:	82 81       	ldd	r24, Z+2	; 0x02
    2686:	93 81       	ldd	r25, Z+3	; 0x03
    2688:	20 e0       	ldi	r18, 0x00	; 0
    268a:	30 e0       	ldi	r19, 0x00	; 0
    268c:	4a e7       	ldi	r20, 0x7A	; 122
    268e:	53 e4       	ldi	r21, 0x43	; 67
    2690:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2694:	dc 01       	movw	r26, r24
    2696:	cb 01       	movw	r24, r22
    2698:	f8 01       	movw	r30, r16
    269a:	80 83       	st	Z, r24
    269c:	91 83       	std	Z+1, r25	; 0x01
    269e:	a2 83       	std	Z+2, r26	; 0x02
    26a0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26a2:	fe 01       	movw	r30, r28
    26a4:	e3 54       	subi	r30, 0x43	; 67
    26a6:	ff 4f       	sbci	r31, 0xFF	; 255
    26a8:	60 81       	ld	r22, Z
    26aa:	71 81       	ldd	r23, Z+1	; 0x01
    26ac:	82 81       	ldd	r24, Z+2	; 0x02
    26ae:	93 81       	ldd	r25, Z+3	; 0x03
    26b0:	20 e0       	ldi	r18, 0x00	; 0
    26b2:	30 e0       	ldi	r19, 0x00	; 0
    26b4:	40 e8       	ldi	r20, 0x80	; 128
    26b6:	5f e3       	ldi	r21, 0x3F	; 63
    26b8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    26bc:	88 23       	and	r24, r24
    26be:	44 f4       	brge	.+16     	; 0x26d0 <main+0x1346>
		__ticks = 1;
    26c0:	fe 01       	movw	r30, r28
    26c2:	e5 54       	subi	r30, 0x45	; 69
    26c4:	ff 4f       	sbci	r31, 0xFF	; 255
    26c6:	81 e0       	ldi	r24, 0x01	; 1
    26c8:	90 e0       	ldi	r25, 0x00	; 0
    26ca:	91 83       	std	Z+1, r25	; 0x01
    26cc:	80 83       	st	Z, r24
    26ce:	64 c0       	rjmp	.+200    	; 0x2798 <main+0x140e>
	else if (__tmp > 65535)
    26d0:	fe 01       	movw	r30, r28
    26d2:	e3 54       	subi	r30, 0x43	; 67
    26d4:	ff 4f       	sbci	r31, 0xFF	; 255
    26d6:	60 81       	ld	r22, Z
    26d8:	71 81       	ldd	r23, Z+1	; 0x01
    26da:	82 81       	ldd	r24, Z+2	; 0x02
    26dc:	93 81       	ldd	r25, Z+3	; 0x03
    26de:	20 e0       	ldi	r18, 0x00	; 0
    26e0:	3f ef       	ldi	r19, 0xFF	; 255
    26e2:	4f e7       	ldi	r20, 0x7F	; 127
    26e4:	57 e4       	ldi	r21, 0x47	; 71
    26e6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    26ea:	18 16       	cp	r1, r24
    26ec:	0c f0       	brlt	.+2      	; 0x26f0 <main+0x1366>
    26ee:	43 c0       	rjmp	.+134    	; 0x2776 <main+0x13ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26f0:	fe 01       	movw	r30, r28
    26f2:	ef 53       	subi	r30, 0x3F	; 63
    26f4:	ff 4f       	sbci	r31, 0xFF	; 255
    26f6:	60 81       	ld	r22, Z
    26f8:	71 81       	ldd	r23, Z+1	; 0x01
    26fa:	82 81       	ldd	r24, Z+2	; 0x02
    26fc:	93 81       	ldd	r25, Z+3	; 0x03
    26fe:	20 e0       	ldi	r18, 0x00	; 0
    2700:	30 e0       	ldi	r19, 0x00	; 0
    2702:	40 e2       	ldi	r20, 0x20	; 32
    2704:	51 e4       	ldi	r21, 0x41	; 65
    2706:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    270a:	dc 01       	movw	r26, r24
    270c:	cb 01       	movw	r24, r22
    270e:	8e 01       	movw	r16, r28
    2710:	05 54       	subi	r16, 0x45	; 69
    2712:	1f 4f       	sbci	r17, 0xFF	; 255
    2714:	bc 01       	movw	r22, r24
    2716:	cd 01       	movw	r24, r26
    2718:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    271c:	dc 01       	movw	r26, r24
    271e:	cb 01       	movw	r24, r22
    2720:	f8 01       	movw	r30, r16
    2722:	91 83       	std	Z+1, r25	; 0x01
    2724:	80 83       	st	Z, r24
    2726:	1f c0       	rjmp	.+62     	; 0x2766 <main+0x13dc>
    2728:	fe 01       	movw	r30, r28
    272a:	e7 54       	subi	r30, 0x47	; 71
    272c:	ff 4f       	sbci	r31, 0xFF	; 255
    272e:	89 e1       	ldi	r24, 0x19	; 25
    2730:	90 e0       	ldi	r25, 0x00	; 0
    2732:	91 83       	std	Z+1, r25	; 0x01
    2734:	80 83       	st	Z, r24
    2736:	fe 01       	movw	r30, r28
    2738:	e7 54       	subi	r30, 0x47	; 71
    273a:	ff 4f       	sbci	r31, 0xFF	; 255
    273c:	80 81       	ld	r24, Z
    273e:	91 81       	ldd	r25, Z+1	; 0x01
    2740:	01 97       	sbiw	r24, 0x01	; 1
    2742:	f1 f7       	brne	.-4      	; 0x2740 <main+0x13b6>
    2744:	fe 01       	movw	r30, r28
    2746:	e7 54       	subi	r30, 0x47	; 71
    2748:	ff 4f       	sbci	r31, 0xFF	; 255
    274a:	91 83       	std	Z+1, r25	; 0x01
    274c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    274e:	de 01       	movw	r26, r28
    2750:	a5 54       	subi	r26, 0x45	; 69
    2752:	bf 4f       	sbci	r27, 0xFF	; 255
    2754:	fe 01       	movw	r30, r28
    2756:	e5 54       	subi	r30, 0x45	; 69
    2758:	ff 4f       	sbci	r31, 0xFF	; 255
    275a:	80 81       	ld	r24, Z
    275c:	91 81       	ldd	r25, Z+1	; 0x01
    275e:	01 97       	sbiw	r24, 0x01	; 1
    2760:	11 96       	adiw	r26, 0x01	; 1
    2762:	9c 93       	st	X, r25
    2764:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2766:	fe 01       	movw	r30, r28
    2768:	e5 54       	subi	r30, 0x45	; 69
    276a:	ff 4f       	sbci	r31, 0xFF	; 255
    276c:	80 81       	ld	r24, Z
    276e:	91 81       	ldd	r25, Z+1	; 0x01
    2770:	00 97       	sbiw	r24, 0x00	; 0
    2772:	d1 f6       	brne	.-76     	; 0x2728 <main+0x139e>
    2774:	27 c0       	rjmp	.+78     	; 0x27c4 <main+0x143a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2776:	8e 01       	movw	r16, r28
    2778:	05 54       	subi	r16, 0x45	; 69
    277a:	1f 4f       	sbci	r17, 0xFF	; 255
    277c:	fe 01       	movw	r30, r28
    277e:	e3 54       	subi	r30, 0x43	; 67
    2780:	ff 4f       	sbci	r31, 0xFF	; 255
    2782:	60 81       	ld	r22, Z
    2784:	71 81       	ldd	r23, Z+1	; 0x01
    2786:	82 81       	ldd	r24, Z+2	; 0x02
    2788:	93 81       	ldd	r25, Z+3	; 0x03
    278a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    278e:	dc 01       	movw	r26, r24
    2790:	cb 01       	movw	r24, r22
    2792:	f8 01       	movw	r30, r16
    2794:	91 83       	std	Z+1, r25	; 0x01
    2796:	80 83       	st	Z, r24
    2798:	de 01       	movw	r26, r28
    279a:	a9 54       	subi	r26, 0x49	; 73
    279c:	bf 4f       	sbci	r27, 0xFF	; 255
    279e:	fe 01       	movw	r30, r28
    27a0:	e5 54       	subi	r30, 0x45	; 69
    27a2:	ff 4f       	sbci	r31, 0xFF	; 255
    27a4:	80 81       	ld	r24, Z
    27a6:	91 81       	ldd	r25, Z+1	; 0x01
    27a8:	8d 93       	st	X+, r24
    27aa:	9c 93       	st	X, r25
    27ac:	fe 01       	movw	r30, r28
    27ae:	e9 54       	subi	r30, 0x49	; 73
    27b0:	ff 4f       	sbci	r31, 0xFF	; 255
    27b2:	80 81       	ld	r24, Z
    27b4:	91 81       	ldd	r25, Z+1	; 0x01
    27b6:	01 97       	sbiw	r24, 0x01	; 1
    27b8:	f1 f7       	brne	.-4      	; 0x27b6 <main+0x142c>
    27ba:	fe 01       	movw	r30, r28
    27bc:	e9 54       	subi	r30, 0x49	; 73
    27be:	ff 4f       	sbci	r31, 0xFF	; 255
    27c0:	91 83       	std	Z+1, r25	; 0x01
    27c2:	80 83       	st	Z, r24
			_delay_ms(3000);
			LED_voidOff(LED5);
    27c4:	fe 01       	movw	r30, r28
    27c6:	ef 5c       	subi	r30, 0xCF	; 207
    27c8:	fe 4f       	sbci	r31, 0xFE	; 254
    27ca:	60 81       	ld	r22, Z
    27cc:	71 81       	ldd	r23, Z+1	; 0x01
    27ce:	82 81       	ldd	r24, Z+2	; 0x02
    27d0:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
    27d4:	fe 01       	movw	r30, r28
    27d6:	ed 54       	subi	r30, 0x4D	; 77
    27d8:	ff 4f       	sbci	r31, 0xFF	; 255
    27da:	80 e0       	ldi	r24, 0x00	; 0
    27dc:	90 e8       	ldi	r25, 0x80	; 128
    27de:	ab e3       	ldi	r26, 0x3B	; 59
    27e0:	b5 e4       	ldi	r27, 0x45	; 69
    27e2:	80 83       	st	Z, r24
    27e4:	91 83       	std	Z+1, r25	; 0x01
    27e6:	a2 83       	std	Z+2, r26	; 0x02
    27e8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27ea:	8e 01       	movw	r16, r28
    27ec:	01 55       	subi	r16, 0x51	; 81
    27ee:	1f 4f       	sbci	r17, 0xFF	; 255
    27f0:	fe 01       	movw	r30, r28
    27f2:	ed 54       	subi	r30, 0x4D	; 77
    27f4:	ff 4f       	sbci	r31, 0xFF	; 255
    27f6:	60 81       	ld	r22, Z
    27f8:	71 81       	ldd	r23, Z+1	; 0x01
    27fa:	82 81       	ldd	r24, Z+2	; 0x02
    27fc:	93 81       	ldd	r25, Z+3	; 0x03
    27fe:	20 e0       	ldi	r18, 0x00	; 0
    2800:	30 e0       	ldi	r19, 0x00	; 0
    2802:	4a e7       	ldi	r20, 0x7A	; 122
    2804:	53 e4       	ldi	r21, 0x43	; 67
    2806:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    280a:	dc 01       	movw	r26, r24
    280c:	cb 01       	movw	r24, r22
    280e:	f8 01       	movw	r30, r16
    2810:	80 83       	st	Z, r24
    2812:	91 83       	std	Z+1, r25	; 0x01
    2814:	a2 83       	std	Z+2, r26	; 0x02
    2816:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2818:	fe 01       	movw	r30, r28
    281a:	e1 55       	subi	r30, 0x51	; 81
    281c:	ff 4f       	sbci	r31, 0xFF	; 255
    281e:	60 81       	ld	r22, Z
    2820:	71 81       	ldd	r23, Z+1	; 0x01
    2822:	82 81       	ldd	r24, Z+2	; 0x02
    2824:	93 81       	ldd	r25, Z+3	; 0x03
    2826:	20 e0       	ldi	r18, 0x00	; 0
    2828:	30 e0       	ldi	r19, 0x00	; 0
    282a:	40 e8       	ldi	r20, 0x80	; 128
    282c:	5f e3       	ldi	r21, 0x3F	; 63
    282e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2832:	88 23       	and	r24, r24
    2834:	44 f4       	brge	.+16     	; 0x2846 <main+0x14bc>
		__ticks = 1;
    2836:	fe 01       	movw	r30, r28
    2838:	e3 55       	subi	r30, 0x53	; 83
    283a:	ff 4f       	sbci	r31, 0xFF	; 255
    283c:	81 e0       	ldi	r24, 0x01	; 1
    283e:	90 e0       	ldi	r25, 0x00	; 0
    2840:	91 83       	std	Z+1, r25	; 0x01
    2842:	80 83       	st	Z, r24
    2844:	64 c0       	rjmp	.+200    	; 0x290e <main+0x1584>
	else if (__tmp > 65535)
    2846:	fe 01       	movw	r30, r28
    2848:	e1 55       	subi	r30, 0x51	; 81
    284a:	ff 4f       	sbci	r31, 0xFF	; 255
    284c:	60 81       	ld	r22, Z
    284e:	71 81       	ldd	r23, Z+1	; 0x01
    2850:	82 81       	ldd	r24, Z+2	; 0x02
    2852:	93 81       	ldd	r25, Z+3	; 0x03
    2854:	20 e0       	ldi	r18, 0x00	; 0
    2856:	3f ef       	ldi	r19, 0xFF	; 255
    2858:	4f e7       	ldi	r20, 0x7F	; 127
    285a:	57 e4       	ldi	r21, 0x47	; 71
    285c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2860:	18 16       	cp	r1, r24
    2862:	0c f0       	brlt	.+2      	; 0x2866 <main+0x14dc>
    2864:	43 c0       	rjmp	.+134    	; 0x28ec <main+0x1562>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2866:	fe 01       	movw	r30, r28
    2868:	ed 54       	subi	r30, 0x4D	; 77
    286a:	ff 4f       	sbci	r31, 0xFF	; 255
    286c:	60 81       	ld	r22, Z
    286e:	71 81       	ldd	r23, Z+1	; 0x01
    2870:	82 81       	ldd	r24, Z+2	; 0x02
    2872:	93 81       	ldd	r25, Z+3	; 0x03
    2874:	20 e0       	ldi	r18, 0x00	; 0
    2876:	30 e0       	ldi	r19, 0x00	; 0
    2878:	40 e2       	ldi	r20, 0x20	; 32
    287a:	51 e4       	ldi	r21, 0x41	; 65
    287c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2880:	dc 01       	movw	r26, r24
    2882:	cb 01       	movw	r24, r22
    2884:	8e 01       	movw	r16, r28
    2886:	03 55       	subi	r16, 0x53	; 83
    2888:	1f 4f       	sbci	r17, 0xFF	; 255
    288a:	bc 01       	movw	r22, r24
    288c:	cd 01       	movw	r24, r26
    288e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2892:	dc 01       	movw	r26, r24
    2894:	cb 01       	movw	r24, r22
    2896:	f8 01       	movw	r30, r16
    2898:	91 83       	std	Z+1, r25	; 0x01
    289a:	80 83       	st	Z, r24
    289c:	1f c0       	rjmp	.+62     	; 0x28dc <main+0x1552>
    289e:	fe 01       	movw	r30, r28
    28a0:	e5 55       	subi	r30, 0x55	; 85
    28a2:	ff 4f       	sbci	r31, 0xFF	; 255
    28a4:	89 e1       	ldi	r24, 0x19	; 25
    28a6:	90 e0       	ldi	r25, 0x00	; 0
    28a8:	91 83       	std	Z+1, r25	; 0x01
    28aa:	80 83       	st	Z, r24
    28ac:	fe 01       	movw	r30, r28
    28ae:	e5 55       	subi	r30, 0x55	; 85
    28b0:	ff 4f       	sbci	r31, 0xFF	; 255
    28b2:	80 81       	ld	r24, Z
    28b4:	91 81       	ldd	r25, Z+1	; 0x01
    28b6:	01 97       	sbiw	r24, 0x01	; 1
    28b8:	f1 f7       	brne	.-4      	; 0x28b6 <main+0x152c>
    28ba:	fe 01       	movw	r30, r28
    28bc:	e5 55       	subi	r30, 0x55	; 85
    28be:	ff 4f       	sbci	r31, 0xFF	; 255
    28c0:	91 83       	std	Z+1, r25	; 0x01
    28c2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28c4:	de 01       	movw	r26, r28
    28c6:	a3 55       	subi	r26, 0x53	; 83
    28c8:	bf 4f       	sbci	r27, 0xFF	; 255
    28ca:	fe 01       	movw	r30, r28
    28cc:	e3 55       	subi	r30, 0x53	; 83
    28ce:	ff 4f       	sbci	r31, 0xFF	; 255
    28d0:	80 81       	ld	r24, Z
    28d2:	91 81       	ldd	r25, Z+1	; 0x01
    28d4:	01 97       	sbiw	r24, 0x01	; 1
    28d6:	11 96       	adiw	r26, 0x01	; 1
    28d8:	9c 93       	st	X, r25
    28da:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28dc:	fe 01       	movw	r30, r28
    28de:	e3 55       	subi	r30, 0x53	; 83
    28e0:	ff 4f       	sbci	r31, 0xFF	; 255
    28e2:	80 81       	ld	r24, Z
    28e4:	91 81       	ldd	r25, Z+1	; 0x01
    28e6:	00 97       	sbiw	r24, 0x00	; 0
    28e8:	d1 f6       	brne	.-76     	; 0x289e <main+0x1514>
    28ea:	27 c0       	rjmp	.+78     	; 0x293a <main+0x15b0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28ec:	8e 01       	movw	r16, r28
    28ee:	03 55       	subi	r16, 0x53	; 83
    28f0:	1f 4f       	sbci	r17, 0xFF	; 255
    28f2:	fe 01       	movw	r30, r28
    28f4:	e1 55       	subi	r30, 0x51	; 81
    28f6:	ff 4f       	sbci	r31, 0xFF	; 255
    28f8:	60 81       	ld	r22, Z
    28fa:	71 81       	ldd	r23, Z+1	; 0x01
    28fc:	82 81       	ldd	r24, Z+2	; 0x02
    28fe:	93 81       	ldd	r25, Z+3	; 0x03
    2900:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2904:	dc 01       	movw	r26, r24
    2906:	cb 01       	movw	r24, r22
    2908:	f8 01       	movw	r30, r16
    290a:	91 83       	std	Z+1, r25	; 0x01
    290c:	80 83       	st	Z, r24
    290e:	de 01       	movw	r26, r28
    2910:	a7 55       	subi	r26, 0x57	; 87
    2912:	bf 4f       	sbci	r27, 0xFF	; 255
    2914:	fe 01       	movw	r30, r28
    2916:	e3 55       	subi	r30, 0x53	; 83
    2918:	ff 4f       	sbci	r31, 0xFF	; 255
    291a:	80 81       	ld	r24, Z
    291c:	91 81       	ldd	r25, Z+1	; 0x01
    291e:	8d 93       	st	X+, r24
    2920:	9c 93       	st	X, r25
    2922:	fe 01       	movw	r30, r28
    2924:	e7 55       	subi	r30, 0x57	; 87
    2926:	ff 4f       	sbci	r31, 0xFF	; 255
    2928:	80 81       	ld	r24, Z
    292a:	91 81       	ldd	r25, Z+1	; 0x01
    292c:	01 97       	sbiw	r24, 0x01	; 1
    292e:	f1 f7       	brne	.-4      	; 0x292c <main+0x15a2>
    2930:	fe 01       	movw	r30, r28
    2932:	e7 55       	subi	r30, 0x57	; 87
    2934:	ff 4f       	sbci	r31, 0xFF	; 255
    2936:	91 83       	std	Z+1, r25	; 0x01
    2938:	80 83       	st	Z, r24
			_delay_ms(3000);
			LED_voidOff(LED3);
    293a:	fe 01       	movw	r30, r28
    293c:	e2 5d       	subi	r30, 0xD2	; 210
    293e:	fe 4f       	sbci	r31, 0xFE	; 254
    2940:	60 81       	ld	r22, Z
    2942:	71 81       	ldd	r23, Z+1	; 0x01
    2944:	82 81       	ldd	r24, Z+2	; 0x02
    2946:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
    294a:	fe 01       	movw	r30, r28
    294c:	eb 55       	subi	r30, 0x5B	; 91
    294e:	ff 4f       	sbci	r31, 0xFF	; 255
    2950:	80 e0       	ldi	r24, 0x00	; 0
    2952:	90 e8       	ldi	r25, 0x80	; 128
    2954:	ab e3       	ldi	r26, 0x3B	; 59
    2956:	b5 e4       	ldi	r27, 0x45	; 69
    2958:	80 83       	st	Z, r24
    295a:	91 83       	std	Z+1, r25	; 0x01
    295c:	a2 83       	std	Z+2, r26	; 0x02
    295e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2960:	8e 01       	movw	r16, r28
    2962:	0f 55       	subi	r16, 0x5F	; 95
    2964:	1f 4f       	sbci	r17, 0xFF	; 255
    2966:	fe 01       	movw	r30, r28
    2968:	eb 55       	subi	r30, 0x5B	; 91
    296a:	ff 4f       	sbci	r31, 0xFF	; 255
    296c:	60 81       	ld	r22, Z
    296e:	71 81       	ldd	r23, Z+1	; 0x01
    2970:	82 81       	ldd	r24, Z+2	; 0x02
    2972:	93 81       	ldd	r25, Z+3	; 0x03
    2974:	20 e0       	ldi	r18, 0x00	; 0
    2976:	30 e0       	ldi	r19, 0x00	; 0
    2978:	4a e7       	ldi	r20, 0x7A	; 122
    297a:	53 e4       	ldi	r21, 0x43	; 67
    297c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2980:	dc 01       	movw	r26, r24
    2982:	cb 01       	movw	r24, r22
    2984:	f8 01       	movw	r30, r16
    2986:	80 83       	st	Z, r24
    2988:	91 83       	std	Z+1, r25	; 0x01
    298a:	a2 83       	std	Z+2, r26	; 0x02
    298c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    298e:	fe 01       	movw	r30, r28
    2990:	ef 55       	subi	r30, 0x5F	; 95
    2992:	ff 4f       	sbci	r31, 0xFF	; 255
    2994:	60 81       	ld	r22, Z
    2996:	71 81       	ldd	r23, Z+1	; 0x01
    2998:	82 81       	ldd	r24, Z+2	; 0x02
    299a:	93 81       	ldd	r25, Z+3	; 0x03
    299c:	20 e0       	ldi	r18, 0x00	; 0
    299e:	30 e0       	ldi	r19, 0x00	; 0
    29a0:	40 e8       	ldi	r20, 0x80	; 128
    29a2:	5f e3       	ldi	r21, 0x3F	; 63
    29a4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    29a8:	88 23       	and	r24, r24
    29aa:	44 f4       	brge	.+16     	; 0x29bc <main+0x1632>
		__ticks = 1;
    29ac:	fe 01       	movw	r30, r28
    29ae:	e1 56       	subi	r30, 0x61	; 97
    29b0:	ff 4f       	sbci	r31, 0xFF	; 255
    29b2:	81 e0       	ldi	r24, 0x01	; 1
    29b4:	90 e0       	ldi	r25, 0x00	; 0
    29b6:	91 83       	std	Z+1, r25	; 0x01
    29b8:	80 83       	st	Z, r24
    29ba:	64 c0       	rjmp	.+200    	; 0x2a84 <main+0x16fa>
	else if (__tmp > 65535)
    29bc:	fe 01       	movw	r30, r28
    29be:	ef 55       	subi	r30, 0x5F	; 95
    29c0:	ff 4f       	sbci	r31, 0xFF	; 255
    29c2:	60 81       	ld	r22, Z
    29c4:	71 81       	ldd	r23, Z+1	; 0x01
    29c6:	82 81       	ldd	r24, Z+2	; 0x02
    29c8:	93 81       	ldd	r25, Z+3	; 0x03
    29ca:	20 e0       	ldi	r18, 0x00	; 0
    29cc:	3f ef       	ldi	r19, 0xFF	; 255
    29ce:	4f e7       	ldi	r20, 0x7F	; 127
    29d0:	57 e4       	ldi	r21, 0x47	; 71
    29d2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    29d6:	18 16       	cp	r1, r24
    29d8:	0c f0       	brlt	.+2      	; 0x29dc <main+0x1652>
    29da:	43 c0       	rjmp	.+134    	; 0x2a62 <main+0x16d8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29dc:	fe 01       	movw	r30, r28
    29de:	eb 55       	subi	r30, 0x5B	; 91
    29e0:	ff 4f       	sbci	r31, 0xFF	; 255
    29e2:	60 81       	ld	r22, Z
    29e4:	71 81       	ldd	r23, Z+1	; 0x01
    29e6:	82 81       	ldd	r24, Z+2	; 0x02
    29e8:	93 81       	ldd	r25, Z+3	; 0x03
    29ea:	20 e0       	ldi	r18, 0x00	; 0
    29ec:	30 e0       	ldi	r19, 0x00	; 0
    29ee:	40 e2       	ldi	r20, 0x20	; 32
    29f0:	51 e4       	ldi	r21, 0x41	; 65
    29f2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29f6:	dc 01       	movw	r26, r24
    29f8:	cb 01       	movw	r24, r22
    29fa:	8e 01       	movw	r16, r28
    29fc:	01 56       	subi	r16, 0x61	; 97
    29fe:	1f 4f       	sbci	r17, 0xFF	; 255
    2a00:	bc 01       	movw	r22, r24
    2a02:	cd 01       	movw	r24, r26
    2a04:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a08:	dc 01       	movw	r26, r24
    2a0a:	cb 01       	movw	r24, r22
    2a0c:	f8 01       	movw	r30, r16
    2a0e:	91 83       	std	Z+1, r25	; 0x01
    2a10:	80 83       	st	Z, r24
    2a12:	1f c0       	rjmp	.+62     	; 0x2a52 <main+0x16c8>
    2a14:	fe 01       	movw	r30, r28
    2a16:	e3 56       	subi	r30, 0x63	; 99
    2a18:	ff 4f       	sbci	r31, 0xFF	; 255
    2a1a:	89 e1       	ldi	r24, 0x19	; 25
    2a1c:	90 e0       	ldi	r25, 0x00	; 0
    2a1e:	91 83       	std	Z+1, r25	; 0x01
    2a20:	80 83       	st	Z, r24
    2a22:	fe 01       	movw	r30, r28
    2a24:	e3 56       	subi	r30, 0x63	; 99
    2a26:	ff 4f       	sbci	r31, 0xFF	; 255
    2a28:	80 81       	ld	r24, Z
    2a2a:	91 81       	ldd	r25, Z+1	; 0x01
    2a2c:	01 97       	sbiw	r24, 0x01	; 1
    2a2e:	f1 f7       	brne	.-4      	; 0x2a2c <main+0x16a2>
    2a30:	fe 01       	movw	r30, r28
    2a32:	e3 56       	subi	r30, 0x63	; 99
    2a34:	ff 4f       	sbci	r31, 0xFF	; 255
    2a36:	91 83       	std	Z+1, r25	; 0x01
    2a38:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a3a:	de 01       	movw	r26, r28
    2a3c:	a1 56       	subi	r26, 0x61	; 97
    2a3e:	bf 4f       	sbci	r27, 0xFF	; 255
    2a40:	fe 01       	movw	r30, r28
    2a42:	e1 56       	subi	r30, 0x61	; 97
    2a44:	ff 4f       	sbci	r31, 0xFF	; 255
    2a46:	80 81       	ld	r24, Z
    2a48:	91 81       	ldd	r25, Z+1	; 0x01
    2a4a:	01 97       	sbiw	r24, 0x01	; 1
    2a4c:	11 96       	adiw	r26, 0x01	; 1
    2a4e:	9c 93       	st	X, r25
    2a50:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a52:	fe 01       	movw	r30, r28
    2a54:	e1 56       	subi	r30, 0x61	; 97
    2a56:	ff 4f       	sbci	r31, 0xFF	; 255
    2a58:	80 81       	ld	r24, Z
    2a5a:	91 81       	ldd	r25, Z+1	; 0x01
    2a5c:	00 97       	sbiw	r24, 0x00	; 0
    2a5e:	d1 f6       	brne	.-76     	; 0x2a14 <main+0x168a>
    2a60:	27 c0       	rjmp	.+78     	; 0x2ab0 <main+0x1726>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a62:	8e 01       	movw	r16, r28
    2a64:	01 56       	subi	r16, 0x61	; 97
    2a66:	1f 4f       	sbci	r17, 0xFF	; 255
    2a68:	fe 01       	movw	r30, r28
    2a6a:	ef 55       	subi	r30, 0x5F	; 95
    2a6c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a6e:	60 81       	ld	r22, Z
    2a70:	71 81       	ldd	r23, Z+1	; 0x01
    2a72:	82 81       	ldd	r24, Z+2	; 0x02
    2a74:	93 81       	ldd	r25, Z+3	; 0x03
    2a76:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a7a:	dc 01       	movw	r26, r24
    2a7c:	cb 01       	movw	r24, r22
    2a7e:	f8 01       	movw	r30, r16
    2a80:	91 83       	std	Z+1, r25	; 0x01
    2a82:	80 83       	st	Z, r24
    2a84:	de 01       	movw	r26, r28
    2a86:	a5 56       	subi	r26, 0x65	; 101
    2a88:	bf 4f       	sbci	r27, 0xFF	; 255
    2a8a:	fe 01       	movw	r30, r28
    2a8c:	e1 56       	subi	r30, 0x61	; 97
    2a8e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a90:	80 81       	ld	r24, Z
    2a92:	91 81       	ldd	r25, Z+1	; 0x01
    2a94:	8d 93       	st	X+, r24
    2a96:	9c 93       	st	X, r25
    2a98:	fe 01       	movw	r30, r28
    2a9a:	e5 56       	subi	r30, 0x65	; 101
    2a9c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a9e:	80 81       	ld	r24, Z
    2aa0:	91 81       	ldd	r25, Z+1	; 0x01
    2aa2:	01 97       	sbiw	r24, 0x01	; 1
    2aa4:	f1 f7       	brne	.-4      	; 0x2aa2 <main+0x1718>
    2aa6:	fe 01       	movw	r30, r28
    2aa8:	e5 56       	subi	r30, 0x65	; 101
    2aaa:	ff 4f       	sbci	r31, 0xFF	; 255
    2aac:	91 83       	std	Z+1, r25	; 0x01
    2aae:	80 83       	st	Z, r24
			_delay_ms(3000);
			LED_voidOff(LED2);
    2ab0:	fe 01       	movw	r30, r28
    2ab2:	e5 5d       	subi	r30, 0xD5	; 213
    2ab4:	fe 4f       	sbci	r31, 0xFE	; 254
    2ab6:	60 81       	ld	r22, Z
    2ab8:	71 81       	ldd	r23, Z+1	; 0x01
    2aba:	82 81       	ldd	r24, Z+2	; 0x02
    2abc:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
    2ac0:	fe 01       	movw	r30, r28
    2ac2:	e9 56       	subi	r30, 0x69	; 105
    2ac4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac6:	80 e0       	ldi	r24, 0x00	; 0
    2ac8:	90 e8       	ldi	r25, 0x80	; 128
    2aca:	ab e3       	ldi	r26, 0x3B	; 59
    2acc:	b5 e4       	ldi	r27, 0x45	; 69
    2ace:	80 83       	st	Z, r24
    2ad0:	91 83       	std	Z+1, r25	; 0x01
    2ad2:	a2 83       	std	Z+2, r26	; 0x02
    2ad4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ad6:	8e 01       	movw	r16, r28
    2ad8:	0d 56       	subi	r16, 0x6D	; 109
    2ada:	1f 4f       	sbci	r17, 0xFF	; 255
    2adc:	fe 01       	movw	r30, r28
    2ade:	e9 56       	subi	r30, 0x69	; 105
    2ae0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae2:	60 81       	ld	r22, Z
    2ae4:	71 81       	ldd	r23, Z+1	; 0x01
    2ae6:	82 81       	ldd	r24, Z+2	; 0x02
    2ae8:	93 81       	ldd	r25, Z+3	; 0x03
    2aea:	20 e0       	ldi	r18, 0x00	; 0
    2aec:	30 e0       	ldi	r19, 0x00	; 0
    2aee:	4a e7       	ldi	r20, 0x7A	; 122
    2af0:	53 e4       	ldi	r21, 0x43	; 67
    2af2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2af6:	dc 01       	movw	r26, r24
    2af8:	cb 01       	movw	r24, r22
    2afa:	f8 01       	movw	r30, r16
    2afc:	80 83       	st	Z, r24
    2afe:	91 83       	std	Z+1, r25	; 0x01
    2b00:	a2 83       	std	Z+2, r26	; 0x02
    2b02:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b04:	fe 01       	movw	r30, r28
    2b06:	ed 56       	subi	r30, 0x6D	; 109
    2b08:	ff 4f       	sbci	r31, 0xFF	; 255
    2b0a:	60 81       	ld	r22, Z
    2b0c:	71 81       	ldd	r23, Z+1	; 0x01
    2b0e:	82 81       	ldd	r24, Z+2	; 0x02
    2b10:	93 81       	ldd	r25, Z+3	; 0x03
    2b12:	20 e0       	ldi	r18, 0x00	; 0
    2b14:	30 e0       	ldi	r19, 0x00	; 0
    2b16:	40 e8       	ldi	r20, 0x80	; 128
    2b18:	5f e3       	ldi	r21, 0x3F	; 63
    2b1a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b1e:	88 23       	and	r24, r24
    2b20:	44 f4       	brge	.+16     	; 0x2b32 <main+0x17a8>
		__ticks = 1;
    2b22:	fe 01       	movw	r30, r28
    2b24:	ef 56       	subi	r30, 0x6F	; 111
    2b26:	ff 4f       	sbci	r31, 0xFF	; 255
    2b28:	81 e0       	ldi	r24, 0x01	; 1
    2b2a:	90 e0       	ldi	r25, 0x00	; 0
    2b2c:	91 83       	std	Z+1, r25	; 0x01
    2b2e:	80 83       	st	Z, r24
    2b30:	64 c0       	rjmp	.+200    	; 0x2bfa <main+0x1870>
	else if (__tmp > 65535)
    2b32:	fe 01       	movw	r30, r28
    2b34:	ed 56       	subi	r30, 0x6D	; 109
    2b36:	ff 4f       	sbci	r31, 0xFF	; 255
    2b38:	60 81       	ld	r22, Z
    2b3a:	71 81       	ldd	r23, Z+1	; 0x01
    2b3c:	82 81       	ldd	r24, Z+2	; 0x02
    2b3e:	93 81       	ldd	r25, Z+3	; 0x03
    2b40:	20 e0       	ldi	r18, 0x00	; 0
    2b42:	3f ef       	ldi	r19, 0xFF	; 255
    2b44:	4f e7       	ldi	r20, 0x7F	; 127
    2b46:	57 e4       	ldi	r21, 0x47	; 71
    2b48:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b4c:	18 16       	cp	r1, r24
    2b4e:	0c f0       	brlt	.+2      	; 0x2b52 <main+0x17c8>
    2b50:	43 c0       	rjmp	.+134    	; 0x2bd8 <main+0x184e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b52:	fe 01       	movw	r30, r28
    2b54:	e9 56       	subi	r30, 0x69	; 105
    2b56:	ff 4f       	sbci	r31, 0xFF	; 255
    2b58:	60 81       	ld	r22, Z
    2b5a:	71 81       	ldd	r23, Z+1	; 0x01
    2b5c:	82 81       	ldd	r24, Z+2	; 0x02
    2b5e:	93 81       	ldd	r25, Z+3	; 0x03
    2b60:	20 e0       	ldi	r18, 0x00	; 0
    2b62:	30 e0       	ldi	r19, 0x00	; 0
    2b64:	40 e2       	ldi	r20, 0x20	; 32
    2b66:	51 e4       	ldi	r21, 0x41	; 65
    2b68:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b6c:	dc 01       	movw	r26, r24
    2b6e:	cb 01       	movw	r24, r22
    2b70:	8e 01       	movw	r16, r28
    2b72:	0f 56       	subi	r16, 0x6F	; 111
    2b74:	1f 4f       	sbci	r17, 0xFF	; 255
    2b76:	bc 01       	movw	r22, r24
    2b78:	cd 01       	movw	r24, r26
    2b7a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b7e:	dc 01       	movw	r26, r24
    2b80:	cb 01       	movw	r24, r22
    2b82:	f8 01       	movw	r30, r16
    2b84:	91 83       	std	Z+1, r25	; 0x01
    2b86:	80 83       	st	Z, r24
    2b88:	1f c0       	rjmp	.+62     	; 0x2bc8 <main+0x183e>
    2b8a:	fe 01       	movw	r30, r28
    2b8c:	e1 57       	subi	r30, 0x71	; 113
    2b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b90:	89 e1       	ldi	r24, 0x19	; 25
    2b92:	90 e0       	ldi	r25, 0x00	; 0
    2b94:	91 83       	std	Z+1, r25	; 0x01
    2b96:	80 83       	st	Z, r24
    2b98:	fe 01       	movw	r30, r28
    2b9a:	e1 57       	subi	r30, 0x71	; 113
    2b9c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b9e:	80 81       	ld	r24, Z
    2ba0:	91 81       	ldd	r25, Z+1	; 0x01
    2ba2:	01 97       	sbiw	r24, 0x01	; 1
    2ba4:	f1 f7       	brne	.-4      	; 0x2ba2 <main+0x1818>
    2ba6:	fe 01       	movw	r30, r28
    2ba8:	e1 57       	subi	r30, 0x71	; 113
    2baa:	ff 4f       	sbci	r31, 0xFF	; 255
    2bac:	91 83       	std	Z+1, r25	; 0x01
    2bae:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bb0:	de 01       	movw	r26, r28
    2bb2:	af 56       	subi	r26, 0x6F	; 111
    2bb4:	bf 4f       	sbci	r27, 0xFF	; 255
    2bb6:	fe 01       	movw	r30, r28
    2bb8:	ef 56       	subi	r30, 0x6F	; 111
    2bba:	ff 4f       	sbci	r31, 0xFF	; 255
    2bbc:	80 81       	ld	r24, Z
    2bbe:	91 81       	ldd	r25, Z+1	; 0x01
    2bc0:	01 97       	sbiw	r24, 0x01	; 1
    2bc2:	11 96       	adiw	r26, 0x01	; 1
    2bc4:	9c 93       	st	X, r25
    2bc6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bc8:	fe 01       	movw	r30, r28
    2bca:	ef 56       	subi	r30, 0x6F	; 111
    2bcc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bce:	80 81       	ld	r24, Z
    2bd0:	91 81       	ldd	r25, Z+1	; 0x01
    2bd2:	00 97       	sbiw	r24, 0x00	; 0
    2bd4:	d1 f6       	brne	.-76     	; 0x2b8a <main+0x1800>
    2bd6:	27 c0       	rjmp	.+78     	; 0x2c26 <main+0x189c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bd8:	8e 01       	movw	r16, r28
    2bda:	0f 56       	subi	r16, 0x6F	; 111
    2bdc:	1f 4f       	sbci	r17, 0xFF	; 255
    2bde:	fe 01       	movw	r30, r28
    2be0:	ed 56       	subi	r30, 0x6D	; 109
    2be2:	ff 4f       	sbci	r31, 0xFF	; 255
    2be4:	60 81       	ld	r22, Z
    2be6:	71 81       	ldd	r23, Z+1	; 0x01
    2be8:	82 81       	ldd	r24, Z+2	; 0x02
    2bea:	93 81       	ldd	r25, Z+3	; 0x03
    2bec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bf0:	dc 01       	movw	r26, r24
    2bf2:	cb 01       	movw	r24, r22
    2bf4:	f8 01       	movw	r30, r16
    2bf6:	91 83       	std	Z+1, r25	; 0x01
    2bf8:	80 83       	st	Z, r24
    2bfa:	de 01       	movw	r26, r28
    2bfc:	a3 57       	subi	r26, 0x73	; 115
    2bfe:	bf 4f       	sbci	r27, 0xFF	; 255
    2c00:	fe 01       	movw	r30, r28
    2c02:	ef 56       	subi	r30, 0x6F	; 111
    2c04:	ff 4f       	sbci	r31, 0xFF	; 255
    2c06:	80 81       	ld	r24, Z
    2c08:	91 81       	ldd	r25, Z+1	; 0x01
    2c0a:	8d 93       	st	X+, r24
    2c0c:	9c 93       	st	X, r25
    2c0e:	fe 01       	movw	r30, r28
    2c10:	e3 57       	subi	r30, 0x73	; 115
    2c12:	ff 4f       	sbci	r31, 0xFF	; 255
    2c14:	80 81       	ld	r24, Z
    2c16:	91 81       	ldd	r25, Z+1	; 0x01
    2c18:	01 97       	sbiw	r24, 0x01	; 1
    2c1a:	f1 f7       	brne	.-4      	; 0x2c18 <main+0x188e>
    2c1c:	fe 01       	movw	r30, r28
    2c1e:	e3 57       	subi	r30, 0x73	; 115
    2c20:	ff 4f       	sbci	r31, 0xFF	; 255
    2c22:	91 83       	std	Z+1, r25	; 0x01
    2c24:	80 83       	st	Z, r24
			_delay_ms(3000);
			LED_voidOff(LED1);
    2c26:	fe 01       	movw	r30, r28
    2c28:	e8 5d       	subi	r30, 0xD8	; 216
    2c2a:	fe 4f       	sbci	r31, 0xFE	; 254
    2c2c:	60 81       	ld	r22, Z
    2c2e:	71 81       	ldd	r23, Z+1	; 0x01
    2c30:	82 81       	ldd	r24, Z+2	; 0x02
    2c32:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
    2c36:	fe 01       	movw	r30, r28
    2c38:	e7 57       	subi	r30, 0x77	; 119
    2c3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c3c:	80 e0       	ldi	r24, 0x00	; 0
    2c3e:	90 e8       	ldi	r25, 0x80	; 128
    2c40:	ab e3       	ldi	r26, 0x3B	; 59
    2c42:	b5 e4       	ldi	r27, 0x45	; 69
    2c44:	80 83       	st	Z, r24
    2c46:	91 83       	std	Z+1, r25	; 0x01
    2c48:	a2 83       	std	Z+2, r26	; 0x02
    2c4a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c4c:	8e 01       	movw	r16, r28
    2c4e:	0b 57       	subi	r16, 0x7B	; 123
    2c50:	1f 4f       	sbci	r17, 0xFF	; 255
    2c52:	fe 01       	movw	r30, r28
    2c54:	e7 57       	subi	r30, 0x77	; 119
    2c56:	ff 4f       	sbci	r31, 0xFF	; 255
    2c58:	60 81       	ld	r22, Z
    2c5a:	71 81       	ldd	r23, Z+1	; 0x01
    2c5c:	82 81       	ldd	r24, Z+2	; 0x02
    2c5e:	93 81       	ldd	r25, Z+3	; 0x03
    2c60:	20 e0       	ldi	r18, 0x00	; 0
    2c62:	30 e0       	ldi	r19, 0x00	; 0
    2c64:	4a e7       	ldi	r20, 0x7A	; 122
    2c66:	53 e4       	ldi	r21, 0x43	; 67
    2c68:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c6c:	dc 01       	movw	r26, r24
    2c6e:	cb 01       	movw	r24, r22
    2c70:	f8 01       	movw	r30, r16
    2c72:	80 83       	st	Z, r24
    2c74:	91 83       	std	Z+1, r25	; 0x01
    2c76:	a2 83       	std	Z+2, r26	; 0x02
    2c78:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c7a:	fe 01       	movw	r30, r28
    2c7c:	eb 57       	subi	r30, 0x7B	; 123
    2c7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c80:	60 81       	ld	r22, Z
    2c82:	71 81       	ldd	r23, Z+1	; 0x01
    2c84:	82 81       	ldd	r24, Z+2	; 0x02
    2c86:	93 81       	ldd	r25, Z+3	; 0x03
    2c88:	20 e0       	ldi	r18, 0x00	; 0
    2c8a:	30 e0       	ldi	r19, 0x00	; 0
    2c8c:	40 e8       	ldi	r20, 0x80	; 128
    2c8e:	5f e3       	ldi	r21, 0x3F	; 63
    2c90:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2c94:	88 23       	and	r24, r24
    2c96:	44 f4       	brge	.+16     	; 0x2ca8 <main+0x191e>
		__ticks = 1;
    2c98:	fe 01       	movw	r30, r28
    2c9a:	ed 57       	subi	r30, 0x7D	; 125
    2c9c:	ff 4f       	sbci	r31, 0xFF	; 255
    2c9e:	81 e0       	ldi	r24, 0x01	; 1
    2ca0:	90 e0       	ldi	r25, 0x00	; 0
    2ca2:	91 83       	std	Z+1, r25	; 0x01
    2ca4:	80 83       	st	Z, r24
    2ca6:	64 c0       	rjmp	.+200    	; 0x2d70 <main+0x19e6>
	else if (__tmp > 65535)
    2ca8:	fe 01       	movw	r30, r28
    2caa:	eb 57       	subi	r30, 0x7B	; 123
    2cac:	ff 4f       	sbci	r31, 0xFF	; 255
    2cae:	60 81       	ld	r22, Z
    2cb0:	71 81       	ldd	r23, Z+1	; 0x01
    2cb2:	82 81       	ldd	r24, Z+2	; 0x02
    2cb4:	93 81       	ldd	r25, Z+3	; 0x03
    2cb6:	20 e0       	ldi	r18, 0x00	; 0
    2cb8:	3f ef       	ldi	r19, 0xFF	; 255
    2cba:	4f e7       	ldi	r20, 0x7F	; 127
    2cbc:	57 e4       	ldi	r21, 0x47	; 71
    2cbe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2cc2:	18 16       	cp	r1, r24
    2cc4:	0c f0       	brlt	.+2      	; 0x2cc8 <main+0x193e>
    2cc6:	43 c0       	rjmp	.+134    	; 0x2d4e <main+0x19c4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cc8:	fe 01       	movw	r30, r28
    2cca:	e7 57       	subi	r30, 0x77	; 119
    2ccc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cce:	60 81       	ld	r22, Z
    2cd0:	71 81       	ldd	r23, Z+1	; 0x01
    2cd2:	82 81       	ldd	r24, Z+2	; 0x02
    2cd4:	93 81       	ldd	r25, Z+3	; 0x03
    2cd6:	20 e0       	ldi	r18, 0x00	; 0
    2cd8:	30 e0       	ldi	r19, 0x00	; 0
    2cda:	40 e2       	ldi	r20, 0x20	; 32
    2cdc:	51 e4       	ldi	r21, 0x41	; 65
    2cde:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ce2:	dc 01       	movw	r26, r24
    2ce4:	cb 01       	movw	r24, r22
    2ce6:	8e 01       	movw	r16, r28
    2ce8:	0d 57       	subi	r16, 0x7D	; 125
    2cea:	1f 4f       	sbci	r17, 0xFF	; 255
    2cec:	bc 01       	movw	r22, r24
    2cee:	cd 01       	movw	r24, r26
    2cf0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2cf4:	dc 01       	movw	r26, r24
    2cf6:	cb 01       	movw	r24, r22
    2cf8:	f8 01       	movw	r30, r16
    2cfa:	91 83       	std	Z+1, r25	; 0x01
    2cfc:	80 83       	st	Z, r24
    2cfe:	1f c0       	rjmp	.+62     	; 0x2d3e <main+0x19b4>
    2d00:	fe 01       	movw	r30, r28
    2d02:	ef 57       	subi	r30, 0x7F	; 127
    2d04:	ff 4f       	sbci	r31, 0xFF	; 255
    2d06:	89 e1       	ldi	r24, 0x19	; 25
    2d08:	90 e0       	ldi	r25, 0x00	; 0
    2d0a:	91 83       	std	Z+1, r25	; 0x01
    2d0c:	80 83       	st	Z, r24
    2d0e:	fe 01       	movw	r30, r28
    2d10:	ef 57       	subi	r30, 0x7F	; 127
    2d12:	ff 4f       	sbci	r31, 0xFF	; 255
    2d14:	80 81       	ld	r24, Z
    2d16:	91 81       	ldd	r25, Z+1	; 0x01
    2d18:	01 97       	sbiw	r24, 0x01	; 1
    2d1a:	f1 f7       	brne	.-4      	; 0x2d18 <main+0x198e>
    2d1c:	fe 01       	movw	r30, r28
    2d1e:	ef 57       	subi	r30, 0x7F	; 127
    2d20:	ff 4f       	sbci	r31, 0xFF	; 255
    2d22:	91 83       	std	Z+1, r25	; 0x01
    2d24:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d26:	de 01       	movw	r26, r28
    2d28:	ad 57       	subi	r26, 0x7D	; 125
    2d2a:	bf 4f       	sbci	r27, 0xFF	; 255
    2d2c:	fe 01       	movw	r30, r28
    2d2e:	ed 57       	subi	r30, 0x7D	; 125
    2d30:	ff 4f       	sbci	r31, 0xFF	; 255
    2d32:	80 81       	ld	r24, Z
    2d34:	91 81       	ldd	r25, Z+1	; 0x01
    2d36:	01 97       	sbiw	r24, 0x01	; 1
    2d38:	11 96       	adiw	r26, 0x01	; 1
    2d3a:	9c 93       	st	X, r25
    2d3c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d3e:	fe 01       	movw	r30, r28
    2d40:	ed 57       	subi	r30, 0x7D	; 125
    2d42:	ff 4f       	sbci	r31, 0xFF	; 255
    2d44:	80 81       	ld	r24, Z
    2d46:	91 81       	ldd	r25, Z+1	; 0x01
    2d48:	00 97       	sbiw	r24, 0x00	; 0
    2d4a:	d1 f6       	brne	.-76     	; 0x2d00 <main+0x1976>
    2d4c:	47 c4       	rjmp	.+2190   	; 0x35dc <main+0x2252>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d4e:	8e 01       	movw	r16, r28
    2d50:	0d 57       	subi	r16, 0x7D	; 125
    2d52:	1f 4f       	sbci	r17, 0xFF	; 255
    2d54:	fe 01       	movw	r30, r28
    2d56:	eb 57       	subi	r30, 0x7B	; 123
    2d58:	ff 4f       	sbci	r31, 0xFF	; 255
    2d5a:	60 81       	ld	r22, Z
    2d5c:	71 81       	ldd	r23, Z+1	; 0x01
    2d5e:	82 81       	ldd	r24, Z+2	; 0x02
    2d60:	93 81       	ldd	r25, Z+3	; 0x03
    2d62:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d66:	dc 01       	movw	r26, r24
    2d68:	cb 01       	movw	r24, r22
    2d6a:	f8 01       	movw	r30, r16
    2d6c:	91 83       	std	Z+1, r25	; 0x01
    2d6e:	80 83       	st	Z, r24
    2d70:	de 01       	movw	r26, r28
    2d72:	a1 58       	subi	r26, 0x81	; 129
    2d74:	bf 4f       	sbci	r27, 0xFF	; 255
    2d76:	fe 01       	movw	r30, r28
    2d78:	ed 57       	subi	r30, 0x7D	; 125
    2d7a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d7c:	80 81       	ld	r24, Z
    2d7e:	91 81       	ldd	r25, Z+1	; 0x01
    2d80:	11 96       	adiw	r26, 0x01	; 1
    2d82:	9c 93       	st	X, r25
    2d84:	8e 93       	st	-X, r24
    2d86:	fe 01       	movw	r30, r28
    2d88:	e1 58       	subi	r30, 0x81	; 129
    2d8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d8c:	80 81       	ld	r24, Z
    2d8e:	91 81       	ldd	r25, Z+1	; 0x01
    2d90:	01 97       	sbiw	r24, 0x01	; 1
    2d92:	f1 f7       	brne	.-4      	; 0x2d90 <main+0x1a06>
    2d94:	fe 01       	movw	r30, r28
    2d96:	e1 58       	subi	r30, 0x81	; 129
    2d98:	ff 4f       	sbci	r31, 0xFF	; 255
    2d9a:	91 83       	std	Z+1, r25	; 0x01
    2d9c:	80 83       	st	Z, r24
    2d9e:	1e c4       	rjmp	.+2108   	; 0x35dc <main+0x2252>



		}

		else if(button_u8GetPressed(B3)==0)
    2da0:	fe 01       	movw	r30, r28
    2da2:	e1 5e       	subi	r30, 0xE1	; 225
    2da4:	fe 4f       	sbci	r31, 0xFE	; 254
    2da6:	60 81       	ld	r22, Z
    2da8:	71 81       	ldd	r23, Z+1	; 0x01
    2daa:	82 81       	ldd	r24, Z+2	; 0x02
    2dac:	0e 94 c4 1c 	call	0x3988	; 0x3988 <button_u8GetPressed>
    2db0:	88 23       	and	r24, r24
    2db2:	09 f0       	breq	.+2      	; 0x2db6 <main+0x1a2c>
    2db4:	13 c4       	rjmp	.+2086   	; 0x35dc <main+0x2252>
		{
			LED_voidOn(LED1);
    2db6:	fe 01       	movw	r30, r28
    2db8:	e8 5d       	subi	r30, 0xD8	; 216
    2dba:	fe 4f       	sbci	r31, 0xFE	; 254
    2dbc:	60 81       	ld	r22, Z
    2dbe:	71 81       	ldd	r23, Z+1	; 0x01
    2dc0:	82 81       	ldd	r24, Z+2	; 0x02
    2dc2:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
			LED_voidOn(LED6);
    2dc6:	fe 01       	movw	r30, r28
    2dc8:	ec 5c       	subi	r30, 0xCC	; 204
    2dca:	fe 4f       	sbci	r31, 0xFE	; 254
    2dcc:	60 81       	ld	r22, Z
    2dce:	71 81       	ldd	r23, Z+1	; 0x01
    2dd0:	82 81       	ldd	r24, Z+2	; 0x02
    2dd2:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
    2dd6:	fe 01       	movw	r30, r28
    2dd8:	e5 58       	subi	r30, 0x85	; 133
    2dda:	ff 4f       	sbci	r31, 0xFF	; 255
    2ddc:	80 e0       	ldi	r24, 0x00	; 0
    2dde:	90 e8       	ldi	r25, 0x80	; 128
    2de0:	ab e3       	ldi	r26, 0x3B	; 59
    2de2:	b5 e4       	ldi	r27, 0x45	; 69
    2de4:	80 83       	st	Z, r24
    2de6:	91 83       	std	Z+1, r25	; 0x01
    2de8:	a2 83       	std	Z+2, r26	; 0x02
    2dea:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2dec:	8e 01       	movw	r16, r28
    2dee:	09 58       	subi	r16, 0x89	; 137
    2df0:	1f 4f       	sbci	r17, 0xFF	; 255
    2df2:	fe 01       	movw	r30, r28
    2df4:	e5 58       	subi	r30, 0x85	; 133
    2df6:	ff 4f       	sbci	r31, 0xFF	; 255
    2df8:	60 81       	ld	r22, Z
    2dfa:	71 81       	ldd	r23, Z+1	; 0x01
    2dfc:	82 81       	ldd	r24, Z+2	; 0x02
    2dfe:	93 81       	ldd	r25, Z+3	; 0x03
    2e00:	20 e0       	ldi	r18, 0x00	; 0
    2e02:	30 e0       	ldi	r19, 0x00	; 0
    2e04:	4a e7       	ldi	r20, 0x7A	; 122
    2e06:	53 e4       	ldi	r21, 0x43	; 67
    2e08:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e0c:	dc 01       	movw	r26, r24
    2e0e:	cb 01       	movw	r24, r22
    2e10:	f8 01       	movw	r30, r16
    2e12:	80 83       	st	Z, r24
    2e14:	91 83       	std	Z+1, r25	; 0x01
    2e16:	a2 83       	std	Z+2, r26	; 0x02
    2e18:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e1a:	fe 01       	movw	r30, r28
    2e1c:	e9 58       	subi	r30, 0x89	; 137
    2e1e:	ff 4f       	sbci	r31, 0xFF	; 255
    2e20:	60 81       	ld	r22, Z
    2e22:	71 81       	ldd	r23, Z+1	; 0x01
    2e24:	82 81       	ldd	r24, Z+2	; 0x02
    2e26:	93 81       	ldd	r25, Z+3	; 0x03
    2e28:	20 e0       	ldi	r18, 0x00	; 0
    2e2a:	30 e0       	ldi	r19, 0x00	; 0
    2e2c:	40 e8       	ldi	r20, 0x80	; 128
    2e2e:	5f e3       	ldi	r21, 0x3F	; 63
    2e30:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2e34:	88 23       	and	r24, r24
    2e36:	44 f4       	brge	.+16     	; 0x2e48 <main+0x1abe>
		__ticks = 1;
    2e38:	fe 01       	movw	r30, r28
    2e3a:	eb 58       	subi	r30, 0x8B	; 139
    2e3c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e3e:	81 e0       	ldi	r24, 0x01	; 1
    2e40:	90 e0       	ldi	r25, 0x00	; 0
    2e42:	91 83       	std	Z+1, r25	; 0x01
    2e44:	80 83       	st	Z, r24
    2e46:	64 c0       	rjmp	.+200    	; 0x2f10 <main+0x1b86>
	else if (__tmp > 65535)
    2e48:	fe 01       	movw	r30, r28
    2e4a:	e9 58       	subi	r30, 0x89	; 137
    2e4c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e4e:	60 81       	ld	r22, Z
    2e50:	71 81       	ldd	r23, Z+1	; 0x01
    2e52:	82 81       	ldd	r24, Z+2	; 0x02
    2e54:	93 81       	ldd	r25, Z+3	; 0x03
    2e56:	20 e0       	ldi	r18, 0x00	; 0
    2e58:	3f ef       	ldi	r19, 0xFF	; 255
    2e5a:	4f e7       	ldi	r20, 0x7F	; 127
    2e5c:	57 e4       	ldi	r21, 0x47	; 71
    2e5e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2e62:	18 16       	cp	r1, r24
    2e64:	0c f0       	brlt	.+2      	; 0x2e68 <main+0x1ade>
    2e66:	43 c0       	rjmp	.+134    	; 0x2eee <main+0x1b64>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e68:	fe 01       	movw	r30, r28
    2e6a:	e5 58       	subi	r30, 0x85	; 133
    2e6c:	ff 4f       	sbci	r31, 0xFF	; 255
    2e6e:	60 81       	ld	r22, Z
    2e70:	71 81       	ldd	r23, Z+1	; 0x01
    2e72:	82 81       	ldd	r24, Z+2	; 0x02
    2e74:	93 81       	ldd	r25, Z+3	; 0x03
    2e76:	20 e0       	ldi	r18, 0x00	; 0
    2e78:	30 e0       	ldi	r19, 0x00	; 0
    2e7a:	40 e2       	ldi	r20, 0x20	; 32
    2e7c:	51 e4       	ldi	r21, 0x41	; 65
    2e7e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e82:	dc 01       	movw	r26, r24
    2e84:	cb 01       	movw	r24, r22
    2e86:	8e 01       	movw	r16, r28
    2e88:	0b 58       	subi	r16, 0x8B	; 139
    2e8a:	1f 4f       	sbci	r17, 0xFF	; 255
    2e8c:	bc 01       	movw	r22, r24
    2e8e:	cd 01       	movw	r24, r26
    2e90:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e94:	dc 01       	movw	r26, r24
    2e96:	cb 01       	movw	r24, r22
    2e98:	f8 01       	movw	r30, r16
    2e9a:	91 83       	std	Z+1, r25	; 0x01
    2e9c:	80 83       	st	Z, r24
    2e9e:	1f c0       	rjmp	.+62     	; 0x2ede <main+0x1b54>
    2ea0:	fe 01       	movw	r30, r28
    2ea2:	ed 58       	subi	r30, 0x8D	; 141
    2ea4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ea6:	89 e1       	ldi	r24, 0x19	; 25
    2ea8:	90 e0       	ldi	r25, 0x00	; 0
    2eaa:	91 83       	std	Z+1, r25	; 0x01
    2eac:	80 83       	st	Z, r24
    2eae:	fe 01       	movw	r30, r28
    2eb0:	ed 58       	subi	r30, 0x8D	; 141
    2eb2:	ff 4f       	sbci	r31, 0xFF	; 255
    2eb4:	80 81       	ld	r24, Z
    2eb6:	91 81       	ldd	r25, Z+1	; 0x01
    2eb8:	01 97       	sbiw	r24, 0x01	; 1
    2eba:	f1 f7       	brne	.-4      	; 0x2eb8 <main+0x1b2e>
    2ebc:	fe 01       	movw	r30, r28
    2ebe:	ed 58       	subi	r30, 0x8D	; 141
    2ec0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec2:	91 83       	std	Z+1, r25	; 0x01
    2ec4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ec6:	de 01       	movw	r26, r28
    2ec8:	ab 58       	subi	r26, 0x8B	; 139
    2eca:	bf 4f       	sbci	r27, 0xFF	; 255
    2ecc:	fe 01       	movw	r30, r28
    2ece:	eb 58       	subi	r30, 0x8B	; 139
    2ed0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ed2:	80 81       	ld	r24, Z
    2ed4:	91 81       	ldd	r25, Z+1	; 0x01
    2ed6:	01 97       	sbiw	r24, 0x01	; 1
    2ed8:	11 96       	adiw	r26, 0x01	; 1
    2eda:	9c 93       	st	X, r25
    2edc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ede:	fe 01       	movw	r30, r28
    2ee0:	eb 58       	subi	r30, 0x8B	; 139
    2ee2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ee4:	80 81       	ld	r24, Z
    2ee6:	91 81       	ldd	r25, Z+1	; 0x01
    2ee8:	00 97       	sbiw	r24, 0x00	; 0
    2eea:	d1 f6       	brne	.-76     	; 0x2ea0 <main+0x1b16>
    2eec:	27 c0       	rjmp	.+78     	; 0x2f3c <main+0x1bb2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2eee:	8e 01       	movw	r16, r28
    2ef0:	0b 58       	subi	r16, 0x8B	; 139
    2ef2:	1f 4f       	sbci	r17, 0xFF	; 255
    2ef4:	fe 01       	movw	r30, r28
    2ef6:	e9 58       	subi	r30, 0x89	; 137
    2ef8:	ff 4f       	sbci	r31, 0xFF	; 255
    2efa:	60 81       	ld	r22, Z
    2efc:	71 81       	ldd	r23, Z+1	; 0x01
    2efe:	82 81       	ldd	r24, Z+2	; 0x02
    2f00:	93 81       	ldd	r25, Z+3	; 0x03
    2f02:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f06:	dc 01       	movw	r26, r24
    2f08:	cb 01       	movw	r24, r22
    2f0a:	f8 01       	movw	r30, r16
    2f0c:	91 83       	std	Z+1, r25	; 0x01
    2f0e:	80 83       	st	Z, r24
    2f10:	de 01       	movw	r26, r28
    2f12:	af 58       	subi	r26, 0x8F	; 143
    2f14:	bf 4f       	sbci	r27, 0xFF	; 255
    2f16:	fe 01       	movw	r30, r28
    2f18:	eb 58       	subi	r30, 0x8B	; 139
    2f1a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f1c:	80 81       	ld	r24, Z
    2f1e:	91 81       	ldd	r25, Z+1	; 0x01
    2f20:	8d 93       	st	X+, r24
    2f22:	9c 93       	st	X, r25
    2f24:	fe 01       	movw	r30, r28
    2f26:	ef 58       	subi	r30, 0x8F	; 143
    2f28:	ff 4f       	sbci	r31, 0xFF	; 255
    2f2a:	80 81       	ld	r24, Z
    2f2c:	91 81       	ldd	r25, Z+1	; 0x01
    2f2e:	01 97       	sbiw	r24, 0x01	; 1
    2f30:	f1 f7       	brne	.-4      	; 0x2f2e <main+0x1ba4>
    2f32:	fe 01       	movw	r30, r28
    2f34:	ef 58       	subi	r30, 0x8F	; 143
    2f36:	ff 4f       	sbci	r31, 0xFF	; 255
    2f38:	91 83       	std	Z+1, r25	; 0x01
    2f3a:	80 83       	st	Z, r24
			_delay_ms(3000);
			LED_voidOn(LED2);
    2f3c:	fe 01       	movw	r30, r28
    2f3e:	e5 5d       	subi	r30, 0xD5	; 213
    2f40:	fe 4f       	sbci	r31, 0xFE	; 254
    2f42:	60 81       	ld	r22, Z
    2f44:	71 81       	ldd	r23, Z+1	; 0x01
    2f46:	82 81       	ldd	r24, Z+2	; 0x02
    2f48:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
			LED_voidOn(LED5);
    2f4c:	fe 01       	movw	r30, r28
    2f4e:	ef 5c       	subi	r30, 0xCF	; 207
    2f50:	fe 4f       	sbci	r31, 0xFE	; 254
    2f52:	60 81       	ld	r22, Z
    2f54:	71 81       	ldd	r23, Z+1	; 0x01
    2f56:	82 81       	ldd	r24, Z+2	; 0x02
    2f58:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
    2f5c:	fe 01       	movw	r30, r28
    2f5e:	e3 59       	subi	r30, 0x93	; 147
    2f60:	ff 4f       	sbci	r31, 0xFF	; 255
    2f62:	80 e0       	ldi	r24, 0x00	; 0
    2f64:	90 e8       	ldi	r25, 0x80	; 128
    2f66:	ab e3       	ldi	r26, 0x3B	; 59
    2f68:	b5 e4       	ldi	r27, 0x45	; 69
    2f6a:	80 83       	st	Z, r24
    2f6c:	91 83       	std	Z+1, r25	; 0x01
    2f6e:	a2 83       	std	Z+2, r26	; 0x02
    2f70:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f72:	8e 01       	movw	r16, r28
    2f74:	07 59       	subi	r16, 0x97	; 151
    2f76:	1f 4f       	sbci	r17, 0xFF	; 255
    2f78:	fe 01       	movw	r30, r28
    2f7a:	e3 59       	subi	r30, 0x93	; 147
    2f7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f7e:	60 81       	ld	r22, Z
    2f80:	71 81       	ldd	r23, Z+1	; 0x01
    2f82:	82 81       	ldd	r24, Z+2	; 0x02
    2f84:	93 81       	ldd	r25, Z+3	; 0x03
    2f86:	20 e0       	ldi	r18, 0x00	; 0
    2f88:	30 e0       	ldi	r19, 0x00	; 0
    2f8a:	4a e7       	ldi	r20, 0x7A	; 122
    2f8c:	53 e4       	ldi	r21, 0x43	; 67
    2f8e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f92:	dc 01       	movw	r26, r24
    2f94:	cb 01       	movw	r24, r22
    2f96:	f8 01       	movw	r30, r16
    2f98:	80 83       	st	Z, r24
    2f9a:	91 83       	std	Z+1, r25	; 0x01
    2f9c:	a2 83       	std	Z+2, r26	; 0x02
    2f9e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2fa0:	fe 01       	movw	r30, r28
    2fa2:	e7 59       	subi	r30, 0x97	; 151
    2fa4:	ff 4f       	sbci	r31, 0xFF	; 255
    2fa6:	60 81       	ld	r22, Z
    2fa8:	71 81       	ldd	r23, Z+1	; 0x01
    2faa:	82 81       	ldd	r24, Z+2	; 0x02
    2fac:	93 81       	ldd	r25, Z+3	; 0x03
    2fae:	20 e0       	ldi	r18, 0x00	; 0
    2fb0:	30 e0       	ldi	r19, 0x00	; 0
    2fb2:	40 e8       	ldi	r20, 0x80	; 128
    2fb4:	5f e3       	ldi	r21, 0x3F	; 63
    2fb6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2fba:	88 23       	and	r24, r24
    2fbc:	44 f4       	brge	.+16     	; 0x2fce <main+0x1c44>
		__ticks = 1;
    2fbe:	fe 01       	movw	r30, r28
    2fc0:	e9 59       	subi	r30, 0x99	; 153
    2fc2:	ff 4f       	sbci	r31, 0xFF	; 255
    2fc4:	81 e0       	ldi	r24, 0x01	; 1
    2fc6:	90 e0       	ldi	r25, 0x00	; 0
    2fc8:	91 83       	std	Z+1, r25	; 0x01
    2fca:	80 83       	st	Z, r24
    2fcc:	64 c0       	rjmp	.+200    	; 0x3096 <main+0x1d0c>
	else if (__tmp > 65535)
    2fce:	fe 01       	movw	r30, r28
    2fd0:	e7 59       	subi	r30, 0x97	; 151
    2fd2:	ff 4f       	sbci	r31, 0xFF	; 255
    2fd4:	60 81       	ld	r22, Z
    2fd6:	71 81       	ldd	r23, Z+1	; 0x01
    2fd8:	82 81       	ldd	r24, Z+2	; 0x02
    2fda:	93 81       	ldd	r25, Z+3	; 0x03
    2fdc:	20 e0       	ldi	r18, 0x00	; 0
    2fde:	3f ef       	ldi	r19, 0xFF	; 255
    2fe0:	4f e7       	ldi	r20, 0x7F	; 127
    2fe2:	57 e4       	ldi	r21, 0x47	; 71
    2fe4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2fe8:	18 16       	cp	r1, r24
    2fea:	0c f0       	brlt	.+2      	; 0x2fee <main+0x1c64>
    2fec:	43 c0       	rjmp	.+134    	; 0x3074 <main+0x1cea>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fee:	fe 01       	movw	r30, r28
    2ff0:	e3 59       	subi	r30, 0x93	; 147
    2ff2:	ff 4f       	sbci	r31, 0xFF	; 255
    2ff4:	60 81       	ld	r22, Z
    2ff6:	71 81       	ldd	r23, Z+1	; 0x01
    2ff8:	82 81       	ldd	r24, Z+2	; 0x02
    2ffa:	93 81       	ldd	r25, Z+3	; 0x03
    2ffc:	20 e0       	ldi	r18, 0x00	; 0
    2ffe:	30 e0       	ldi	r19, 0x00	; 0
    3000:	40 e2       	ldi	r20, 0x20	; 32
    3002:	51 e4       	ldi	r21, 0x41	; 65
    3004:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3008:	dc 01       	movw	r26, r24
    300a:	cb 01       	movw	r24, r22
    300c:	8e 01       	movw	r16, r28
    300e:	09 59       	subi	r16, 0x99	; 153
    3010:	1f 4f       	sbci	r17, 0xFF	; 255
    3012:	bc 01       	movw	r22, r24
    3014:	cd 01       	movw	r24, r26
    3016:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    301a:	dc 01       	movw	r26, r24
    301c:	cb 01       	movw	r24, r22
    301e:	f8 01       	movw	r30, r16
    3020:	91 83       	std	Z+1, r25	; 0x01
    3022:	80 83       	st	Z, r24
    3024:	1f c0       	rjmp	.+62     	; 0x3064 <main+0x1cda>
    3026:	fe 01       	movw	r30, r28
    3028:	eb 59       	subi	r30, 0x9B	; 155
    302a:	ff 4f       	sbci	r31, 0xFF	; 255
    302c:	89 e1       	ldi	r24, 0x19	; 25
    302e:	90 e0       	ldi	r25, 0x00	; 0
    3030:	91 83       	std	Z+1, r25	; 0x01
    3032:	80 83       	st	Z, r24
    3034:	fe 01       	movw	r30, r28
    3036:	eb 59       	subi	r30, 0x9B	; 155
    3038:	ff 4f       	sbci	r31, 0xFF	; 255
    303a:	80 81       	ld	r24, Z
    303c:	91 81       	ldd	r25, Z+1	; 0x01
    303e:	01 97       	sbiw	r24, 0x01	; 1
    3040:	f1 f7       	brne	.-4      	; 0x303e <main+0x1cb4>
    3042:	fe 01       	movw	r30, r28
    3044:	eb 59       	subi	r30, 0x9B	; 155
    3046:	ff 4f       	sbci	r31, 0xFF	; 255
    3048:	91 83       	std	Z+1, r25	; 0x01
    304a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    304c:	de 01       	movw	r26, r28
    304e:	a9 59       	subi	r26, 0x99	; 153
    3050:	bf 4f       	sbci	r27, 0xFF	; 255
    3052:	fe 01       	movw	r30, r28
    3054:	e9 59       	subi	r30, 0x99	; 153
    3056:	ff 4f       	sbci	r31, 0xFF	; 255
    3058:	80 81       	ld	r24, Z
    305a:	91 81       	ldd	r25, Z+1	; 0x01
    305c:	01 97       	sbiw	r24, 0x01	; 1
    305e:	11 96       	adiw	r26, 0x01	; 1
    3060:	9c 93       	st	X, r25
    3062:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3064:	fe 01       	movw	r30, r28
    3066:	e9 59       	subi	r30, 0x99	; 153
    3068:	ff 4f       	sbci	r31, 0xFF	; 255
    306a:	80 81       	ld	r24, Z
    306c:	91 81       	ldd	r25, Z+1	; 0x01
    306e:	00 97       	sbiw	r24, 0x00	; 0
    3070:	d1 f6       	brne	.-76     	; 0x3026 <main+0x1c9c>
    3072:	27 c0       	rjmp	.+78     	; 0x30c2 <main+0x1d38>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3074:	8e 01       	movw	r16, r28
    3076:	09 59       	subi	r16, 0x99	; 153
    3078:	1f 4f       	sbci	r17, 0xFF	; 255
    307a:	fe 01       	movw	r30, r28
    307c:	e7 59       	subi	r30, 0x97	; 151
    307e:	ff 4f       	sbci	r31, 0xFF	; 255
    3080:	60 81       	ld	r22, Z
    3082:	71 81       	ldd	r23, Z+1	; 0x01
    3084:	82 81       	ldd	r24, Z+2	; 0x02
    3086:	93 81       	ldd	r25, Z+3	; 0x03
    3088:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    308c:	dc 01       	movw	r26, r24
    308e:	cb 01       	movw	r24, r22
    3090:	f8 01       	movw	r30, r16
    3092:	91 83       	std	Z+1, r25	; 0x01
    3094:	80 83       	st	Z, r24
    3096:	de 01       	movw	r26, r28
    3098:	ad 59       	subi	r26, 0x9D	; 157
    309a:	bf 4f       	sbci	r27, 0xFF	; 255
    309c:	fe 01       	movw	r30, r28
    309e:	e9 59       	subi	r30, 0x99	; 153
    30a0:	ff 4f       	sbci	r31, 0xFF	; 255
    30a2:	80 81       	ld	r24, Z
    30a4:	91 81       	ldd	r25, Z+1	; 0x01
    30a6:	8d 93       	st	X+, r24
    30a8:	9c 93       	st	X, r25
    30aa:	fe 01       	movw	r30, r28
    30ac:	ed 59       	subi	r30, 0x9D	; 157
    30ae:	ff 4f       	sbci	r31, 0xFF	; 255
    30b0:	80 81       	ld	r24, Z
    30b2:	91 81       	ldd	r25, Z+1	; 0x01
    30b4:	01 97       	sbiw	r24, 0x01	; 1
    30b6:	f1 f7       	brne	.-4      	; 0x30b4 <main+0x1d2a>
    30b8:	fe 01       	movw	r30, r28
    30ba:	ed 59       	subi	r30, 0x9D	; 157
    30bc:	ff 4f       	sbci	r31, 0xFF	; 255
    30be:	91 83       	std	Z+1, r25	; 0x01
    30c0:	80 83       	st	Z, r24
			_delay_ms(3000);
			LED_voidOn(LED3);
    30c2:	fe 01       	movw	r30, r28
    30c4:	e2 5d       	subi	r30, 0xD2	; 210
    30c6:	fe 4f       	sbci	r31, 0xFE	; 254
    30c8:	60 81       	ld	r22, Z
    30ca:	71 81       	ldd	r23, Z+1	; 0x01
    30cc:	82 81       	ldd	r24, Z+2	; 0x02
    30ce:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
    30d2:	fe 01       	movw	r30, r28
    30d4:	e1 5a       	subi	r30, 0xA1	; 161
    30d6:	ff 4f       	sbci	r31, 0xFF	; 255
    30d8:	80 e0       	ldi	r24, 0x00	; 0
    30da:	90 e6       	ldi	r25, 0x60	; 96
    30dc:	aa ee       	ldi	r26, 0xEA	; 234
    30de:	b6 e4       	ldi	r27, 0x46	; 70
    30e0:	80 83       	st	Z, r24
    30e2:	91 83       	std	Z+1, r25	; 0x01
    30e4:	a2 83       	std	Z+2, r26	; 0x02
    30e6:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30e8:	8e 01       	movw	r16, r28
    30ea:	05 5a       	subi	r16, 0xA5	; 165
    30ec:	1f 4f       	sbci	r17, 0xFF	; 255
    30ee:	fe 01       	movw	r30, r28
    30f0:	e1 5a       	subi	r30, 0xA1	; 161
    30f2:	ff 4f       	sbci	r31, 0xFF	; 255
    30f4:	60 81       	ld	r22, Z
    30f6:	71 81       	ldd	r23, Z+1	; 0x01
    30f8:	82 81       	ldd	r24, Z+2	; 0x02
    30fa:	93 81       	ldd	r25, Z+3	; 0x03
    30fc:	20 e0       	ldi	r18, 0x00	; 0
    30fe:	30 e0       	ldi	r19, 0x00	; 0
    3100:	4a e7       	ldi	r20, 0x7A	; 122
    3102:	53 e4       	ldi	r21, 0x43	; 67
    3104:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3108:	dc 01       	movw	r26, r24
    310a:	cb 01       	movw	r24, r22
    310c:	f8 01       	movw	r30, r16
    310e:	80 83       	st	Z, r24
    3110:	91 83       	std	Z+1, r25	; 0x01
    3112:	a2 83       	std	Z+2, r26	; 0x02
    3114:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3116:	fe 01       	movw	r30, r28
    3118:	e5 5a       	subi	r30, 0xA5	; 165
    311a:	ff 4f       	sbci	r31, 0xFF	; 255
    311c:	60 81       	ld	r22, Z
    311e:	71 81       	ldd	r23, Z+1	; 0x01
    3120:	82 81       	ldd	r24, Z+2	; 0x02
    3122:	93 81       	ldd	r25, Z+3	; 0x03
    3124:	20 e0       	ldi	r18, 0x00	; 0
    3126:	30 e0       	ldi	r19, 0x00	; 0
    3128:	40 e8       	ldi	r20, 0x80	; 128
    312a:	5f e3       	ldi	r21, 0x3F	; 63
    312c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3130:	88 23       	and	r24, r24
    3132:	44 f4       	brge	.+16     	; 0x3144 <main+0x1dba>
		__ticks = 1;
    3134:	fe 01       	movw	r30, r28
    3136:	e7 5a       	subi	r30, 0xA7	; 167
    3138:	ff 4f       	sbci	r31, 0xFF	; 255
    313a:	81 e0       	ldi	r24, 0x01	; 1
    313c:	90 e0       	ldi	r25, 0x00	; 0
    313e:	91 83       	std	Z+1, r25	; 0x01
    3140:	80 83       	st	Z, r24
    3142:	64 c0       	rjmp	.+200    	; 0x320c <main+0x1e82>
	else if (__tmp > 65535)
    3144:	fe 01       	movw	r30, r28
    3146:	e5 5a       	subi	r30, 0xA5	; 165
    3148:	ff 4f       	sbci	r31, 0xFF	; 255
    314a:	60 81       	ld	r22, Z
    314c:	71 81       	ldd	r23, Z+1	; 0x01
    314e:	82 81       	ldd	r24, Z+2	; 0x02
    3150:	93 81       	ldd	r25, Z+3	; 0x03
    3152:	20 e0       	ldi	r18, 0x00	; 0
    3154:	3f ef       	ldi	r19, 0xFF	; 255
    3156:	4f e7       	ldi	r20, 0x7F	; 127
    3158:	57 e4       	ldi	r21, 0x47	; 71
    315a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    315e:	18 16       	cp	r1, r24
    3160:	0c f0       	brlt	.+2      	; 0x3164 <main+0x1dda>
    3162:	43 c0       	rjmp	.+134    	; 0x31ea <main+0x1e60>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3164:	fe 01       	movw	r30, r28
    3166:	e1 5a       	subi	r30, 0xA1	; 161
    3168:	ff 4f       	sbci	r31, 0xFF	; 255
    316a:	60 81       	ld	r22, Z
    316c:	71 81       	ldd	r23, Z+1	; 0x01
    316e:	82 81       	ldd	r24, Z+2	; 0x02
    3170:	93 81       	ldd	r25, Z+3	; 0x03
    3172:	20 e0       	ldi	r18, 0x00	; 0
    3174:	30 e0       	ldi	r19, 0x00	; 0
    3176:	40 e2       	ldi	r20, 0x20	; 32
    3178:	51 e4       	ldi	r21, 0x41	; 65
    317a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    317e:	dc 01       	movw	r26, r24
    3180:	cb 01       	movw	r24, r22
    3182:	8e 01       	movw	r16, r28
    3184:	07 5a       	subi	r16, 0xA7	; 167
    3186:	1f 4f       	sbci	r17, 0xFF	; 255
    3188:	bc 01       	movw	r22, r24
    318a:	cd 01       	movw	r24, r26
    318c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3190:	dc 01       	movw	r26, r24
    3192:	cb 01       	movw	r24, r22
    3194:	f8 01       	movw	r30, r16
    3196:	91 83       	std	Z+1, r25	; 0x01
    3198:	80 83       	st	Z, r24
    319a:	1f c0       	rjmp	.+62     	; 0x31da <main+0x1e50>
    319c:	fe 01       	movw	r30, r28
    319e:	e9 5a       	subi	r30, 0xA9	; 169
    31a0:	ff 4f       	sbci	r31, 0xFF	; 255
    31a2:	89 e1       	ldi	r24, 0x19	; 25
    31a4:	90 e0       	ldi	r25, 0x00	; 0
    31a6:	91 83       	std	Z+1, r25	; 0x01
    31a8:	80 83       	st	Z, r24
    31aa:	fe 01       	movw	r30, r28
    31ac:	e9 5a       	subi	r30, 0xA9	; 169
    31ae:	ff 4f       	sbci	r31, 0xFF	; 255
    31b0:	80 81       	ld	r24, Z
    31b2:	91 81       	ldd	r25, Z+1	; 0x01
    31b4:	01 97       	sbiw	r24, 0x01	; 1
    31b6:	f1 f7       	brne	.-4      	; 0x31b4 <main+0x1e2a>
    31b8:	fe 01       	movw	r30, r28
    31ba:	e9 5a       	subi	r30, 0xA9	; 169
    31bc:	ff 4f       	sbci	r31, 0xFF	; 255
    31be:	91 83       	std	Z+1, r25	; 0x01
    31c0:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31c2:	de 01       	movw	r26, r28
    31c4:	a7 5a       	subi	r26, 0xA7	; 167
    31c6:	bf 4f       	sbci	r27, 0xFF	; 255
    31c8:	fe 01       	movw	r30, r28
    31ca:	e7 5a       	subi	r30, 0xA7	; 167
    31cc:	ff 4f       	sbci	r31, 0xFF	; 255
    31ce:	80 81       	ld	r24, Z
    31d0:	91 81       	ldd	r25, Z+1	; 0x01
    31d2:	01 97       	sbiw	r24, 0x01	; 1
    31d4:	11 96       	adiw	r26, 0x01	; 1
    31d6:	9c 93       	st	X, r25
    31d8:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31da:	fe 01       	movw	r30, r28
    31dc:	e7 5a       	subi	r30, 0xA7	; 167
    31de:	ff 4f       	sbci	r31, 0xFF	; 255
    31e0:	80 81       	ld	r24, Z
    31e2:	91 81       	ldd	r25, Z+1	; 0x01
    31e4:	00 97       	sbiw	r24, 0x00	; 0
    31e6:	d1 f6       	brne	.-76     	; 0x319c <main+0x1e12>
    31e8:	27 c0       	rjmp	.+78     	; 0x3238 <main+0x1eae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31ea:	8e 01       	movw	r16, r28
    31ec:	07 5a       	subi	r16, 0xA7	; 167
    31ee:	1f 4f       	sbci	r17, 0xFF	; 255
    31f0:	fe 01       	movw	r30, r28
    31f2:	e5 5a       	subi	r30, 0xA5	; 165
    31f4:	ff 4f       	sbci	r31, 0xFF	; 255
    31f6:	60 81       	ld	r22, Z
    31f8:	71 81       	ldd	r23, Z+1	; 0x01
    31fa:	82 81       	ldd	r24, Z+2	; 0x02
    31fc:	93 81       	ldd	r25, Z+3	; 0x03
    31fe:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3202:	dc 01       	movw	r26, r24
    3204:	cb 01       	movw	r24, r22
    3206:	f8 01       	movw	r30, r16
    3208:	91 83       	std	Z+1, r25	; 0x01
    320a:	80 83       	st	Z, r24
    320c:	de 01       	movw	r26, r28
    320e:	ab 5a       	subi	r26, 0xAB	; 171
    3210:	bf 4f       	sbci	r27, 0xFF	; 255
    3212:	fe 01       	movw	r30, r28
    3214:	e7 5a       	subi	r30, 0xA7	; 167
    3216:	ff 4f       	sbci	r31, 0xFF	; 255
    3218:	80 81       	ld	r24, Z
    321a:	91 81       	ldd	r25, Z+1	; 0x01
    321c:	8d 93       	st	X+, r24
    321e:	9c 93       	st	X, r25
    3220:	fe 01       	movw	r30, r28
    3222:	eb 5a       	subi	r30, 0xAB	; 171
    3224:	ff 4f       	sbci	r31, 0xFF	; 255
    3226:	80 81       	ld	r24, Z
    3228:	91 81       	ldd	r25, Z+1	; 0x01
    322a:	01 97       	sbiw	r24, 0x01	; 1
    322c:	f1 f7       	brne	.-4      	; 0x322a <main+0x1ea0>
    322e:	fe 01       	movw	r30, r28
    3230:	eb 5a       	subi	r30, 0xAB	; 171
    3232:	ff 4f       	sbci	r31, 0xFF	; 255
    3234:	91 83       	std	Z+1, r25	; 0x01
    3236:	80 83       	st	Z, r24
			_delay_ms(30000);

			LED_voidOff(LED3);
    3238:	fe 01       	movw	r30, r28
    323a:	e2 5d       	subi	r30, 0xD2	; 210
    323c:	fe 4f       	sbci	r31, 0xFE	; 254
    323e:	60 81       	ld	r22, Z
    3240:	71 81       	ldd	r23, Z+1	; 0x01
    3242:	82 81       	ldd	r24, Z+2	; 0x02
    3244:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
    3248:	fe 01       	movw	r30, r28
    324a:	ef 5a       	subi	r30, 0xAF	; 175
    324c:	ff 4f       	sbci	r31, 0xFF	; 255
    324e:	80 e0       	ldi	r24, 0x00	; 0
    3250:	90 e8       	ldi	r25, 0x80	; 128
    3252:	ab e3       	ldi	r26, 0x3B	; 59
    3254:	b5 e4       	ldi	r27, 0x45	; 69
    3256:	80 83       	st	Z, r24
    3258:	91 83       	std	Z+1, r25	; 0x01
    325a:	a2 83       	std	Z+2, r26	; 0x02
    325c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    325e:	8e 01       	movw	r16, r28
    3260:	03 5b       	subi	r16, 0xB3	; 179
    3262:	1f 4f       	sbci	r17, 0xFF	; 255
    3264:	fe 01       	movw	r30, r28
    3266:	ef 5a       	subi	r30, 0xAF	; 175
    3268:	ff 4f       	sbci	r31, 0xFF	; 255
    326a:	60 81       	ld	r22, Z
    326c:	71 81       	ldd	r23, Z+1	; 0x01
    326e:	82 81       	ldd	r24, Z+2	; 0x02
    3270:	93 81       	ldd	r25, Z+3	; 0x03
    3272:	20 e0       	ldi	r18, 0x00	; 0
    3274:	30 e0       	ldi	r19, 0x00	; 0
    3276:	4a e7       	ldi	r20, 0x7A	; 122
    3278:	53 e4       	ldi	r21, 0x43	; 67
    327a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    327e:	dc 01       	movw	r26, r24
    3280:	cb 01       	movw	r24, r22
    3282:	f8 01       	movw	r30, r16
    3284:	80 83       	st	Z, r24
    3286:	91 83       	std	Z+1, r25	; 0x01
    3288:	a2 83       	std	Z+2, r26	; 0x02
    328a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    328c:	fe 01       	movw	r30, r28
    328e:	e3 5b       	subi	r30, 0xB3	; 179
    3290:	ff 4f       	sbci	r31, 0xFF	; 255
    3292:	60 81       	ld	r22, Z
    3294:	71 81       	ldd	r23, Z+1	; 0x01
    3296:	82 81       	ldd	r24, Z+2	; 0x02
    3298:	93 81       	ldd	r25, Z+3	; 0x03
    329a:	20 e0       	ldi	r18, 0x00	; 0
    329c:	30 e0       	ldi	r19, 0x00	; 0
    329e:	40 e8       	ldi	r20, 0x80	; 128
    32a0:	5f e3       	ldi	r21, 0x3F	; 63
    32a2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    32a6:	88 23       	and	r24, r24
    32a8:	44 f4       	brge	.+16     	; 0x32ba <main+0x1f30>
		__ticks = 1;
    32aa:	fe 01       	movw	r30, r28
    32ac:	e5 5b       	subi	r30, 0xB5	; 181
    32ae:	ff 4f       	sbci	r31, 0xFF	; 255
    32b0:	81 e0       	ldi	r24, 0x01	; 1
    32b2:	90 e0       	ldi	r25, 0x00	; 0
    32b4:	91 83       	std	Z+1, r25	; 0x01
    32b6:	80 83       	st	Z, r24
    32b8:	64 c0       	rjmp	.+200    	; 0x3382 <main+0x1ff8>
	else if (__tmp > 65535)
    32ba:	fe 01       	movw	r30, r28
    32bc:	e3 5b       	subi	r30, 0xB3	; 179
    32be:	ff 4f       	sbci	r31, 0xFF	; 255
    32c0:	60 81       	ld	r22, Z
    32c2:	71 81       	ldd	r23, Z+1	; 0x01
    32c4:	82 81       	ldd	r24, Z+2	; 0x02
    32c6:	93 81       	ldd	r25, Z+3	; 0x03
    32c8:	20 e0       	ldi	r18, 0x00	; 0
    32ca:	3f ef       	ldi	r19, 0xFF	; 255
    32cc:	4f e7       	ldi	r20, 0x7F	; 127
    32ce:	57 e4       	ldi	r21, 0x47	; 71
    32d0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    32d4:	18 16       	cp	r1, r24
    32d6:	0c f0       	brlt	.+2      	; 0x32da <main+0x1f50>
    32d8:	43 c0       	rjmp	.+134    	; 0x3360 <main+0x1fd6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32da:	fe 01       	movw	r30, r28
    32dc:	ef 5a       	subi	r30, 0xAF	; 175
    32de:	ff 4f       	sbci	r31, 0xFF	; 255
    32e0:	60 81       	ld	r22, Z
    32e2:	71 81       	ldd	r23, Z+1	; 0x01
    32e4:	82 81       	ldd	r24, Z+2	; 0x02
    32e6:	93 81       	ldd	r25, Z+3	; 0x03
    32e8:	20 e0       	ldi	r18, 0x00	; 0
    32ea:	30 e0       	ldi	r19, 0x00	; 0
    32ec:	40 e2       	ldi	r20, 0x20	; 32
    32ee:	51 e4       	ldi	r21, 0x41	; 65
    32f0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32f4:	dc 01       	movw	r26, r24
    32f6:	cb 01       	movw	r24, r22
    32f8:	8e 01       	movw	r16, r28
    32fa:	05 5b       	subi	r16, 0xB5	; 181
    32fc:	1f 4f       	sbci	r17, 0xFF	; 255
    32fe:	bc 01       	movw	r22, r24
    3300:	cd 01       	movw	r24, r26
    3302:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3306:	dc 01       	movw	r26, r24
    3308:	cb 01       	movw	r24, r22
    330a:	f8 01       	movw	r30, r16
    330c:	91 83       	std	Z+1, r25	; 0x01
    330e:	80 83       	st	Z, r24
    3310:	1f c0       	rjmp	.+62     	; 0x3350 <main+0x1fc6>
    3312:	fe 01       	movw	r30, r28
    3314:	e7 5b       	subi	r30, 0xB7	; 183
    3316:	ff 4f       	sbci	r31, 0xFF	; 255
    3318:	89 e1       	ldi	r24, 0x19	; 25
    331a:	90 e0       	ldi	r25, 0x00	; 0
    331c:	91 83       	std	Z+1, r25	; 0x01
    331e:	80 83       	st	Z, r24
    3320:	fe 01       	movw	r30, r28
    3322:	e7 5b       	subi	r30, 0xB7	; 183
    3324:	ff 4f       	sbci	r31, 0xFF	; 255
    3326:	80 81       	ld	r24, Z
    3328:	91 81       	ldd	r25, Z+1	; 0x01
    332a:	01 97       	sbiw	r24, 0x01	; 1
    332c:	f1 f7       	brne	.-4      	; 0x332a <main+0x1fa0>
    332e:	fe 01       	movw	r30, r28
    3330:	e7 5b       	subi	r30, 0xB7	; 183
    3332:	ff 4f       	sbci	r31, 0xFF	; 255
    3334:	91 83       	std	Z+1, r25	; 0x01
    3336:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3338:	de 01       	movw	r26, r28
    333a:	a5 5b       	subi	r26, 0xB5	; 181
    333c:	bf 4f       	sbci	r27, 0xFF	; 255
    333e:	fe 01       	movw	r30, r28
    3340:	e5 5b       	subi	r30, 0xB5	; 181
    3342:	ff 4f       	sbci	r31, 0xFF	; 255
    3344:	80 81       	ld	r24, Z
    3346:	91 81       	ldd	r25, Z+1	; 0x01
    3348:	01 97       	sbiw	r24, 0x01	; 1
    334a:	11 96       	adiw	r26, 0x01	; 1
    334c:	9c 93       	st	X, r25
    334e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3350:	fe 01       	movw	r30, r28
    3352:	e5 5b       	subi	r30, 0xB5	; 181
    3354:	ff 4f       	sbci	r31, 0xFF	; 255
    3356:	80 81       	ld	r24, Z
    3358:	91 81       	ldd	r25, Z+1	; 0x01
    335a:	00 97       	sbiw	r24, 0x00	; 0
    335c:	d1 f6       	brne	.-76     	; 0x3312 <main+0x1f88>
    335e:	27 c0       	rjmp	.+78     	; 0x33ae <main+0x2024>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3360:	8e 01       	movw	r16, r28
    3362:	05 5b       	subi	r16, 0xB5	; 181
    3364:	1f 4f       	sbci	r17, 0xFF	; 255
    3366:	fe 01       	movw	r30, r28
    3368:	e3 5b       	subi	r30, 0xB3	; 179
    336a:	ff 4f       	sbci	r31, 0xFF	; 255
    336c:	60 81       	ld	r22, Z
    336e:	71 81       	ldd	r23, Z+1	; 0x01
    3370:	82 81       	ldd	r24, Z+2	; 0x02
    3372:	93 81       	ldd	r25, Z+3	; 0x03
    3374:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3378:	dc 01       	movw	r26, r24
    337a:	cb 01       	movw	r24, r22
    337c:	f8 01       	movw	r30, r16
    337e:	91 83       	std	Z+1, r25	; 0x01
    3380:	80 83       	st	Z, r24
    3382:	de 01       	movw	r26, r28
    3384:	a9 5b       	subi	r26, 0xB9	; 185
    3386:	bf 4f       	sbci	r27, 0xFF	; 255
    3388:	fe 01       	movw	r30, r28
    338a:	e5 5b       	subi	r30, 0xB5	; 181
    338c:	ff 4f       	sbci	r31, 0xFF	; 255
    338e:	80 81       	ld	r24, Z
    3390:	91 81       	ldd	r25, Z+1	; 0x01
    3392:	8d 93       	st	X+, r24
    3394:	9c 93       	st	X, r25
    3396:	fe 01       	movw	r30, r28
    3398:	e9 5b       	subi	r30, 0xB9	; 185
    339a:	ff 4f       	sbci	r31, 0xFF	; 255
    339c:	80 81       	ld	r24, Z
    339e:	91 81       	ldd	r25, Z+1	; 0x01
    33a0:	01 97       	sbiw	r24, 0x01	; 1
    33a2:	f1 f7       	brne	.-4      	; 0x33a0 <main+0x2016>
    33a4:	fe 01       	movw	r30, r28
    33a6:	e9 5b       	subi	r30, 0xB9	; 185
    33a8:	ff 4f       	sbci	r31, 0xFF	; 255
    33aa:	91 83       	std	Z+1, r25	; 0x01
    33ac:	80 83       	st	Z, r24
			_delay_ms(3000);
			LED_voidOff(LED2);
    33ae:	fe 01       	movw	r30, r28
    33b0:	e5 5d       	subi	r30, 0xD5	; 213
    33b2:	fe 4f       	sbci	r31, 0xFE	; 254
    33b4:	60 81       	ld	r22, Z
    33b6:	71 81       	ldd	r23, Z+1	; 0x01
    33b8:	82 81       	ldd	r24, Z+2	; 0x02
    33ba:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
			LED_voidOff(LED5);
    33be:	fe 01       	movw	r30, r28
    33c0:	ef 5c       	subi	r30, 0xCF	; 207
    33c2:	fe 4f       	sbci	r31, 0xFE	; 254
    33c4:	60 81       	ld	r22, Z
    33c6:	71 81       	ldd	r23, Z+1	; 0x01
    33c8:	82 81       	ldd	r24, Z+2	; 0x02
    33ca:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
    33ce:	fe 01       	movw	r30, r28
    33d0:	ed 5b       	subi	r30, 0xBD	; 189
    33d2:	ff 4f       	sbci	r31, 0xFF	; 255
    33d4:	80 e0       	ldi	r24, 0x00	; 0
    33d6:	90 e8       	ldi	r25, 0x80	; 128
    33d8:	ab e3       	ldi	r26, 0x3B	; 59
    33da:	b5 e4       	ldi	r27, 0x45	; 69
    33dc:	80 83       	st	Z, r24
    33de:	91 83       	std	Z+1, r25	; 0x01
    33e0:	a2 83       	std	Z+2, r26	; 0x02
    33e2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33e4:	8e 01       	movw	r16, r28
    33e6:	01 5c       	subi	r16, 0xC1	; 193
    33e8:	1f 4f       	sbci	r17, 0xFF	; 255
    33ea:	fe 01       	movw	r30, r28
    33ec:	ed 5b       	subi	r30, 0xBD	; 189
    33ee:	ff 4f       	sbci	r31, 0xFF	; 255
    33f0:	60 81       	ld	r22, Z
    33f2:	71 81       	ldd	r23, Z+1	; 0x01
    33f4:	82 81       	ldd	r24, Z+2	; 0x02
    33f6:	93 81       	ldd	r25, Z+3	; 0x03
    33f8:	20 e0       	ldi	r18, 0x00	; 0
    33fa:	30 e0       	ldi	r19, 0x00	; 0
    33fc:	4a e7       	ldi	r20, 0x7A	; 122
    33fe:	53 e4       	ldi	r21, 0x43	; 67
    3400:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3404:	dc 01       	movw	r26, r24
    3406:	cb 01       	movw	r24, r22
    3408:	f8 01       	movw	r30, r16
    340a:	80 83       	st	Z, r24
    340c:	91 83       	std	Z+1, r25	; 0x01
    340e:	a2 83       	std	Z+2, r26	; 0x02
    3410:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3412:	fe 01       	movw	r30, r28
    3414:	ff 96       	adiw	r30, 0x3f	; 63
    3416:	60 81       	ld	r22, Z
    3418:	71 81       	ldd	r23, Z+1	; 0x01
    341a:	82 81       	ldd	r24, Z+2	; 0x02
    341c:	93 81       	ldd	r25, Z+3	; 0x03
    341e:	20 e0       	ldi	r18, 0x00	; 0
    3420:	30 e0       	ldi	r19, 0x00	; 0
    3422:	40 e8       	ldi	r20, 0x80	; 128
    3424:	5f e3       	ldi	r21, 0x3F	; 63
    3426:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    342a:	88 23       	and	r24, r24
    342c:	2c f4       	brge	.+10     	; 0x3438 <main+0x20ae>
		__ticks = 1;
    342e:	81 e0       	ldi	r24, 0x01	; 1
    3430:	90 e0       	ldi	r25, 0x00	; 0
    3432:	9e af       	std	Y+62, r25	; 0x3e
    3434:	8d af       	std	Y+61, r24	; 0x3d
    3436:	46 c0       	rjmp	.+140    	; 0x34c4 <main+0x213a>
	else if (__tmp > 65535)
    3438:	fe 01       	movw	r30, r28
    343a:	ff 96       	adiw	r30, 0x3f	; 63
    343c:	60 81       	ld	r22, Z
    343e:	71 81       	ldd	r23, Z+1	; 0x01
    3440:	82 81       	ldd	r24, Z+2	; 0x02
    3442:	93 81       	ldd	r25, Z+3	; 0x03
    3444:	20 e0       	ldi	r18, 0x00	; 0
    3446:	3f ef       	ldi	r19, 0xFF	; 255
    3448:	4f e7       	ldi	r20, 0x7F	; 127
    344a:	57 e4       	ldi	r21, 0x47	; 71
    344c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3450:	18 16       	cp	r1, r24
    3452:	64 f5       	brge	.+88     	; 0x34ac <main+0x2122>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3454:	fe 01       	movw	r30, r28
    3456:	ed 5b       	subi	r30, 0xBD	; 189
    3458:	ff 4f       	sbci	r31, 0xFF	; 255
    345a:	60 81       	ld	r22, Z
    345c:	71 81       	ldd	r23, Z+1	; 0x01
    345e:	82 81       	ldd	r24, Z+2	; 0x02
    3460:	93 81       	ldd	r25, Z+3	; 0x03
    3462:	20 e0       	ldi	r18, 0x00	; 0
    3464:	30 e0       	ldi	r19, 0x00	; 0
    3466:	40 e2       	ldi	r20, 0x20	; 32
    3468:	51 e4       	ldi	r21, 0x41	; 65
    346a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    346e:	dc 01       	movw	r26, r24
    3470:	cb 01       	movw	r24, r22
    3472:	bc 01       	movw	r22, r24
    3474:	cd 01       	movw	r24, r26
    3476:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    347a:	dc 01       	movw	r26, r24
    347c:	cb 01       	movw	r24, r22
    347e:	9e af       	std	Y+62, r25	; 0x3e
    3480:	8d af       	std	Y+61, r24	; 0x3d
    3482:	0f c0       	rjmp	.+30     	; 0x34a2 <main+0x2118>
    3484:	89 e1       	ldi	r24, 0x19	; 25
    3486:	90 e0       	ldi	r25, 0x00	; 0
    3488:	9c af       	std	Y+60, r25	; 0x3c
    348a:	8b af       	std	Y+59, r24	; 0x3b
    348c:	8b ad       	ldd	r24, Y+59	; 0x3b
    348e:	9c ad       	ldd	r25, Y+60	; 0x3c
    3490:	01 97       	sbiw	r24, 0x01	; 1
    3492:	f1 f7       	brne	.-4      	; 0x3490 <main+0x2106>
    3494:	9c af       	std	Y+60, r25	; 0x3c
    3496:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3498:	8d ad       	ldd	r24, Y+61	; 0x3d
    349a:	9e ad       	ldd	r25, Y+62	; 0x3e
    349c:	01 97       	sbiw	r24, 0x01	; 1
    349e:	9e af       	std	Y+62, r25	; 0x3e
    34a0:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34a2:	8d ad       	ldd	r24, Y+61	; 0x3d
    34a4:	9e ad       	ldd	r25, Y+62	; 0x3e
    34a6:	00 97       	sbiw	r24, 0x00	; 0
    34a8:	69 f7       	brne	.-38     	; 0x3484 <main+0x20fa>
    34aa:	16 c0       	rjmp	.+44     	; 0x34d8 <main+0x214e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34ac:	fe 01       	movw	r30, r28
    34ae:	ff 96       	adiw	r30, 0x3f	; 63
    34b0:	60 81       	ld	r22, Z
    34b2:	71 81       	ldd	r23, Z+1	; 0x01
    34b4:	82 81       	ldd	r24, Z+2	; 0x02
    34b6:	93 81       	ldd	r25, Z+3	; 0x03
    34b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34bc:	dc 01       	movw	r26, r24
    34be:	cb 01       	movw	r24, r22
    34c0:	9e af       	std	Y+62, r25	; 0x3e
    34c2:	8d af       	std	Y+61, r24	; 0x3d
    34c4:	8d ad       	ldd	r24, Y+61	; 0x3d
    34c6:	9e ad       	ldd	r25, Y+62	; 0x3e
    34c8:	9a af       	std	Y+58, r25	; 0x3a
    34ca:	89 af       	std	Y+57, r24	; 0x39
    34cc:	89 ad       	ldd	r24, Y+57	; 0x39
    34ce:	9a ad       	ldd	r25, Y+58	; 0x3a
    34d0:	01 97       	sbiw	r24, 0x01	; 1
    34d2:	f1 f7       	brne	.-4      	; 0x34d0 <main+0x2146>
    34d4:	9a af       	std	Y+58, r25	; 0x3a
    34d6:	89 af       	std	Y+57, r24	; 0x39
			_delay_ms(3000);
			LED_voidOff(LED1);
    34d8:	fe 01       	movw	r30, r28
    34da:	e8 5d       	subi	r30, 0xD8	; 216
    34dc:	fe 4f       	sbci	r31, 0xFE	; 254
    34de:	60 81       	ld	r22, Z
    34e0:	71 81       	ldd	r23, Z+1	; 0x01
    34e2:	82 81       	ldd	r24, Z+2	; 0x02
    34e4:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
			LED_voidOff(LED6);
    34e8:	fe 01       	movw	r30, r28
    34ea:	ec 5c       	subi	r30, 0xCC	; 204
    34ec:	fe 4f       	sbci	r31, 0xFE	; 254
    34ee:	60 81       	ld	r22, Z
    34f0:	71 81       	ldd	r23, Z+1	; 0x01
    34f2:	82 81       	ldd	r24, Z+2	; 0x02
    34f4:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
    34f8:	80 e0       	ldi	r24, 0x00	; 0
    34fa:	90 e8       	ldi	r25, 0x80	; 128
    34fc:	ab e3       	ldi	r26, 0x3B	; 59
    34fe:	b5 e4       	ldi	r27, 0x45	; 69
    3500:	8d ab       	std	Y+53, r24	; 0x35
    3502:	9e ab       	std	Y+54, r25	; 0x36
    3504:	af ab       	std	Y+55, r26	; 0x37
    3506:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3508:	6d a9       	ldd	r22, Y+53	; 0x35
    350a:	7e a9       	ldd	r23, Y+54	; 0x36
    350c:	8f a9       	ldd	r24, Y+55	; 0x37
    350e:	98 ad       	ldd	r25, Y+56	; 0x38
    3510:	20 e0       	ldi	r18, 0x00	; 0
    3512:	30 e0       	ldi	r19, 0x00	; 0
    3514:	4a e7       	ldi	r20, 0x7A	; 122
    3516:	53 e4       	ldi	r21, 0x43	; 67
    3518:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    351c:	dc 01       	movw	r26, r24
    351e:	cb 01       	movw	r24, r22
    3520:	89 ab       	std	Y+49, r24	; 0x31
    3522:	9a ab       	std	Y+50, r25	; 0x32
    3524:	ab ab       	std	Y+51, r26	; 0x33
    3526:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3528:	69 a9       	ldd	r22, Y+49	; 0x31
    352a:	7a a9       	ldd	r23, Y+50	; 0x32
    352c:	8b a9       	ldd	r24, Y+51	; 0x33
    352e:	9c a9       	ldd	r25, Y+52	; 0x34
    3530:	20 e0       	ldi	r18, 0x00	; 0
    3532:	30 e0       	ldi	r19, 0x00	; 0
    3534:	40 e8       	ldi	r20, 0x80	; 128
    3536:	5f e3       	ldi	r21, 0x3F	; 63
    3538:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    353c:	88 23       	and	r24, r24
    353e:	2c f4       	brge	.+10     	; 0x354a <main+0x21c0>
		__ticks = 1;
    3540:	81 e0       	ldi	r24, 0x01	; 1
    3542:	90 e0       	ldi	r25, 0x00	; 0
    3544:	98 ab       	std	Y+48, r25	; 0x30
    3546:	8f a7       	std	Y+47, r24	; 0x2f
    3548:	3f c0       	rjmp	.+126    	; 0x35c8 <main+0x223e>
	else if (__tmp > 65535)
    354a:	69 a9       	ldd	r22, Y+49	; 0x31
    354c:	7a a9       	ldd	r23, Y+50	; 0x32
    354e:	8b a9       	ldd	r24, Y+51	; 0x33
    3550:	9c a9       	ldd	r25, Y+52	; 0x34
    3552:	20 e0       	ldi	r18, 0x00	; 0
    3554:	3f ef       	ldi	r19, 0xFF	; 255
    3556:	4f e7       	ldi	r20, 0x7F	; 127
    3558:	57 e4       	ldi	r21, 0x47	; 71
    355a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    355e:	18 16       	cp	r1, r24
    3560:	4c f5       	brge	.+82     	; 0x35b4 <main+0x222a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3562:	6d a9       	ldd	r22, Y+53	; 0x35
    3564:	7e a9       	ldd	r23, Y+54	; 0x36
    3566:	8f a9       	ldd	r24, Y+55	; 0x37
    3568:	98 ad       	ldd	r25, Y+56	; 0x38
    356a:	20 e0       	ldi	r18, 0x00	; 0
    356c:	30 e0       	ldi	r19, 0x00	; 0
    356e:	40 e2       	ldi	r20, 0x20	; 32
    3570:	51 e4       	ldi	r21, 0x41	; 65
    3572:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3576:	dc 01       	movw	r26, r24
    3578:	cb 01       	movw	r24, r22
    357a:	bc 01       	movw	r22, r24
    357c:	cd 01       	movw	r24, r26
    357e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3582:	dc 01       	movw	r26, r24
    3584:	cb 01       	movw	r24, r22
    3586:	98 ab       	std	Y+48, r25	; 0x30
    3588:	8f a7       	std	Y+47, r24	; 0x2f
    358a:	0f c0       	rjmp	.+30     	; 0x35aa <main+0x2220>
    358c:	89 e1       	ldi	r24, 0x19	; 25
    358e:	90 e0       	ldi	r25, 0x00	; 0
    3590:	9e a7       	std	Y+46, r25	; 0x2e
    3592:	8d a7       	std	Y+45, r24	; 0x2d
    3594:	8d a5       	ldd	r24, Y+45	; 0x2d
    3596:	9e a5       	ldd	r25, Y+46	; 0x2e
    3598:	01 97       	sbiw	r24, 0x01	; 1
    359a:	f1 f7       	brne	.-4      	; 0x3598 <main+0x220e>
    359c:	9e a7       	std	Y+46, r25	; 0x2e
    359e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35a0:	8f a5       	ldd	r24, Y+47	; 0x2f
    35a2:	98 a9       	ldd	r25, Y+48	; 0x30
    35a4:	01 97       	sbiw	r24, 0x01	; 1
    35a6:	98 ab       	std	Y+48, r25	; 0x30
    35a8:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35aa:	8f a5       	ldd	r24, Y+47	; 0x2f
    35ac:	98 a9       	ldd	r25, Y+48	; 0x30
    35ae:	00 97       	sbiw	r24, 0x00	; 0
    35b0:	69 f7       	brne	.-38     	; 0x358c <main+0x2202>
    35b2:	14 c0       	rjmp	.+40     	; 0x35dc <main+0x2252>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    35b4:	69 a9       	ldd	r22, Y+49	; 0x31
    35b6:	7a a9       	ldd	r23, Y+50	; 0x32
    35b8:	8b a9       	ldd	r24, Y+51	; 0x33
    35ba:	9c a9       	ldd	r25, Y+52	; 0x34
    35bc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35c0:	dc 01       	movw	r26, r24
    35c2:	cb 01       	movw	r24, r22
    35c4:	98 ab       	std	Y+48, r25	; 0x30
    35c6:	8f a7       	std	Y+47, r24	; 0x2f
    35c8:	8f a5       	ldd	r24, Y+47	; 0x2f
    35ca:	98 a9       	ldd	r25, Y+48	; 0x30
    35cc:	9c a7       	std	Y+44, r25	; 0x2c
    35ce:	8b a7       	std	Y+43, r24	; 0x2b
    35d0:	8b a5       	ldd	r24, Y+43	; 0x2b
    35d2:	9c a5       	ldd	r25, Y+44	; 0x2c
    35d4:	01 97       	sbiw	r24, 0x01	; 1
    35d6:	f1 f7       	brne	.-4      	; 0x35d4 <main+0x224a>
    35d8:	9c a7       	std	Y+44, r25	; 0x2c
    35da:	8b a7       	std	Y+43, r24	; 0x2b

	while(1){
		/*some button draw shape*/

		if(button_u8GetPressed(B5)==0){
while(button_u8GetPressed(B5)==0){
    35dc:	fe 01       	movw	r30, r28
    35de:	eb 5d       	subi	r30, 0xDB	; 219
    35e0:	fe 4f       	sbci	r31, 0xFE	; 254
    35e2:	60 81       	ld	r22, Z
    35e4:	71 81       	ldd	r23, Z+1	; 0x01
    35e6:	82 81       	ldd	r24, Z+2	; 0x02
    35e8:	0e 94 c4 1c 	call	0x3988	; 0x3988 <button_u8GetPressed>
    35ec:	88 23       	and	r24, r24
    35ee:	11 f4       	brne	.+4      	; 0x35f4 <main+0x226a>
    35f0:	0c 94 65 0e 	jmp	0x1cca	; 0x1cca <main+0x940>
    35f4:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <main+0x924>


	}}

		/*traffic light*/
		else if(button_u8GetPressed(B4)==0){
    35f8:	fe 01       	movw	r30, r28
    35fa:	ee 5d       	subi	r30, 0xDE	; 222
    35fc:	fe 4f       	sbci	r31, 0xFE	; 254
    35fe:	60 81       	ld	r22, Z
    3600:	71 81       	ldd	r23, Z+1	; 0x01
    3602:	82 81       	ldd	r24, Z+2	; 0x02
    3604:	0e 94 c4 1c 	call	0x3988	; 0x3988 <button_u8GetPressed>
    3608:	88 23       	and	r24, r24
    360a:	11 f0       	breq	.+4      	; 0x3610 <main+0x2286>
    360c:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <main+0x924>
    3610:	86 c1       	rjmp	.+780    	; 0x391e <main+0x2594>
while(button_u8GetPressed(B4)==0){
			LED_voidOn(LED7);
    3612:	fe 01       	movw	r30, r28
    3614:	e9 5c       	subi	r30, 0xC9	; 201
    3616:	fe 4f       	sbci	r31, 0xFE	; 254
    3618:	60 81       	ld	r22, Z
    361a:	71 81       	ldd	r23, Z+1	; 0x01
    361c:	82 81       	ldd	r24, Z+2	; 0x02
    361e:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
    3622:	80 e0       	ldi	r24, 0x00	; 0
    3624:	9b e1       	ldi	r25, 0x1B	; 27
    3626:	a7 e3       	ldi	r26, 0x37	; 55
    3628:	ba e4       	ldi	r27, 0x4A	; 74
    362a:	8f a3       	std	Y+39, r24	; 0x27
    362c:	98 a7       	std	Y+40, r25	; 0x28
    362e:	a9 a7       	std	Y+41, r26	; 0x29
    3630:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3632:	6f a1       	ldd	r22, Y+39	; 0x27
    3634:	78 a5       	ldd	r23, Y+40	; 0x28
    3636:	89 a5       	ldd	r24, Y+41	; 0x29
    3638:	9a a5       	ldd	r25, Y+42	; 0x2a
    363a:	20 e0       	ldi	r18, 0x00	; 0
    363c:	30 e0       	ldi	r19, 0x00	; 0
    363e:	4a e7       	ldi	r20, 0x7A	; 122
    3640:	53 e4       	ldi	r21, 0x43	; 67
    3642:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3646:	dc 01       	movw	r26, r24
    3648:	cb 01       	movw	r24, r22
    364a:	8b a3       	std	Y+35, r24	; 0x23
    364c:	9c a3       	std	Y+36, r25	; 0x24
    364e:	ad a3       	std	Y+37, r26	; 0x25
    3650:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3652:	6b a1       	ldd	r22, Y+35	; 0x23
    3654:	7c a1       	ldd	r23, Y+36	; 0x24
    3656:	8d a1       	ldd	r24, Y+37	; 0x25
    3658:	9e a1       	ldd	r25, Y+38	; 0x26
    365a:	20 e0       	ldi	r18, 0x00	; 0
    365c:	30 e0       	ldi	r19, 0x00	; 0
    365e:	40 e8       	ldi	r20, 0x80	; 128
    3660:	5f e3       	ldi	r21, 0x3F	; 63
    3662:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3666:	88 23       	and	r24, r24
    3668:	2c f4       	brge	.+10     	; 0x3674 <main+0x22ea>
		__ticks = 1;
    366a:	81 e0       	ldi	r24, 0x01	; 1
    366c:	90 e0       	ldi	r25, 0x00	; 0
    366e:	9a a3       	std	Y+34, r25	; 0x22
    3670:	89 a3       	std	Y+33, r24	; 0x21
    3672:	3f c0       	rjmp	.+126    	; 0x36f2 <main+0x2368>
	else if (__tmp > 65535)
    3674:	6b a1       	ldd	r22, Y+35	; 0x23
    3676:	7c a1       	ldd	r23, Y+36	; 0x24
    3678:	8d a1       	ldd	r24, Y+37	; 0x25
    367a:	9e a1       	ldd	r25, Y+38	; 0x26
    367c:	20 e0       	ldi	r18, 0x00	; 0
    367e:	3f ef       	ldi	r19, 0xFF	; 255
    3680:	4f e7       	ldi	r20, 0x7F	; 127
    3682:	57 e4       	ldi	r21, 0x47	; 71
    3684:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3688:	18 16       	cp	r1, r24
    368a:	4c f5       	brge	.+82     	; 0x36de <main+0x2354>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    368c:	6f a1       	ldd	r22, Y+39	; 0x27
    368e:	78 a5       	ldd	r23, Y+40	; 0x28
    3690:	89 a5       	ldd	r24, Y+41	; 0x29
    3692:	9a a5       	ldd	r25, Y+42	; 0x2a
    3694:	20 e0       	ldi	r18, 0x00	; 0
    3696:	30 e0       	ldi	r19, 0x00	; 0
    3698:	40 e2       	ldi	r20, 0x20	; 32
    369a:	51 e4       	ldi	r21, 0x41	; 65
    369c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    36a0:	dc 01       	movw	r26, r24
    36a2:	cb 01       	movw	r24, r22
    36a4:	bc 01       	movw	r22, r24
    36a6:	cd 01       	movw	r24, r26
    36a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36ac:	dc 01       	movw	r26, r24
    36ae:	cb 01       	movw	r24, r22
    36b0:	9a a3       	std	Y+34, r25	; 0x22
    36b2:	89 a3       	std	Y+33, r24	; 0x21
    36b4:	0f c0       	rjmp	.+30     	; 0x36d4 <main+0x234a>
    36b6:	89 e1       	ldi	r24, 0x19	; 25
    36b8:	90 e0       	ldi	r25, 0x00	; 0
    36ba:	98 a3       	std	Y+32, r25	; 0x20
    36bc:	8f 8f       	std	Y+31, r24	; 0x1f
    36be:	8f 8d       	ldd	r24, Y+31	; 0x1f
    36c0:	98 a1       	ldd	r25, Y+32	; 0x20
    36c2:	01 97       	sbiw	r24, 0x01	; 1
    36c4:	f1 f7       	brne	.-4      	; 0x36c2 <main+0x2338>
    36c6:	98 a3       	std	Y+32, r25	; 0x20
    36c8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36ca:	89 a1       	ldd	r24, Y+33	; 0x21
    36cc:	9a a1       	ldd	r25, Y+34	; 0x22
    36ce:	01 97       	sbiw	r24, 0x01	; 1
    36d0:	9a a3       	std	Y+34, r25	; 0x22
    36d2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36d4:	89 a1       	ldd	r24, Y+33	; 0x21
    36d6:	9a a1       	ldd	r25, Y+34	; 0x22
    36d8:	00 97       	sbiw	r24, 0x00	; 0
    36da:	69 f7       	brne	.-38     	; 0x36b6 <main+0x232c>
    36dc:	14 c0       	rjmp	.+40     	; 0x3706 <main+0x237c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36de:	6b a1       	ldd	r22, Y+35	; 0x23
    36e0:	7c a1       	ldd	r23, Y+36	; 0x24
    36e2:	8d a1       	ldd	r24, Y+37	; 0x25
    36e4:	9e a1       	ldd	r25, Y+38	; 0x26
    36e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36ea:	dc 01       	movw	r26, r24
    36ec:	cb 01       	movw	r24, r22
    36ee:	9a a3       	std	Y+34, r25	; 0x22
    36f0:	89 a3       	std	Y+33, r24	; 0x21
    36f2:	89 a1       	ldd	r24, Y+33	; 0x21
    36f4:	9a a1       	ldd	r25, Y+34	; 0x22
    36f6:	9e 8f       	std	Y+30, r25	; 0x1e
    36f8:	8d 8f       	std	Y+29, r24	; 0x1d
    36fa:	8d 8d       	ldd	r24, Y+29	; 0x1d
    36fc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    36fe:	01 97       	sbiw	r24, 0x01	; 1
    3700:	f1 f7       	brne	.-4      	; 0x36fe <main+0x2374>
    3702:	9e 8f       	std	Y+30, r25	; 0x1e
    3704:	8d 8f       	std	Y+29, r24	; 0x1d
			_delay_ms(3000000);
			LED_voidOff(LED7);
    3706:	fe 01       	movw	r30, r28
    3708:	e9 5c       	subi	r30, 0xC9	; 201
    370a:	fe 4f       	sbci	r31, 0xFE	; 254
    370c:	60 81       	ld	r22, Z
    370e:	71 81       	ldd	r23, Z+1	; 0x01
    3710:	82 81       	ldd	r24, Z+2	; 0x02
    3712:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
			LED_voidOn(LED8);
    3716:	fe 01       	movw	r30, r28
    3718:	e6 5c       	subi	r30, 0xC6	; 198
    371a:	fe 4f       	sbci	r31, 0xFE	; 254
    371c:	60 81       	ld	r22, Z
    371e:	71 81       	ldd	r23, Z+1	; 0x01
    3720:	82 81       	ldd	r24, Z+2	; 0x02
    3722:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
    3726:	80 e0       	ldi	r24, 0x00	; 0
    3728:	9c e7       	ldi	r25, 0x7C	; 124
    372a:	a2 e9       	ldi	r26, 0x92	; 146
    372c:	b8 e4       	ldi	r27, 0x48	; 72
    372e:	89 8f       	std	Y+25, r24	; 0x19
    3730:	9a 8f       	std	Y+26, r25	; 0x1a
    3732:	ab 8f       	std	Y+27, r26	; 0x1b
    3734:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3736:	69 8d       	ldd	r22, Y+25	; 0x19
    3738:	7a 8d       	ldd	r23, Y+26	; 0x1a
    373a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    373c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    373e:	20 e0       	ldi	r18, 0x00	; 0
    3740:	30 e0       	ldi	r19, 0x00	; 0
    3742:	4a e7       	ldi	r20, 0x7A	; 122
    3744:	53 e4       	ldi	r21, 0x43	; 67
    3746:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    374a:	dc 01       	movw	r26, r24
    374c:	cb 01       	movw	r24, r22
    374e:	8d 8b       	std	Y+21, r24	; 0x15
    3750:	9e 8b       	std	Y+22, r25	; 0x16
    3752:	af 8b       	std	Y+23, r26	; 0x17
    3754:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3756:	6d 89       	ldd	r22, Y+21	; 0x15
    3758:	7e 89       	ldd	r23, Y+22	; 0x16
    375a:	8f 89       	ldd	r24, Y+23	; 0x17
    375c:	98 8d       	ldd	r25, Y+24	; 0x18
    375e:	20 e0       	ldi	r18, 0x00	; 0
    3760:	30 e0       	ldi	r19, 0x00	; 0
    3762:	40 e8       	ldi	r20, 0x80	; 128
    3764:	5f e3       	ldi	r21, 0x3F	; 63
    3766:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    376a:	88 23       	and	r24, r24
    376c:	2c f4       	brge	.+10     	; 0x3778 <main+0x23ee>
		__ticks = 1;
    376e:	81 e0       	ldi	r24, 0x01	; 1
    3770:	90 e0       	ldi	r25, 0x00	; 0
    3772:	9c 8b       	std	Y+20, r25	; 0x14
    3774:	8b 8b       	std	Y+19, r24	; 0x13
    3776:	3f c0       	rjmp	.+126    	; 0x37f6 <main+0x246c>
	else if (__tmp > 65535)
    3778:	6d 89       	ldd	r22, Y+21	; 0x15
    377a:	7e 89       	ldd	r23, Y+22	; 0x16
    377c:	8f 89       	ldd	r24, Y+23	; 0x17
    377e:	98 8d       	ldd	r25, Y+24	; 0x18
    3780:	20 e0       	ldi	r18, 0x00	; 0
    3782:	3f ef       	ldi	r19, 0xFF	; 255
    3784:	4f e7       	ldi	r20, 0x7F	; 127
    3786:	57 e4       	ldi	r21, 0x47	; 71
    3788:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    378c:	18 16       	cp	r1, r24
    378e:	4c f5       	brge	.+82     	; 0x37e2 <main+0x2458>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3790:	69 8d       	ldd	r22, Y+25	; 0x19
    3792:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3794:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3796:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3798:	20 e0       	ldi	r18, 0x00	; 0
    379a:	30 e0       	ldi	r19, 0x00	; 0
    379c:	40 e2       	ldi	r20, 0x20	; 32
    379e:	51 e4       	ldi	r21, 0x41	; 65
    37a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    37a4:	dc 01       	movw	r26, r24
    37a6:	cb 01       	movw	r24, r22
    37a8:	bc 01       	movw	r22, r24
    37aa:	cd 01       	movw	r24, r26
    37ac:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37b0:	dc 01       	movw	r26, r24
    37b2:	cb 01       	movw	r24, r22
    37b4:	9c 8b       	std	Y+20, r25	; 0x14
    37b6:	8b 8b       	std	Y+19, r24	; 0x13
    37b8:	0f c0       	rjmp	.+30     	; 0x37d8 <main+0x244e>
    37ba:	89 e1       	ldi	r24, 0x19	; 25
    37bc:	90 e0       	ldi	r25, 0x00	; 0
    37be:	9a 8b       	std	Y+18, r25	; 0x12
    37c0:	89 8b       	std	Y+17, r24	; 0x11
    37c2:	89 89       	ldd	r24, Y+17	; 0x11
    37c4:	9a 89       	ldd	r25, Y+18	; 0x12
    37c6:	01 97       	sbiw	r24, 0x01	; 1
    37c8:	f1 f7       	brne	.-4      	; 0x37c6 <main+0x243c>
    37ca:	9a 8b       	std	Y+18, r25	; 0x12
    37cc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    37ce:	8b 89       	ldd	r24, Y+19	; 0x13
    37d0:	9c 89       	ldd	r25, Y+20	; 0x14
    37d2:	01 97       	sbiw	r24, 0x01	; 1
    37d4:	9c 8b       	std	Y+20, r25	; 0x14
    37d6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    37d8:	8b 89       	ldd	r24, Y+19	; 0x13
    37da:	9c 89       	ldd	r25, Y+20	; 0x14
    37dc:	00 97       	sbiw	r24, 0x00	; 0
    37de:	69 f7       	brne	.-38     	; 0x37ba <main+0x2430>
    37e0:	14 c0       	rjmp	.+40     	; 0x380a <main+0x2480>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    37e2:	6d 89       	ldd	r22, Y+21	; 0x15
    37e4:	7e 89       	ldd	r23, Y+22	; 0x16
    37e6:	8f 89       	ldd	r24, Y+23	; 0x17
    37e8:	98 8d       	ldd	r25, Y+24	; 0x18
    37ea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37ee:	dc 01       	movw	r26, r24
    37f0:	cb 01       	movw	r24, r22
    37f2:	9c 8b       	std	Y+20, r25	; 0x14
    37f4:	8b 8b       	std	Y+19, r24	; 0x13
    37f6:	8b 89       	ldd	r24, Y+19	; 0x13
    37f8:	9c 89       	ldd	r25, Y+20	; 0x14
    37fa:	98 8b       	std	Y+16, r25	; 0x10
    37fc:	8f 87       	std	Y+15, r24	; 0x0f
    37fe:	8f 85       	ldd	r24, Y+15	; 0x0f
    3800:	98 89       	ldd	r25, Y+16	; 0x10
    3802:	01 97       	sbiw	r24, 0x01	; 1
    3804:	f1 f7       	brne	.-4      	; 0x3802 <main+0x2478>
    3806:	98 8b       	std	Y+16, r25	; 0x10
    3808:	8f 87       	std	Y+15, r24	; 0x0f
			_delay_ms(300000);
			LED_voidOff(LED8);
    380a:	fe 01       	movw	r30, r28
    380c:	e6 5c       	subi	r30, 0xC6	; 198
    380e:	fe 4f       	sbci	r31, 0xFE	; 254
    3810:	60 81       	ld	r22, Z
    3812:	71 81       	ldd	r23, Z+1	; 0x01
    3814:	82 81       	ldd	r24, Z+2	; 0x02
    3816:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>
			LED_voidOn(LED9);
    381a:	fe 01       	movw	r30, r28
    381c:	e3 5c       	subi	r30, 0xC3	; 195
    381e:	fe 4f       	sbci	r31, 0xFE	; 254
    3820:	60 81       	ld	r22, Z
    3822:	71 81       	ldd	r23, Z+1	; 0x01
    3824:	82 81       	ldd	r24, Z+2	; 0x02
    3826:	0e 94 73 09 	call	0x12e6	; 0x12e6 <LED_voidOn>
    382a:	80 e0       	ldi	r24, 0x00	; 0
    382c:	9c e7       	ldi	r25, 0x7C	; 124
    382e:	a2 e9       	ldi	r26, 0x92	; 146
    3830:	b8 e4       	ldi	r27, 0x48	; 72
    3832:	8b 87       	std	Y+11, r24	; 0x0b
    3834:	9c 87       	std	Y+12, r25	; 0x0c
    3836:	ad 87       	std	Y+13, r26	; 0x0d
    3838:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    383a:	6b 85       	ldd	r22, Y+11	; 0x0b
    383c:	7c 85       	ldd	r23, Y+12	; 0x0c
    383e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3840:	9e 85       	ldd	r25, Y+14	; 0x0e
    3842:	20 e0       	ldi	r18, 0x00	; 0
    3844:	30 e0       	ldi	r19, 0x00	; 0
    3846:	4a e7       	ldi	r20, 0x7A	; 122
    3848:	53 e4       	ldi	r21, 0x43	; 67
    384a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    384e:	dc 01       	movw	r26, r24
    3850:	cb 01       	movw	r24, r22
    3852:	8f 83       	std	Y+7, r24	; 0x07
    3854:	98 87       	std	Y+8, r25	; 0x08
    3856:	a9 87       	std	Y+9, r26	; 0x09
    3858:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    385a:	6f 81       	ldd	r22, Y+7	; 0x07
    385c:	78 85       	ldd	r23, Y+8	; 0x08
    385e:	89 85       	ldd	r24, Y+9	; 0x09
    3860:	9a 85       	ldd	r25, Y+10	; 0x0a
    3862:	20 e0       	ldi	r18, 0x00	; 0
    3864:	30 e0       	ldi	r19, 0x00	; 0
    3866:	40 e8       	ldi	r20, 0x80	; 128
    3868:	5f e3       	ldi	r21, 0x3F	; 63
    386a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    386e:	88 23       	and	r24, r24
    3870:	2c f4       	brge	.+10     	; 0x387c <main+0x24f2>
		__ticks = 1;
    3872:	81 e0       	ldi	r24, 0x01	; 1
    3874:	90 e0       	ldi	r25, 0x00	; 0
    3876:	9e 83       	std	Y+6, r25	; 0x06
    3878:	8d 83       	std	Y+5, r24	; 0x05
    387a:	3f c0       	rjmp	.+126    	; 0x38fa <main+0x2570>
	else if (__tmp > 65535)
    387c:	6f 81       	ldd	r22, Y+7	; 0x07
    387e:	78 85       	ldd	r23, Y+8	; 0x08
    3880:	89 85       	ldd	r24, Y+9	; 0x09
    3882:	9a 85       	ldd	r25, Y+10	; 0x0a
    3884:	20 e0       	ldi	r18, 0x00	; 0
    3886:	3f ef       	ldi	r19, 0xFF	; 255
    3888:	4f e7       	ldi	r20, 0x7F	; 127
    388a:	57 e4       	ldi	r21, 0x47	; 71
    388c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3890:	18 16       	cp	r1, r24
    3892:	4c f5       	brge	.+82     	; 0x38e6 <main+0x255c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3894:	6b 85       	ldd	r22, Y+11	; 0x0b
    3896:	7c 85       	ldd	r23, Y+12	; 0x0c
    3898:	8d 85       	ldd	r24, Y+13	; 0x0d
    389a:	9e 85       	ldd	r25, Y+14	; 0x0e
    389c:	20 e0       	ldi	r18, 0x00	; 0
    389e:	30 e0       	ldi	r19, 0x00	; 0
    38a0:	40 e2       	ldi	r20, 0x20	; 32
    38a2:	51 e4       	ldi	r21, 0x41	; 65
    38a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    38a8:	dc 01       	movw	r26, r24
    38aa:	cb 01       	movw	r24, r22
    38ac:	bc 01       	movw	r22, r24
    38ae:	cd 01       	movw	r24, r26
    38b0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38b4:	dc 01       	movw	r26, r24
    38b6:	cb 01       	movw	r24, r22
    38b8:	9e 83       	std	Y+6, r25	; 0x06
    38ba:	8d 83       	std	Y+5, r24	; 0x05
    38bc:	0f c0       	rjmp	.+30     	; 0x38dc <main+0x2552>
    38be:	89 e1       	ldi	r24, 0x19	; 25
    38c0:	90 e0       	ldi	r25, 0x00	; 0
    38c2:	9c 83       	std	Y+4, r25	; 0x04
    38c4:	8b 83       	std	Y+3, r24	; 0x03
    38c6:	8b 81       	ldd	r24, Y+3	; 0x03
    38c8:	9c 81       	ldd	r25, Y+4	; 0x04
    38ca:	01 97       	sbiw	r24, 0x01	; 1
    38cc:	f1 f7       	brne	.-4      	; 0x38ca <main+0x2540>
    38ce:	9c 83       	std	Y+4, r25	; 0x04
    38d0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38d2:	8d 81       	ldd	r24, Y+5	; 0x05
    38d4:	9e 81       	ldd	r25, Y+6	; 0x06
    38d6:	01 97       	sbiw	r24, 0x01	; 1
    38d8:	9e 83       	std	Y+6, r25	; 0x06
    38da:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38dc:	8d 81       	ldd	r24, Y+5	; 0x05
    38de:	9e 81       	ldd	r25, Y+6	; 0x06
    38e0:	00 97       	sbiw	r24, 0x00	; 0
    38e2:	69 f7       	brne	.-38     	; 0x38be <main+0x2534>
    38e4:	14 c0       	rjmp	.+40     	; 0x390e <main+0x2584>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38e6:	6f 81       	ldd	r22, Y+7	; 0x07
    38e8:	78 85       	ldd	r23, Y+8	; 0x08
    38ea:	89 85       	ldd	r24, Y+9	; 0x09
    38ec:	9a 85       	ldd	r25, Y+10	; 0x0a
    38ee:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38f2:	dc 01       	movw	r26, r24
    38f4:	cb 01       	movw	r24, r22
    38f6:	9e 83       	std	Y+6, r25	; 0x06
    38f8:	8d 83       	std	Y+5, r24	; 0x05
    38fa:	8d 81       	ldd	r24, Y+5	; 0x05
    38fc:	9e 81       	ldd	r25, Y+6	; 0x06
    38fe:	9a 83       	std	Y+2, r25	; 0x02
    3900:	89 83       	std	Y+1, r24	; 0x01
    3902:	89 81       	ldd	r24, Y+1	; 0x01
    3904:	9a 81       	ldd	r25, Y+2	; 0x02
    3906:	01 97       	sbiw	r24, 0x01	; 1
    3908:	f1 f7       	brne	.-4      	; 0x3906 <main+0x257c>
    390a:	9a 83       	std	Y+2, r25	; 0x02
    390c:	89 83       	std	Y+1, r24	; 0x01
			_delay_ms(300000);
			LED_voidOff(LED9);
    390e:	fe 01       	movw	r30, r28
    3910:	e3 5c       	subi	r30, 0xC3	; 195
    3912:	fe 4f       	sbci	r31, 0xFE	; 254
    3914:	60 81       	ld	r22, Z
    3916:	71 81       	ldd	r23, Z+1	; 0x01
    3918:	82 81       	ldd	r24, Z+2	; 0x02
    391a:	0e 94 92 09 	call	0x1324	; 0x1324 <LED_voidOff>

	}}

		/*traffic light*/
		else if(button_u8GetPressed(B4)==0){
while(button_u8GetPressed(B4)==0){
    391e:	fe 01       	movw	r30, r28
    3920:	ee 5d       	subi	r30, 0xDE	; 222
    3922:	fe 4f       	sbci	r31, 0xFE	; 254
    3924:	60 81       	ld	r22, Z
    3926:	71 81       	ldd	r23, Z+1	; 0x01
    3928:	82 81       	ldd	r24, Z+2	; 0x02
    392a:	0e 94 c4 1c 	call	0x3988	; 0x3988 <button_u8GetPressed>
    392e:	88 23       	and	r24, r24
    3930:	09 f4       	brne	.+2      	; 0x3934 <main+0x25aa>
    3932:	6f ce       	rjmp	.-802    	; 0x3612 <main+0x2288>
    3934:	0c 94 57 0e 	jmp	0x1cae	; 0x1cae <main+0x924>

00003938 <button_voidInit>:



}*/
void button_voidInit ( button Button_Configuration)
{
    3938:	df 93       	push	r29
    393a:	cf 93       	push	r28
    393c:	00 d0       	rcall	.+0      	; 0x393e <button_voidInit+0x6>
    393e:	0f 92       	push	r0
    3940:	cd b7       	in	r28, 0x3d	; 61
    3942:	de b7       	in	r29, 0x3e	; 62
    3944:	69 83       	std	Y+1, r22	; 0x01
    3946:	7a 83       	std	Y+2, r23	; 0x02
    3948:	8b 83       	std	Y+3, r24	; 0x03
DIO_enumSetPinDirection( Button_Configuration.Port , Button_Configuration.Pin ,DIO_INPUT);
    394a:	89 81       	ldd	r24, Y+1	; 0x01
    394c:	9a 81       	ldd	r25, Y+2	; 0x02
    394e:	69 2f       	mov	r22, r25
    3950:	40 e0       	ldi	r20, 0x00	; 0
    3952:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <DIO_enumSetPinDirection>
if( Button_Configuration.Pull_State == button_PULL_UP )
    3956:	8b 81       	ldd	r24, Y+3	; 0x03
    3958:	81 30       	cpi	r24, 0x01	; 1
    395a:	39 f4       	brne	.+14     	; 0x396a <button_voidInit+0x32>
{
DIO_enumSetPinValue( Button_Configuration.Port , Button_Configuration.Pin ,
    395c:	89 81       	ldd	r24, Y+1	; 0x01
    395e:	9a 81       	ldd	r25, Y+2	; 0x02
    3960:	69 2f       	mov	r22, r25
    3962:	41 e0       	ldi	r20, 0x01	; 1
    3964:	0e 94 80 07 	call	0xf00	; 0xf00 <DIO_enumSetPinValue>
    3968:	09 c0       	rjmp	.+18     	; 0x397c <button_voidInit+0x44>
DIO_HIGH);
}
else if( Button_Configuration.Pull_State == button_FLOATING )
    396a:	8b 81       	ldd	r24, Y+3	; 0x03
    396c:	88 23       	and	r24, r24
    396e:	31 f4       	brne	.+12     	; 0x397c <button_voidInit+0x44>
{
DIO_enumSetPinValue( Button_Configuration.Port , Button_Configuration.Pin ,DIO_LOW );
    3970:	89 81       	ldd	r24, Y+1	; 0x01
    3972:	9a 81       	ldd	r25, Y+2	; 0x02
    3974:	69 2f       	mov	r22, r25
    3976:	40 e0       	ldi	r20, 0x00	; 0
    3978:	0e 94 80 07 	call	0xf00	; 0xf00 <DIO_enumSetPinValue>
}
}
    397c:	0f 90       	pop	r0
    397e:	0f 90       	pop	r0
    3980:	0f 90       	pop	r0
    3982:	cf 91       	pop	r28
    3984:	df 91       	pop	r29
    3986:	08 95       	ret

00003988 <button_u8GetPressed>:
u8 button_u8GetPressed( button Button_Configuration){
    3988:	df 93       	push	r29
    398a:	cf 93       	push	r28
    398c:	00 d0       	rcall	.+0      	; 0x398e <button_u8GetPressed+0x6>
    398e:	00 d0       	rcall	.+0      	; 0x3990 <button_u8GetPressed+0x8>
    3990:	cd b7       	in	r28, 0x3d	; 61
    3992:	de b7       	in	r29, 0x3e	; 62
    3994:	6a 83       	std	Y+2, r22	; 0x02
    3996:	7b 83       	std	Y+3, r23	; 0x03
    3998:	8c 83       	std	Y+4, r24	; 0x04

	u8 Loc_u8Result = 0;
    399a:	19 82       	std	Y+1, r1	; 0x01
	DIO_enumGetPinValue ( Button_Configuration.Port , Button_Configuration.Pin ,&Loc_u8Result);
    399c:	8a 81       	ldd	r24, Y+2	; 0x02
    399e:	9b 81       	ldd	r25, Y+3	; 0x03
    39a0:	69 2f       	mov	r22, r25
    39a2:	9e 01       	movw	r18, r28
    39a4:	2f 5f       	subi	r18, 0xFF	; 255
    39a6:	3f 4f       	sbci	r19, 0xFF	; 255
    39a8:	a9 01       	movw	r20, r18
    39aa:	0e 94 83 08 	call	0x1106	; 0x1106 <DIO_enumGetPinValue>
	return Loc_u8Result;
    39ae:	89 81       	ldd	r24, Y+1	; 0x01
}
    39b0:	0f 90       	pop	r0
    39b2:	0f 90       	pop	r0
    39b4:	0f 90       	pop	r0
    39b6:	0f 90       	pop	r0
    39b8:	cf 91       	pop	r28
    39ba:	df 91       	pop	r29
    39bc:	08 95       	ret

000039be <__prologue_saves__>:
    39be:	2f 92       	push	r2
    39c0:	3f 92       	push	r3
    39c2:	4f 92       	push	r4
    39c4:	5f 92       	push	r5
    39c6:	6f 92       	push	r6
    39c8:	7f 92       	push	r7
    39ca:	8f 92       	push	r8
    39cc:	9f 92       	push	r9
    39ce:	af 92       	push	r10
    39d0:	bf 92       	push	r11
    39d2:	cf 92       	push	r12
    39d4:	df 92       	push	r13
    39d6:	ef 92       	push	r14
    39d8:	ff 92       	push	r15
    39da:	0f 93       	push	r16
    39dc:	1f 93       	push	r17
    39de:	cf 93       	push	r28
    39e0:	df 93       	push	r29
    39e2:	cd b7       	in	r28, 0x3d	; 61
    39e4:	de b7       	in	r29, 0x3e	; 62
    39e6:	ca 1b       	sub	r28, r26
    39e8:	db 0b       	sbc	r29, r27
    39ea:	0f b6       	in	r0, 0x3f	; 63
    39ec:	f8 94       	cli
    39ee:	de bf       	out	0x3e, r29	; 62
    39f0:	0f be       	out	0x3f, r0	; 63
    39f2:	cd bf       	out	0x3d, r28	; 61
    39f4:	09 94       	ijmp

000039f6 <__epilogue_restores__>:
    39f6:	2a 88       	ldd	r2, Y+18	; 0x12
    39f8:	39 88       	ldd	r3, Y+17	; 0x11
    39fa:	48 88       	ldd	r4, Y+16	; 0x10
    39fc:	5f 84       	ldd	r5, Y+15	; 0x0f
    39fe:	6e 84       	ldd	r6, Y+14	; 0x0e
    3a00:	7d 84       	ldd	r7, Y+13	; 0x0d
    3a02:	8c 84       	ldd	r8, Y+12	; 0x0c
    3a04:	9b 84       	ldd	r9, Y+11	; 0x0b
    3a06:	aa 84       	ldd	r10, Y+10	; 0x0a
    3a08:	b9 84       	ldd	r11, Y+9	; 0x09
    3a0a:	c8 84       	ldd	r12, Y+8	; 0x08
    3a0c:	df 80       	ldd	r13, Y+7	; 0x07
    3a0e:	ee 80       	ldd	r14, Y+6	; 0x06
    3a10:	fd 80       	ldd	r15, Y+5	; 0x05
    3a12:	0c 81       	ldd	r16, Y+4	; 0x04
    3a14:	1b 81       	ldd	r17, Y+3	; 0x03
    3a16:	aa 81       	ldd	r26, Y+2	; 0x02
    3a18:	b9 81       	ldd	r27, Y+1	; 0x01
    3a1a:	ce 0f       	add	r28, r30
    3a1c:	d1 1d       	adc	r29, r1
    3a1e:	0f b6       	in	r0, 0x3f	; 63
    3a20:	f8 94       	cli
    3a22:	de bf       	out	0x3e, r29	; 62
    3a24:	0f be       	out	0x3f, r0	; 63
    3a26:	cd bf       	out	0x3d, r28	; 61
    3a28:	ed 01       	movw	r28, r26
    3a2a:	08 95       	ret

00003a2c <_exit>:
    3a2c:	f8 94       	cli

00003a2e <__stop_program>:
    3a2e:	ff cf       	rjmp	.-2      	; 0x3a2e <__stop_program>
